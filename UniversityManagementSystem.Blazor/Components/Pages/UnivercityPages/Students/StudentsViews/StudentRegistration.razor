@page "/student/registrations"
@attribute [Authorize]
@inject ICourseRegistrationService _courseRegistrationService
@inject IStudentServices _studentService
@inject ICourseService _courseService
@rendermode InteractiveServer
<PageTitle>تسجيل المواد - الجامعة الذكية</PageTitle>

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-0 fw-bold text-primary">تسجيل المواد</h1>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/">الرئيسية</a></li>
                            <li class="breadcrumb-item"><a href="/students">شؤون الطلاب</a></li>
                            <li class="breadcrumb-item active">تسجيل المواد</li>
                        </ol>
                    </nav>
                </div>
                <div>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addRegistrationModal">
                        <i class="fas fa-plus me-2"></i>تسجيل مادة جديدة
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- إحصائيات سريعة -->
    <div class="row g-4 mb-4">
        <div class="col-md-3">
            <div class="card border-primary border-start border-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="text-muted">إجمالي التسجيلات</h5>
                            <h2 class="mb-0 fw-bold">@registrationSummary.TotalRegistrations</h2>
                        </div>
                        <div class="bg-primary bg-opacity-10 p-3 rounded-circle">
                            <i class="fas fa-book-open fa-2x text-primary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-success border-start border-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="text-muted">النشطة</h5>
                            <h2 class="mb-0 fw-bold">@registrationSummary.ActiveRegistrations</h2>
                        </div>
                        <div class="bg-success bg-opacity-10 p-3 rounded-circle">
                            <i class="fas fa-check-circle fa-2x text-success"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-warning border-start border-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="text-muted">الملغية</h5>
                            <h2 class="mb-0 fw-bold">@registrationSummary.CancelledRegistrations</h2>
                        </div>
                        <div class="bg-warning bg-opacity-10 p-3 rounded-circle">
                            <i class="fas fa-times-circle fa-2x text-warning"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-info border-start border-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="text-muted">الإيرادات</h5>
                            <h2 class="mb-0 fw-bold">@registrationSummary.TotalRevenue.ToString("C")</h2>
                        </div>
                        <div class="bg-info bg-opacity-10 p-3 rounded-circle">
                            <i class="fas fa-money-bill-wave fa-2x text-info"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- قائمة التسجيلات -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-white">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <h5 class="mb-0">قائمة التسجيلات</h5>
                        </div>
                        <div class="col-md-6">
                            <div class="d-flex justify-content-md-end gap-2">
                                <div class="input-group" style="max-width: 300px;">
                                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                                    <input type="text" class="form-control" placeholder="بحث عن طالب أو مادة..." @bind="searchTerm" @oninput="SearchRegistrations">
                                </div>
                                <select class="form-select" style="max-width: 150px;" @onchange="FilterByStatus">
                                    <option value="">جميع الحالات</option>
                                    <option value="مسجل">مسجل</option>
                                    <option value="ملغي">ملغي</option>
                                    <option value="مكتمل">مكتمل</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>#</th>
                                    <th>الطالب</th>
                                    <th>المادة</th>
                                    <th>القسم</th>
                                    <th>تاريخ التسجيل</th>
                                    <th>المبلغ المدفوع</th>
                                    <th>تاريخ الدفع</th>
                                    <th>الحالة</th>
                                    <th>الإجراءات</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (registrations.Any())
                                {
                                    @for (int i = 0; i < registrations.Count; i++)
                                    {
                                        var registration = registrations[i];
                                        <tr>
                                            <td>@registration.Id</td>
                                            <td>@registration.Student.FullName</td>
                                            <td>@registration.Course.Name</td>
                                            <td>@registration.DepartmentName</td>
                                            <td>@registration.RegistrationDate.ToString("yyyy-MM-dd")</td>
                                            <td>@registration.AmountPaid.ToString("C")</td>
                                            <td>@registration.PaymentDate.ToString("yyyy-MM-dd")</td>
                                            <td>
                                                <span class="badge @(registration.Status == "مسجل" ? "bg-success" :
                                                                    registration.Status == "ملغي" ? "bg-danger" :
                                                                    registration.Status == "مكتمل" ? "bg-info" : "bg-secondary")">
                                                    @registration.Status
                                                </span>
                                            </td>
                                            <td>
                                                <div class="dropdown">
                                                    <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                                        <i class="fas fa-ellipsis-v"></i>
                                                    </button>
                                                    <ul class="dropdown-menu">
                                                        <li><a class="dropdown-item" href="javascript:void(0)" @onclick="() => ViewRegistrationDetails(registration)"><i class="fas fa-eye me-2"></i>عرض التفاصيل</a></li>
                                                        @if (registration.Status == "مسجل")
                                                        {
                                                            <li><a class="dropdown-item text-warning" href="javascript:void(0)" @onclick="() => CancelRegistration(registration.Id)"><i class="fas fa-times me-2"></i>إلغاء التسجيل</a></li>
                                                            <li><a class="dropdown-item text-info" href="javascript:void(0)" @onclick="() => CompleteRegistration(registration.Id)"><i class="fas fa-check me-2"></i>إكمال التسجيل</a></li>
                                                        }
                                                        <li><hr class="dropdown-divider"></li>
                                                        <li><a class="dropdown-item text-danger" href="javascript:void(0)" @onclick="() => DeleteRegistration(registration.Id)"><i class="fas fa-trash me-2"></i>حذف</a></li>
                                                    </ul>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="9" class="text-center">لا توجد تسجيلات</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal تسجيل مادة جديدة -->
<div class="modal fade" id="addRegistrationModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">تسجيل مادة جديدة</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="row">
                        <p>Selected Student ID: @newRegistration.StudentId</p>
                       @*  <div class="col-md-6 mb-3">
                            <label class="form-label">الطالب *</label>
                            <select @bind="newRegistration.StudentId" class="form-control">
                                <option disabled selected value="">اختر طالبًا</option>
                                @foreach (var student in students)
                                {
                                    <option value="@student.Id"> @($"{student.FullName} - {student.Id}")</option>
                                }
                            </select>
                        </div> *@
                        <EditForm Model="@newRegistration">
                            <DataAnnotationsValidator />

                            <div class="col-md-6 mb-3">
                                <label class="form-label">الطالب *</label>
                                <InputSelect @bind-Value="newRegistration.StudentId" class="form-control">
                                    <option disabled selected value="">اختر طالبًا</option>
                                    @foreach (var student in students)
                                    {
                                        <option value="@student.Id">@student.FullName</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() => newRegistration.StudentId)" />
                            </div>
                        </EditForm>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">المادة *</label>
                            <select class="form-select" @bind="newRegistration.CourseId" required>
                                <option value="">اختر المادة</option>
                                @foreach (var course in courses)
                                {
                                    <option value="@course.Id">@course.Name</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">المبلغ المدفوع *</label>
                            <input type="number" step="0.01" class="form-control" placeholder="أدخل المبلغ المدفوع" @bind="newRegistration.AmountPaid" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">تاريخ الدفع *</label>
                            <input type="date" class="form-control" @bind="newRegistration.PaymentDate" required>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">الحالة *</label>
                        <select class="form-select" @bind="newRegistration.Status" required>
                            <option value="مسجل">مسجل</option>
                            <option value="ملغي">ملغي</option>
                            <option value="مكتمل">مكتمل</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                <button type="button" class="btn btn-primary" @onclick="CreateRegistration">حفظ التسجيل</button>
            </div>
        </div>
    </div>
</div>

@code {
    private List<CourseRegistrationDto> registrations = new();
    private List<StudentDto> students = new();
    private List<CourseDto> courses = new();
    private CourseRegistrationDto newRegistration = new();
    private CourseRegistrationSummaryDto registrationSummary = new();
    private string searchTerm = "";
    private string selectedStatus = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadStudents();
        await LoadCourses();
        await LoadRegistrationSummary();
        await LoadRegistrations();
    }

    private async Task LoadStudents()
    {
        try
        {
            students = await _studentService.GetAllStudentsAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading students: {ex.Message}");
        }
    }

    private async Task LoadCourses()
    {
        try
        {
            courses = await _courseService.GetAllCoursesAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading courses: {ex.Message}");
        }
    }

    private async Task LoadRegistrations()
    {
        try
        {
            registrations = await _courseRegistrationService.GetAllRegistrationsAsync();

            // تطبيق الفلاتر
            if (!string.IsNullOrEmpty(searchTerm))
            {
                registrations = registrations.Where(r =>
                    r.Student.FullName.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
                    r.Course.Name.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)).ToList();
            }

            if (!string.IsNullOrEmpty(selectedStatus))
            {
                registrations = registrations.Where(r => r.Status == selectedStatus).ToList();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading registrations: {ex.Message}");
        }
    }

    private async Task LoadRegistrationSummary()
    {
        try
        {
            var allRegistrations = await _courseRegistrationService.GetAllRegistrationsAsync();

            registrationSummary = new CourseRegistrationSummaryDto
                {
                    TotalRegistrations = allRegistrations.Count,
                    ActiveRegistrations = allRegistrations.Count(r => r.Status == "مسجل"),
                    CancelledRegistrations = allRegistrations.Count(r => r.Status == "ملغي"),
                    CompletedRegistrations = allRegistrations.Count(r => r.Status == "مكتمل"),
                    TotalRevenue = allRegistrations.Where(r => r.Status == "مسجل" || r.Status == "مكتمل").Sum(r => r.AmountPaid),
                    OutstandingPayments = allRegistrations.Where(r => r.Status == "مسجل" && r.AmountPaid < r.CourseFee).Sum(r => r.CourseFee - r.AmountPaid)
                };
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading registration summary: {ex.Message}");
        }
    }

    private async Task SearchRegistrations(ChangeEventArgs e)
    {
        searchTerm = e.Value?.ToString() ?? "";
        await LoadRegistrations();
    }

    private async Task FilterByStatus(ChangeEventArgs e)
    {
        selectedStatus = e.Value?.ToString() ?? "";
        await LoadRegistrations();
    }

    private async Task CreateRegistration()
    {
        try
        {
            newRegistration.RegistrationDate = DateTime.Now;

            if (string.IsNullOrWhiteSpace(newRegistration.StudentId))
            {
                Console.WriteLine("StudentId is invalid.");
                return;
            }

            var createdRegistration = await _courseRegistrationService.CreateRegistrationAsync(newRegistration);

            newRegistration = new CourseRegistrationDto();
            await LoadRegistrationSummary();
            await LoadRegistrations();

            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error creating registration: {ex.Message}");
        }
    }

    private void ViewRegistrationDetails(CourseRegistrationDto registration)
    {
        // عرض تفاصيل التسجيل
    }

    private async Task CancelRegistration(int registrationId)
    {
        try
        {
            await _courseRegistrationService.CancelRegistrationAsync(registrationId);

            // تحديث القائمة والإحصائيات
            await LoadRegistrationSummary();
            await LoadRegistrations();

            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error cancelling registration: {ex.Message}");
        }
    }

    private async Task CompleteRegistration(int registrationId)
    {
        try
        {
            await _courseRegistrationService.CompleteRegistrationAsync(registrationId);

            // تحديث القائمة والإحصائيات
            await LoadRegistrationSummary();
            await LoadRegistrations();

            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error completing registration: {ex.Message}");
        }
    }

    private async Task DeleteRegistration(int registrationId)
    {
        try
        {
            await _courseRegistrationService.DeleteRegistrationAsync(registrationId);

            // تحديث القائمة والإحصائيات
            await LoadRegistrationSummary();
            await LoadRegistrations();

            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting registration: {ex.Message}");
        }
    }
}