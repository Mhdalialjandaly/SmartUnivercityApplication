@page "/"
@attribute [Authorize]
@inject IStudentServices StudentService
@inject IEmployeeService EmployeeService
@inject IDepartmentService DepartmentService
@inject ICourseService CourseService
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inject UserManager<User> UserManager
@inject RoleManager<IdentityRole> RoleManager
@inject SignInManager<User> SignInManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>لوحة التحكم - نظام إدارة الجامعة</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        :root {
            --primary-color: #3498db;
            --secondary-color: #2980b9;
            --dark-color: #2c3e50;
            --light-color: #ecf0f1;
            --success-color: #2ecc71;
            --danger-color: #e74c3c;
            --warning-color: #f39c12;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Arial', sans-serif;
        }

        body {
            background-color: #f5f6fa;
            color: #333;
        }

        .dashboard {
            display: flex;
            min-height: 100vh;
        }

        /* الشريط الجانبي */
        .sidebar {
            width: 250px;
            background-color: var(--dark-color);
            color: white;
            transition: all 0.3s;
        }

        .sidebar-header {
            padding: 20px;
            background-color: rgba(0, 0, 0, 0.2);
            display: flex;
            align-items: center;
        }

            .sidebar-header img {
                width: 40px;
                height: 40px;
                margin-left: 10px;
            }

            .sidebar-header h3 {
                font-size: 18px;
            }

        .sidebar-menu {
            padding: 20px 0;
        }

            .sidebar-menu h4 {
                color: #b8c7ce;
                padding: 10px 20px;
                font-size: 14px;
                margin-top: 10px;
            }

            .sidebar-menu ul {
                list-style: none;
            }

            .sidebar-menu li a {
                display: block;
                padding: 12px 20px;
                color: #b8c7ce;
                text-decoration: none;
                transition: all 0.3s;
            }

                .sidebar-menu li a:hover,
                .sidebar-menu li a.active {
                    color: white;
                    background-color: rgba(0, 0, 0, 0.2);
                    border-right: 3px solid var(--primary-color);
                }

                .sidebar-menu li a i {
                    margin-left: 10px;
                    width: 20px;
                    text-align: center;
                }

        /* المحتوى الرئيسي */
        .main-content {
            flex: 1;
            display: flex;
            flex-direction: column;
        }

        /* شريط التنقل العلوي */
        .top-navbar {
            background-color: white;
            padding: 15px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .search-box {
            display: flex;
            align-items: center;
            background-color: #f5f6fa;
            border-radius: 20px;
            padding: 8px 15px;
        }

            .search-box input {
                border: none;
                background: transparent;
                outline: none;
                padding: 5px;
                width: 200px;
            }

        .user-menu {
            display: flex;
            align-items: center;
        }

            .user-menu img {
                width: 40px;
                height: 40px;
                border-radius: 50%;
                margin-left: 15px;
            }

        .user-info {
            display: flex;
            flex-direction: column;
        }

            .user-info span:first-child {
                font-weight: bold;
            }

            .user-info span:last-child {
                font-size: 12px;
                color: #7f8c8d;
            }

        /* التبويبات الرئيسية */
        .main-tabs {
            background-color: white;
            border-bottom: 1px solid #eee;
        }

            .main-tabs ul {
                display: flex;
                list-style: none;
                padding: 0 20px;
            }

            .main-tabs li a {
                display: block;
                padding: 15px 20px;
                text-decoration: none;
                color: #7f8c8d;
                font-weight: bold;
                border-bottom: 3px solid transparent;
                transition: all 0.3s;
            }

                .main-tabs li a:hover,
                .main-tabs li a.active {
                    color: var(--primary-color);
                    border-bottom: 3px solid var(--primary-color);
                }

        /* محتوى الصفحة */
        .page-content {
            flex: 1;
            padding: 20px;
            background-color: #f5f6fa;
        }

        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

            .page-header h2 {
                color: var(--dark-color);
            }

        .btn {
            padding: 8px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.3s;
        }

        .btn-primary {
            background-color: var(--primary-color);
            color: white;
        }

            .btn-primary:hover {
                background-color: var(--secondary-color);
            }

        /* بطاقات الإحصائيات */
        .stats-cards {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            position: relative;
            overflow: hidden;
        }

            .stat-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 4px;
                height: 100%;
                background-color: var(--primary-color);
            }

            .stat-card h3 {
                color: #7f8c8d;
                font-size: 14px;
                margin-bottom: 10px;
            }

            .stat-card .value {
                font-size: 24px;
                font-weight: bold;
                color: var(--dark-color);
                margin-bottom: 10px;
            }

            .stat-card .change {
                font-size: 12px;
                color: var(--success-color);
            }

                .stat-card .change.negative {
                    color: var(--danger-color);
                }

            .stat-card i {
                position: absolute;
                top: 20px;
                left: 20px;
                font-size: 40px;
                color: rgba(52, 152, 219, 0.2);
            }

        /* الجداول */
        .table-container {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            padding: 20px;
            margin-bottom: 20px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

            table th, table td {
                padding: 12px 15px;
                text-align: right;
                border-bottom: 1px solid #eee;
            }

            table th {
                background-color: #f5f6fa;
                color: var(--dark-color);
                font-weight: bold;
            }

            table tr:hover {
                background-color: #f9f9f9;
            }

        .status {
            display: inline-block;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: bold;
        }

            .status.active {
                background-color: rgba(46, 204, 113, 0.2);
                color: var(--success-color);
            }

            .status.inactive {
                background-color: rgba(231, 76, 60, 0.2);
                color: var(--danger-color);
            }

        .action-btn {
            padding: 5px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 12px;
            margin-right: 5px;
        }

            .action-btn.edit {
                background-color: rgba(52, 152, 219, 0.2);
                color: var(--primary-color);
            }

            .action-btn.delete {
                background-color: rgba(231, 76, 60, 0.2);
                color: var(--danger-color);
            }

        /* تذييل الصفحة */
        .footer {
            text-align: center;
            padding: 15px;
            background-color: white;
            color: #7f8c8d;
            font-size: 12px;
            border-top: 1px solid #eee;
        }
    </style>
</head>
<body>
    <div class="dashboard">
        <!-- المحتوى الرئيسي -->
        <div class="main-content">
            <!-- شريط التنقل العلوي -->
            <div class="top-navbar">
                <div class="search-box">
                    <i class="fas fa-search"></i>
                    <input type="text" placeholder="بحث...">
                </div>

                <AuthorizeView>
                    <Authorized>   
                        <div class="user-menu">
                            <img src="@profileImage" alt="صورة المستخدم" class="user-image">
                            <div class="user-info">
                                <span>@fullName</span>
                                <span>@userRole</span>
                            </div>
                        </div>                       
                    </Authorized>
                    <NotAuthorized>
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="Account/Register">
                                <span class="bi bi-person-nav-menu" aria-hidden="true"></span> انشاء جديد
                            </NavLink>
                        </div>
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="Account/Login">
                                <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> تسجيل دخول
                            </NavLink>
                        </div>
                    </NotAuthorized>
                </AuthorizeView>
             
            </div>

            <!-- التبويبات الرئيسية -->
            <div class="main-tabs">
                <ul>
                    <li><a href="#" class="active"><i class="fas fa-home"></i> الرئيسية</a></li>
                    <li><a href="#"><i class="fas fa-users"></i> الطلاب</a></li>
                    <li><a href="#"><i class="fas fa-chalkboard-teacher"></i> الموظفين</a></li>
                    <li><a href="#"><i class="fas fa-book"></i> المقررات</a></li>
                    <li><a href="#"><i class="fas fa-calendar-alt"></i> الجداول</a></li>
                    <li><a href="#"><i class="fas fa-chart-bar"></i> التقارير</a></li>
                    <li><a href="#"><i class="fas fa-cog"></i> الإعدادات</a></li>
                </ul>
            </div>

            <!-- محتوى الصفحة -->
            <div class="page-content">
                <div class="page-header">
                    <h2>لوحة التحكم</h2>
                    <button class="btn btn-primary"><i class="fas fa-plus"></i> إضافة جديد</button>
                </div>

                <!-- بطاقات الإحصائيات -->
                <div class="stats-cards">
                    <div class="stat-card">
                        <i class="fas fa-users"></i>
                        <h3>إجمالي الطلاب</h3>
                        <div class="value">@totalStudents</div>
                        <div class="change">
                            <i class="fas @(studentChangePercentage >= 0 ? "fa-arrow-up" : "fa-arrow-down")"></i>
                            @Math.Abs(studentChangePercentage)% عن الشهر الماضي
                        </div>
                    </div>

                    <div class="stat-card">
                        <i class="fas fa-chalkboard-teacher"></i>
                        <h3>أعضاء هيئة التدريس</h3>
                        <div class="value">@facultyCount</div>
                        <div class="change">
                            <i class="fas @(facultyChangePercentage >= 0 ? "fa-arrow-up" : "fa-arrow-down")"></i>
                            @Math.Abs(facultyChangePercentage)% عن الشهر الماضي
                        </div>
                    </div>

                    <div class="stat-card">
                        <i class="fas fa-book"></i>
                        <h3>المقررات الدراسية</h3>
                        <div class="value">@coursesCount</div>
                        <div class="change">
                            <i class="fas @(coursesChangePercentage >= 0 ? "fa-arrow-up" : "fa-arrow-down")"></i>
                            @Math.Abs(coursesChangePercentage)% عن العام الماضي
                        </div>
                    </div>

                    <div class="stat-card">
                        <i class="fas fa-money-bill-wave"></i>
                        <h3>إجمالي الرسوم</h3>
                        <div class="value">@totalFees.ToString("N0") ر.س</div>
                        <div class="change @(feesChangePercentage < 0 ? "negative" : "")">
                            <i class="fas @(feesChangePercentage >= 0 ? "fa-arrow-up" : "fa-arrow-down")"></i>
                            @Math.Abs(feesChangePercentage)% عن الشهر الماضي
                        </div>
                    </div>
                </div>

                <!-- الجداول -->
                <div class="table-container">
                    <h3>أحدث الطلاب المسجلين</h3>
                    <table>
                        <thead>
                            <tr>
                                <th>رقم الطالب</th>
                                <th>الاسم</th>
                                <th>القسم</th>
                                <th>المستوى</th>
                                <th>الحالة</th>
                                <th>الإجراءات</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (recentStudents != null)
                            {
                                @foreach (var student in recentStudents)
                                {
                                    <tr>
                                        <td>@student.StudentId</td>
                                        <td>@student.FullName</td>
                                        <td>@(departments.FirstOrDefault(d => d.Id == student.DepartmentId)?.Name)</td>
                                        <td>@student.Branch</td>
                                        <td>
                                            <span class="status @(student.Status == StudentStatus.Active ? "active" : "inactive")">
                                                @GetStatusText(student.Status)
                                            </span>
                                        </td>
                                        <td>
                                            <button class="action-btn edit" @onclick="() => EditStudent(student.StudentId)">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button class="action-btn delete" @onclick="() => DeleteStudent(student.StudentId)">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <!-- تذييل الصفحة -->
            <div class="footer">
                جميع الحقوق محفوظة &copy; 2023 نظام إدارة الجامعة
            </div>
        </div>
    </div>
</body>
</html>
@code {
    public string profileImage { get; set; } = "/images/default-user.png";
    public User user { get; set; }
    public string fullName { get; set; }
    public IList<string> roles { get; set; }
    public string userRole { get; set; }
    private int totalStudents = 0;
    private int facultyCount = 0;
    private int coursesCount = 0;
    private decimal totalFees = 0;
    private double studentChangePercentage = 0;
    private double facultyChangePercentage = 0;
    private double coursesChangePercentage = 0;
    private double feesChangePercentage = 0;
    private List<StudentDto> recentStudents = new();
    private List<DepartmentDto> departments = new();
    protected override async Task OnInitializedAsync()
    {
        await LoadStatistics();
        await LoadRecentStudents();
        await LoadDepartments();
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var userClaim = authState.User;

        if (userClaim.Identity.IsAuthenticated)
        {
            user = await UserManager.GetUserAsync(userClaim);

            if (user != null)
            {
                profileImage = user.PhotoUrl ?? "/images/default-user.png";
                fullName = $"{user.FirstName} {user.LastName}".Trim();
                if (string.IsNullOrEmpty(fullName))
                {
                    fullName = userClaim.Identity.Name;
                }

                roles = await UserManager.GetRolesAsync(user);
                userRole = roles.FirstOrDefault() ?? "مستخدم";
            }
        }
    }
    private async Task LoadStatistics()
    {
        try
        {
            // إحصائيات الطلاب
            totalStudents = await StudentService.GetTotalStudentsCountAsync();
            studentChangePercentage = 12; // يمكن استبدالها بقيمة من خدمة الإحصائيات

            // إحصائيات أعضاء هيئة التدريس
            var allEmployees = await EmployeeService.GetAllAsync();
            facultyCount = allEmployees.Count(e => e.JobTitle == "Techer");
            facultyChangePercentage = 5; // يمكن استبدالها بقيمة من خدمة الإحصائيات

            // إحصائيات المقررات
            coursesCount = await CourseService.GetCoursesCountAsync();
            coursesChangePercentage = 8; // يمكن استبدالها بقيمة من خدمة الإحصائيات

            // إحصائيات الرسوم
            totalFees = await CourseService.GetTotalRevenueAsync();
            feesChangePercentage = -3; // يمكن استبدالها بقيمة من خدمة الإحصائيات
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading statistics: {ex.Message}");
        }
    }

    private async Task LoadRecentStudents()
    {
        try
        {
            var result = await StudentService.GetStudentsPagedAsync(1, 5, "", null, StudentStatus.Active);
            recentStudents = result.Data.ToList();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading recent students: {ex.Message}");
        }
    }

    private async Task LoadDepartments()
    {
        try
        {
            departments = await DepartmentService.GetAllDepartmentsAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading departments: {ex.Message}");
        }
    }

    private string GetStatusText(StudentStatus status)
    {
        return status switch
        {
            StudentStatus.Active => "نشط",
            StudentStatus.Inactive => "غير نشط",
            StudentStatus.Suspended => "موقوف",
            StudentStatus.Graduated => "متخرج",
            _ => "غير معروف"
        };
    }

    private async Task EditStudent(string studentId)
    {
        // تنفيذ منطق التعديل
        NavigationManager.NavigateTo($"/students/edit/{studentId}");
    }

    private async Task DeleteStudent(string studentId)
    {
        try
        {
            await StudentService.DeleteStudentAsync(studentId);
            await LoadRecentStudents(); // إعادة تحميل البيانات بعد الحذف
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting student: {ex.Message}");
        }
    }
  
}