@page "/hr/attendance"
@attribute [Authorize]
@inject IAttendanceService AttendanceService
@inject IUserService UserService
@rendermode InteractiveServer
<PageTitle>الحضور والانصراف - الجامعة الذكية</PageTitle>

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-0 fw-bold text-primary">الحضور والانصراف</h1>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/">الرئيسية</a></li>
                            <li class="breadcrumb-item"><a href="/hr">الموارد البشرية</a></li>
                            <li class="breadcrumb-item active">الحضور والانصراف</li>
                        </ol>
                    </nav>
                </div>
                <div>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addAttendanceModal">
                        <i class="fas fa-plus me-2"></i>إضافة حضور
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- إحصائيات سريعة -->
    <div class="row g-4 mb-4">
        <div class="col-md-3">
            <div class="card border-primary border-start border-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="text-muted">إجمالي الموظفين</h5>
                            <h2 class="mb-0 fw-bold">@attendanceSummary.TotalEmployees</h2>
                        </div>
                        <div class="bg-primary bg-opacity-10 p-3 rounded-circle">
                            <i class="fas fa-users fa-2x text-primary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-success border-start border-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="text-muted">الحاضرون</h5>
                            <h2 class="mb-0 fw-bold">@attendanceSummary.PresentCount</h2>
                        </div>
                        <div class="bg-success bg-opacity-10 p-3 rounded-circle">
                            <i class="fas fa-check-circle fa-2x text-success"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-warning border-start border-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="text-muted">الغائبون</h5>
                            <h2 class="mb-0 fw-bold">@attendanceSummary.AbsentCount</h2>
                        </div>
                        <div class="bg-warning bg-opacity-10 p-3 rounded-circle">
                            <i class="fas fa-times-circle fa-2x text-warning"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-info border-start border-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="text-muted">متوسط الساعات</h5>
                            <h2 class="mb-0 fw-bold">@attendanceSummary.AverageHours.ToString("F2")</h2>
                        </div>
                        <div class="bg-info bg-opacity-10 p-3 rounded-circle">
                            <i class="fas fa-clock fa-2x text-info"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- علامات التبويب -->
    <div class="row">
        <div class="col-12">
            <ul class="nav nav-tabs mb-4" id="attendanceTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="daily-tab" data-bs-toggle="tab" data-bs-target="#daily" type="button" role="tab" @onclick="() => LoadDailyAttendance()">
                        اليومي
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="weekly-tab" data-bs-toggle="tab" data-bs-target="#weekly" type="button" role="tab" @onclick="() => LoadWeeklyAttendance()">
                        الأسبوعي
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="monthly-tab" data-bs-toggle="tab" data-bs-target="#monthly" type="button" role="tab" @onclick="() => LoadMonthlyAttendance()">
                        الشهري
                    </button>
                </li>
            </ul>

            <div class="tab-content" id="attendanceTabsContent">
                <!-- الحضور اليومي -->
                <div class="tab-pane fade show active" id="daily" role="tabpanel">
                    <div class="card">
                        <div class="card-header bg-white">
                            <div class="row align-items-center">
                                <div class="col-md-6">
                                    <h5 class="mb-0">الحضور اليومي - @DateTime.Now.ToString("yyyy-MM-dd")</h5>
                                </div>
                                <div class="col-md-6">
                                    <div class="d-flex justify-content-md-end gap-2">
                                        <div class="input-group" style="max-width: 300px;">
                                            <span class="input-group-text"><i class="fas fa-search"></i></span>
                                            <input type="text" class="form-control" placeholder="بحث عن موظف..." @bind="searchTerm" @oninput="SearchAttendance">
                                        </div>
                                        @* <input type="date" class="form-control" style="max-width: 150px;" @bind="selectedDate" @onchange="LoadAttendanceByDate"> *@
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead class="table-light">
                                        <tr>
                                            <th>#</th>
                                            <th>الموظف</th>
                                            <th>وقت الحضور</th>
                                            <th>وقت الانصراف</th>
                                            <th>الساعات</th>
                                            <th>الحالة</th>
                                            <th>الملاحظات</th>
                                            <th>الإجراءات</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (dailyAttendance.Any())
                                        {
                                            @for (int i = 0; i < dailyAttendance.Count; i++)
                                            {
                                                var attendance = dailyAttendance[i];
                                                <tr>
                                                    <td>@attendance.Id</td>
                                                    <td>@attendance.EmployeeName</td>
                                                    <td>@(attendance.CheckInTime?.ToString("HH:mm") ?? "-")</td>
                                                    <td>@(attendance.CheckOutTime?.ToString("HH:mm") ?? "-")</td>
                                                    <td>@attendance.HoursWorked.ToString("F2")</td>
                                                    <td>
                                                        <span class="badge @(attendance.Status == "حاضر" ? "bg-success" : 
                                                                            attendance.Status == "غائب" ? "bg-danger" : 
                                                                            attendance.Status == "إجازة" ? "bg-info" : "bg-warning")">
                                                            @attendance.Status
                                                        </span>
                                                    </td>
                                                    <td>@attendance.Notes</td>
                                                    <td>
                                                        <div class="dropdown">
                                                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                                                <i class="fas fa-ellipsis-v"></i>
                                                            </button>
                                                            <ul class="dropdown-menu">
                                                                <li><a class="dropdown-item" href="javascript:void(0)" @onclick="() => EditAttendance(attendance)"><i class="fas fa-edit me-2"></i>تعديل</a></li>
                                                                <li><hr class="dropdown-divider"></li>
                                                                <li><a class="dropdown-item text-danger" href="javascript:void(0)" @onclick="() => DeleteAttendance(attendance.Id)"><i class="fas fa-trash me-2"></i>حذف</a></li>
                                                            </ul>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                        else
                                        {
                                            <tr>
                                                <td colspan="8" class="text-center">لا توجد بيانات حضور</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal إضافة حضور -->
<div class="modal fade" id="addAttendanceModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">إضافة حضور</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">الموظف *</label>
                            <select class="form-select" @bind="newAttendance.EmployeeId" required>
                                <option value="">اختر الموظف</option>
                                @foreach (var employee in employees)
                                {
                                    <option value="@employee.Id">@($"{employee.FirstName} {employee.LastName}")</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">التاريخ *</label>
                            <input type="date" class="form-control" @bind="newAttendance.Date" required>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">وقت الحضور</label>
                            <input type="time" class="form-control" @bind="checkInTimeDateTime">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">وقت الانصراف</label>
                            <input type="time" class="form-control" @bind="checkOutTimeDateTime">
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">الحالة *</label>
                            <select class="form-select" @bind="newAttendance.Status" required>
                                <option value="حاضر">حاضر</option>
                                <option value="غائب">غائب</option>
                                <option value="إجازة">إجازة</option>
                                <option value="تأخير">تأخير</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">الساعات</label>
                            <input type="number" step="0.01" class="form-control" value="@calculatedHours" readonly>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">الملاحظات</label>
                        <textarea class="form-control" rows="2" placeholder="أدخل الملاحظات" @bind="newAttendance.Notes"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                <button type="button" class="btn btn-primary" @onclick="CreateAttendance">حفظ الحضور</button>
            </div>
        </div>
    </div>
</div>

@code {
    private List<AttendanceDto> dailyAttendance = new();
    private List<UserDto> employees = new();
    private AttendanceDto newAttendance = new();
    private AttendanceSummaryDto attendanceSummary = new();
    private string searchTerm = "";
    private DateTime selectedDate = DateTime.Now;
    private string checkInTime = "";
    private string checkOutTime = "";
    private DateTime checkInTimeDateTime;
    private DateTime checkOutTimeDateTime;

    private decimal calculatedHours => CalculateHoursFromTime();

    protected override async Task OnInitializedAsync()
    {
        await LoadEmployees();
        await LoadAttendanceSummary();
        await LoadDailyAttendance();
    }

    private async Task LoadEmployees()
    {
        try
        {
            employees = await UserService.GetAllUsersAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading employees: {ex.Message}");
        }
    }

    private async Task LoadDailyAttendance()
    {
        try
        {
            dailyAttendance = await AttendanceService.GetAttendanceByDateAsync(selectedDate);

            // تطبيق البحث
            if (!string.IsNullOrEmpty(searchTerm))
            {
                dailyAttendance = dailyAttendance.Where(a => 
                    a.EmployeeName.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)).ToList();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading daily attendance: {ex.Message}");
        }
    }

    private async Task LoadWeeklyAttendance()
    {
        // تحميل الحضور الأسبوعي
    }

    private async Task LoadMonthlyAttendance()
    {
        // تحميل الحضور الشهري
    }

    private async Task LoadAttendanceSummary()
    {
        try
        {
            var startDate = DateTime.Now.AddDays(-7);
            var endDate = DateTime.Now;
            attendanceSummary = await AttendanceService.GetAttendanceSummaryAsync(startDate, endDate);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading attendance summary: {ex.Message}");
        }
    }

    private async Task LoadAttendanceByDate(ChangeEventArgs e)
    {
        await LoadDailyAttendance();
    }

    private async Task SearchAttendance(ChangeEventArgs e)
    {
        searchTerm = e.Value?.ToString() ?? "";
        await LoadDailyAttendance();
    }

    private decimal CalculateHoursFromTime()
    {
        checkInTime = checkInTimeDateTime.ToString();
        checkOutTime = checkOutTimeDateTime.ToString();
        if (!string.IsNullOrEmpty(checkInTime) && !string.IsNullOrEmpty(checkOutTime))
        {
            try
            {
                var checkIn = DateTime.ParseExact(checkInTime, "HH:mm", null);
                var checkOut = DateTime.ParseExact(checkOutTime, "HH:mm", null);
                
                if (checkOut > checkIn)
                {
                    var hours = (checkOut - checkIn).TotalHours;
                    return Math.Round((decimal)hours, 2);
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error calculating hours: {ex.Message}");
            }
        }
        return 0;
    }

    private async Task CreateAttendance()
    {
        try
        {
            checkInTime = checkInTimeDateTime.ToString();
            checkOutTime = checkOutTimeDateTime.ToString();
            // تحويل الوقت إلى DateTime
            if (!string.IsNullOrEmpty(checkInTime))
            {
                var checkInDateTime = DateTime.Parse($"{newAttendance.Date:yyyy-MM-dd} {checkInTime}");
                newAttendance.CheckInTime = checkInDateTime;
            }
            
            if (!string.IsNullOrEmpty(checkOutTime))
            {
                var checkOutDateTime = DateTime.Parse($"{newAttendance.Date:yyyy-MM-dd} {checkOutTime}");
                newAttendance.CheckOutTime = checkOutDateTime;
            }
            
            // حساب الساعات
            newAttendance.HoursWorked = calculatedHours;
            
            var createdAttendance = await AttendanceService.CreateAttendanceAsync(newAttendance);
            
            // إعادة تعيين النموذج
            newAttendance = new AttendanceDto();
            checkInTime = "";
            checkOutTime = "";
            
            // تحديث القائمة والإحصائيات
            await LoadAttendanceSummary();
            await LoadDailyAttendance();
            
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error creating attendance: {ex.Message}");
        }
    }

    private void EditAttendance(AttendanceDto attendance)
    {
        // تعديل الحضور
    }

    private async Task DeleteAttendance(int attendanceId)
    {
        try
        {
            await AttendanceService.DeleteAttendanceAsync(attendanceId);
            
            // تحديث القائمة والإحصائيات
            await LoadAttendanceSummary();
            await LoadDailyAttendance();
            
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting attendance: {ex.Message}");
        }
    }
}