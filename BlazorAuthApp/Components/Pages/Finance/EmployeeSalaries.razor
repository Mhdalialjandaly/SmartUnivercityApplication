@page "/finance/employee-salaries"
@attribute [Authorize]
@inject IEmployeeSalaryService EmployeeSalaryService
@inject IUserService UserService
@rendermode InteractiveServer
<PageTitle>رواتب الموظفين - الجامعة الذكية</PageTitle>

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-0 fw-bold text-primary">رواتب الموظفين</h1>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/">الرئيسية</a></li>
                            <li class="breadcrumb-item"><a href="/finance">الشؤون المالية</a></li>
                            <li class="breadcrumb-item active">رواتب الموظفين</li>
                        </ol>
                    </nav>
                </div>
                <div>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addSalaryModal">
                        <i class="fas fa-plus me-2"></i>إضافة راتب جديد
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- إحصائيات سريعة -->
    <div class="row g-4 mb-4">
        <div class="col-md-3">
            <div class="card border-primary border-start border-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="text-muted">إجمالي الرواتب</h5>
                            <h2 class="mb-0 fw-bold">@salarySummary.TotalSalaries</h2>
                        </div>
                        <div class="bg-primary bg-opacity-10 p-3 rounded-circle">
                            <i class="fas fa-file-invoice-dollar fa-2x text-primary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-success border-start border-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="text-muted">إجمالي المبالغ</h5>
                            <h2 class="mb-0 fw-bold">@salarySummary.TotalAmount.ToString("C")</h2>
                        </div>
                        <div class="bg-success bg-opacity-10 p-3 rounded-circle">
                            <i class="fas fa-money-check-alt fa-2x text-success"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-warning border-start border-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="text-muted">الرواتب المعلقة</h5>
                            <h2 class="mb-0 fw-bold">@salarySummary.PendingSalaries</h2>
                        </div>
                        <div class="bg-warning bg-opacity-10 p-3 rounded-circle">
                            <i class="fas fa-clock fa-2x text-warning"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-info border-start border-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="text-muted">المبالغ المعلقة</h5>
                            <h2 class="mb-0 fw-bold">@salarySummary.PendingAmount.ToString("C")</h2>
                        </div>
                        <div class="bg-info bg-opacity-10 p-3 rounded-circle">
                            <i class="fas fa-exclamation-circle fa-2x text-info"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- قائمة الرواتب -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-white">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <h5 class="mb-0">قائمة الرواتب</h5>
                        </div>
                        <div class="col-md-6">
                            <div class="d-flex justify-content-md-end gap-2">
                                <div class="input-group" style="max-width: 300px;">
                                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                                    <input type="text" class="form-control" placeholder="بحث عن موظف..." @bind="searchTerm" @oninput="SearchSalaries">
                                </div>
                                <select class="form-select" style="max-width: 150px;" @onchange="FilterByStatus">
                                    <option value="">جميع الحالات</option>
                                    <option value="مدفوع">مدفوع</option>
                                    <option value="معلق">معلق</option>
                                    <option value="مرفوض">مرفوض</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>#</th>
                                    <th>الموظف</th>
                                    <th>الوظيفة</th>
                                    <th>الراتب الأساسي</th>
                                    <th>البدلات</th>
                                    <th>الخصومات</th>
                                    <th>العلاوات</th>
                                    <th>الصافي</th>
                                    <th>تاريخ الراتب</th>
                                    <th>الحالة</th>
                                    <th>الإجراءات</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (salaries.Any())
                                {
                                    @for (int i = 0; i < salaries.Count; i++)
                                    {
                                        var salary = salaries[i];
                                        <tr>
                                            <td>@salary.Id</td>
                                            <td>@salary.EmployeeName</td>
                                            <td>@salary.EmployeePosition</td>
                                            <td>@salary.BaseSalary.ToString("C")</td>
                                            <td>@salary.Allowances.ToString("C")</td>
                                            <td>@salary.Deductions.ToString("C")</td>
                                            <td>@salary.Bonus.ToString("C")</td>
                                            <td><strong>@salary.NetSalary.ToString("C")</strong></td>
                                            <td>@salary.SalaryDate.ToString("yyyy-MM-dd")</td>
                                            <td>
                                                <span class="badge @(salary.Status == "مدفوع" ? "bg-success" :
                                                                    salary.Status == "معلق" ? "bg-warning" : "bg-danger")">
                                                    @salary.Status
                                                </span>
                                            </td>
                                            <td>
                                                <div class="dropdown">
                                                    <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                                        <i class="fas fa-ellipsis-v"></i>
                                                    </button>
                                                    <ul class="dropdown-menu">
                                                        <li><a class="dropdown-item" href="javascript:void(0)" @onclick="() => ViewSalaryDetails(salary)"><i class="fas fa-eye me-2"></i>عرض التفاصيل</a></li>
                                                        <li><a class="dropdown-item" href="javascript:void(0)" @onclick="() => EditSalary(salary)"><i class="fas fa-edit me-2"></i>تعديل</a></li>
                                                        <li><hr class="dropdown-divider"></li>
                                                        <li><a class="dropdown-item text-danger" href="javascript:void(0)" @onclick="() => DeleteSalary(salary.Id)"><i class="fas fa-trash me-2"></i>حذف</a></li>
                                                    </ul>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="11" class="text-center">لا توجد رواتب</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal إضافة راتب جديد -->
<div class="modal fade" id="addSalaryModal" tabindex="-1">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">إضافة راتب جديد</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">الموظف *</label>
                            <select class="form-select" @bind="newSalary.EmployeeId" required>
                                <option value="">اختر الموظف</option>
                                @foreach (var employee in employees)
                                {
                                    <option value="@employee.Id">@($"{employee.FirstName} {employee.LastName}")</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">تاريخ الراتب *</label>
                            <input type="date" class="form-control" @bind="newSalary.SalaryDate" required>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3 mb-3">
                            <label class="form-label">الراتب الأساسي *</label>
                            <input type="number" step="0.01" class="form-control" placeholder="أدخل الراتب الأساسي" @bind="newSalary.BaseSalary" required>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label">البدلات</label>
                            <input type="number" step="0.01" class="form-control" placeholder="أدخل البدلات" @bind="newSalary.Allowances">
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label">الخصومات</label>
                            <input type="number" step="0.01" class="form-control" placeholder="أدخل الخصومات" @bind="newSalary.Deductions">
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label">العلاوات</label>
                            <input type="number" step="0.01" class="form-control" placeholder="أدخل العلاوات" @bind="newSalary.Bonus">
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">الراتب الصافي</label>
                            <input type="number" step="0.01" class="form-control" value="@netSalary" readonly>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">الحالة *</label>
                            <select class="form-select" @bind="newSalary.Status" required>
                                <option value="مدفوع">مدفوع</option>
                                <option value="معلق">معلق</option>
                                <option value="مرفوض">مرفوض</option>
                            </select>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">الملاحظات</label>
                        <textarea class="form-control" rows="2" placeholder="أدخل الملاحظات" @bind="newSalary.Notes"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                <button type="button" class="btn btn-primary" @onclick="CreateSalary">حفظ الراتب</button>
            </div>
        </div>
    </div>
</div>

@code {
    private List<EmployeeSalaryDto> salaries = new();
    private List<UserDto> employees = new();
    private EmployeeSalaryDto newSalary = new();
    private SalarySummaryDto salarySummary = new();
    private string searchTerm = "";
    private string selectedStatus = "";

    private decimal netSalary => newSalary.BaseSalary + newSalary.Allowances + newSalary.Bonus - newSalary.Deductions;

    protected override async Task OnInitializedAsync()
    {
        await LoadEmployees();
        await LoadSalarySummary();
        await LoadSalaries();
    }

    private async Task LoadEmployees()
    {
        try
        {
            employees = await UserService.GetAllUsersAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading employees: {ex.Message}");
        }
    }

    private async Task LoadSalaries()
    {
        try
        {
            salaries = await EmployeeSalaryService.GetAllSalariesAsync();

            // تطبيق الفلاتر
            if (!string.IsNullOrEmpty(searchTerm))
            {
                salaries = salaries.Where(s =>
                    s.EmployeeName.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)).ToList();
            }

            if (!string.IsNullOrEmpty(selectedStatus))
            {
                salaries = salaries.Where(s => s.Status == selectedStatus).ToList();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading salaries: {ex.Message}");
        }
    }

    private async Task LoadSalarySummary()
    {
        try
        {
            salarySummary = await EmployeeSalaryService.GetSalarySummaryAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading salary summary: {ex.Message}");
        }
    }

    private async Task SearchSalaries(ChangeEventArgs e)
    {
        searchTerm = e.Value?.ToString() ?? "";
        await LoadSalaries();
    }

    private async Task FilterByStatus(ChangeEventArgs e)
    {
        selectedStatus = e.Value?.ToString() ?? "";
        await LoadSalaries();
    }

    private async Task CreateSalary()
    {
        try
        {
            newSalary.NetSalary = netSalary;
            newSalary.SalaryDate = DateTime.Now;

            var createdSalary = await EmployeeSalaryService.CreateSalaryAsync(newSalary);

            // إعادة تعيين النموذج
            newSalary = new EmployeeSalaryDto();

            // تحديث القائمة والإحصائيات
            await LoadSalarySummary();
            await LoadSalaries();

            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error creating salary: {ex.Message}");
        }
    }

    private void ViewSalaryDetails(EmployeeSalaryDto salary)
    {
        // عرض تفاصيل الراتب
    }

    private void EditSalary(EmployeeSalaryDto salary)
    {
        // تعديل الراتب
    }

    private async Task DeleteSalary(int salaryId)
    {
        try
        {
            await EmployeeSalaryService.DeleteSalaryAsync(salaryId);

            // تحديث القائمة والإحصائيات
            await LoadSalarySummary();
            await LoadSalaries();

            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting salary: {ex.Message}");
        }
    }
}