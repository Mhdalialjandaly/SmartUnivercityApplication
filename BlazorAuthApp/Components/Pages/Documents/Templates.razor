@page "/documents/templates"
@attribute [Authorize]
@inject IDocumentService DocumentService
@inject NavigationManager Navigation
@rendermode InteractiveServer
<PageTitle>إدارة القوالب - الجامعة الذكية</PageTitle>

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-0 fw-bold text-primary">إدارة قوالب الوثائق</h1>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/">الرئيسية</a></li>
                            <li class="breadcrumb-item"><a href="/documents">الوثائق الرسمية</a></li>
                            <li class="breadcrumb-item active">إدارة القوالب</li>
                        </ol>
                    </nav>
                </div>
                <div>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createTemplateModal">
                        <i class="fas fa-plus me-2"></i>إنشاء قالب جديد
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-white">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <h5 class="mb-0">قائمة القوالب</h5>
                        </div>
                        <div class="col-md-6">
                            <div class="d-flex justify-content-md-end gap-2">
                                <div class="input-group" style="max-width: 300px;">
                                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                                    <input type="text" class="form-control" placeholder="بحث عن قالب..." @bind="searchTerm" @oninput="SearchTemplates">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>#</th>
                                    <th>اسم القالب</th>
                                    <th>النوع</th>
                                    <th>الوصف</th>
                                    <th>الحالة</th>
                                    <th>تاريخ الإنشاء</th>
                                    <th>الإجراءات</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (templates.Any())
                                {
                                    @for (int i = 0; i < templates.Count; i++)
                                    {
                                        var template = templates[i];
                                        <tr>
                                            <td>@template.Id</td>
                                            <td>@template.Name</td>
                                            <td>@template.DocumentType</td>
                                            <td>@template.Description</td>
                                            <td>
                                                @if (template.IsActive)
                                                {
                                                    <span class="badge bg-success">نشط</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary">غير نشط</span>
                                                }
                                            </td>
                                            <td>@template.CreatedDate.ToString("yyyy-MM-dd")</td>
                                            <td>
                                                <div class="dropdown">
                                                    <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                                        <i class="fas fa-ellipsis-v"></i>
                                                    </button>
                                                    <ul class="dropdown-menu">
                                                        <li><a class="dropdown-item" href="javascript:void(0)" @onclick="() => ViewTemplate(template)" data-bs-toggle="modal" data-bs-target="#editTemplateModal"><i class="fas fa-eye me-2"></i>عرض التفاصيل</a></li>
                                                        <li><a class="dropdown-item" href="javascript:void(0)" @onclick="() => EditTemplate(template)" data-bs-toggle="modal" data-bs-target="#editTemplateModal"><i class="fas fa-edit me-2"></i>تعديل</a></li>
                                                        <li><hr class="dropdown-divider"></li>
                                                        <li><a class="dropdown-item text-danger" href="javascript:void(0)" @onclick="() => DeleteTemplate(template.Id)"><i class="fas fa-trash me-2"></i>حذف</a></li>
                                                    </ul>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="7" class="text-center">لا توجد قوالب</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal إنشاء قالب جديد -->
<div class="modal fade" id="createTemplateModal" tabindex="-1">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">إنشاء قالب وثيقة جديد</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="mb-3">
                        <label class="form-label">اسم القالب *</label>
                        <input type="text" class="form-control" placeholder="أدخل اسم القالب" @bind="newTemplate.Name" required>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">نوع الوثيقة *</label>
                            <select class="form-select" @bind="newTemplate.DocumentType" required>
                                <option value="">اختر نوع الوثيقة</option>
                                <option value="شهادة">شهادة</option>
                                <option value="قرار">قرار</option>
                                <option value="خطاب">خطاب</option>
                                <option value="عقد">عقد</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">الحالة</label>
                            <div class="form-check">
                                <input class="form-check-input"
                                       type="checkbox"
                                       id="isActiveCheckbox"
                                       @bind="selectedTemplate.IsActive"
                                       disabled="@(!isEditing)">
                                <label class="form-check-label" for="isActiveCheckbox">
                                    @(selectedTemplate.IsActive ? "نشط" : "غير نشط")
                                </label>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">الوصف</label>
                        <textarea class="form-control" rows="2" placeholder="أدخل وصفاً للقالب" @bind="newTemplate.Description"></textarea>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">محتوى القالب (HTML) *</label>
                        <textarea class="form-control" rows="10" placeholder="أدخل محتوى القالب بصيغة HTML" @bind="newTemplate.HtmlContent" required></textarea>
                        <div class="form-text">
                            يمكنك استخدام المتغيرات التالية: {{StudentName}}, {{StudentId}}, {{Date}}, {{UniversityName}}
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                <button type="button" class="btn btn-primary" @onclick="CreateTemplate">إنشاء القالب</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal عرض/تعديل القالب -->
<div class="modal fade" id="editTemplateModal" tabindex="-1">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@(isEditing ? "تعديل القالب" : "عرض القالب") #@selectedTemplate?.Id</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                @if (selectedTemplate != null)
                {
                    <form>
                        <div class="mb-3">
                            <label class="form-label">اسم القالب *</label>
                            <input type="text" class="form-control" placeholder="أدخل اسم القالب" @bind="selectedTemplate.Name" required disabled="@(!isEditing)">
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">نوع الوثيقة *</label>
                                <select class="form-select" @bind="selectedTemplate.DocumentType" required disabled="@(!isEditing)">
                                    <option value="">اختر نوع الوثيقة</option>
                                    <option value="شهادة">شهادة</option>
                                    <option value="قرار">قرار</option>
                                    <option value="خطاب">خطاب</option>
                                    <option value="عقد">عقد</option>
                                </select>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">الحالة</label>
                                <div class="form-check">
                                    <input class="form-check-input"
                                           type="checkbox"
                                           id="isActiveCheckbox"
                                           @bind="selectedTemplate.IsActive"
                                           disabled="@(!isEditing)">
                                    <label class="form-check-label" for="isActiveCheckbox">
                                        @(selectedTemplate.IsActive ? "نشط" : "غير نشط")
                                    </label>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">الوصف</label>
                            <textarea class="form-control" rows="2" placeholder="أدخل وصفاً للقالب" @bind="selectedTemplate.Description" disabled="@(!isEditing)"></textarea>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">محتوى القالب (HTML) *</label>
                            <textarea class="form-control" rows="10" placeholder="أدخل محتوى القالب بصيغة HTML" @bind="selectedTemplate.HtmlContent" required disabled="@(!isEditing)"></textarea>
                            <div class="form-text">
                                يمكنك استخدام المتغيرات التالية: {{StudentName}}, {{StudentId}}, {{Date}}, {{UniversityName}}
                            </div>
                        </div>
                    </form>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إغلاق</button>
                @if (isEditing)
                {
                    <button type="button" class="btn btn-primary" @onclick="UpdateTemplate">حفظ التغييرات</button>
                }
                else
                {
                    <button type="button" class="btn btn-outline-primary" @onclick="EnableEditing">تعديل</button>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private List<DocumentTemplateDto> templates = new();
    private DocumentTemplateDto newTemplate = new();
    private DocumentTemplateDto? selectedTemplate = new();
    private string searchTerm = "";
    private bool isEditing = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadTemplates();
    }

    private async Task LoadTemplates()
    {
        try
        {
            templates = await DocumentService.GetAllTemplatesAsync();

            if (!string.IsNullOrEmpty(searchTerm))
            {
                templates = templates.Where(t =>
                    t.Name.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
                    t.DocumentType.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)).ToList();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading templates: {ex.Message}");
        }
    }

    private async Task SearchTemplates(ChangeEventArgs e)
    {
        searchTerm = e.Value?.ToString() ?? "";
        await LoadTemplates();
    }

    private async Task CreateTemplate()
    {
        try
        {
            newTemplate.CreatedBy = "المستخدم الحالي"; // يجب استبداله بالمستخدم الفعلي
            newTemplate.CreatedDate = DateTime.Now;

            var createdTemplate = await DocumentService.CreateTemplateAsync(newTemplate);

            // إعادة تعيين النموذج
            newTemplate = new DocumentTemplateDto();

            // تحديث القائمة
            await LoadTemplates();

            // إغلاق الـ Modal
            // await JS.InvokeVoidAsync("bootstrap.Modal.getOrCreateInstance", "#createTemplateModal");
           await OnInitializedAsync();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error creating template: {ex.Message}");
        }
    }

    private void ViewTemplate(DocumentTemplateDto template)
    {
        selectedTemplate = new DocumentTemplateDto
            {
                Id = template.Id,
                Name = template.Name,
                DocumentType = template.DocumentType,
                HtmlContent = template.HtmlContent,
                CreatedDate = template.CreatedDate,
                CreatedBy = template.CreatedBy,
                IsActive = template.IsActive,
                Description = template.Description
            };
        isEditing = false;
        // فتح الـ Modal
        // JS.InvokeVoidAsync("bootstrap.Modal.getOrCreateInstance", "#editTemplateModal");
    }

    private void EditTemplate(DocumentTemplateDto template)
    {
        selectedTemplate = new DocumentTemplateDto
            {
                Id = template.Id,
                Name = template.Name,
                DocumentType = template.DocumentType,
                HtmlContent = template.HtmlContent,
                CreatedDate = template.CreatedDate,
                CreatedBy = template.CreatedBy,
                IsActive = template.IsActive,
                Description = template.Description
            };
        isEditing = true;
        // فتح الـ Modal
        // JS.InvokeVoidAsync("bootstrap.Modal.getOrCreateInstance", "#editTemplateModal");
    }

    private void EnableEditing()
    {
        isEditing = true;
        StateHasChanged();
    }

    private async Task UpdateTemplate()
    {
        if (selectedTemplate != null)
        {
            try
            {
                var updatedTemplate = await DocumentService.UpdateTemplateAsync(selectedTemplate.Id, selectedTemplate);

                // إغلاق الـ Modal
                // JS.InvokeVoidAsync("bootstrap.Modal.getInstance", "#editTemplateModal")?.hide();

                // تحديث القائمة
                await OnInitializedAsync();

                StateHasChanged();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error updating template: {ex.Message}");
            }
        }
    }

    private async Task DeleteTemplate(int templateId)
    {
        try
        {
            await DocumentService.DeleteTemplateAsync(templateId);

            // تحديث القائمة
            await LoadTemplates();

            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting template: {ex.Message}");
        }
    }
}