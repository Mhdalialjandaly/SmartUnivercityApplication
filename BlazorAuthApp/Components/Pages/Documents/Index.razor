@page "/documents"
@attribute [Authorize]
@inject IDocumentService DocumentService
@inject NavigationManager Navigation
@inject IJSRuntime JS
@rendermode InteractiveServer

<PageTitle>نظام الوثائق الرسمية - الجامعة الذكية</PageTitle>

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-0 fw-bold text-primary">نظام الوثائق الرسمية</h1>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/">الرئيسية</a></li>
                            <li class="breadcrumb-item active">الوثائق الرسمية</li>
                        </ol>
                    </nav>
                </div>
                <div class="d-flex gap-2">
                    <a href="/documents/templates" class="btn btn-outline-info">
                        <i class="fas fa-file-alt me-2"></i>إدارة القوالب
                    </a>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createDocumentModal">
                        <i class="fas fa-plus me-2"></i>إنشاء وثيقة جديدة
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- إحصائيات سريعة -->
    <div class="row g-4 mb-4">
        <div class="col-md-3">
            <div class="card border-primary border-start border-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="text-muted">إجمالي الوثائق</h5>
                            <h2 class="mb-0 fw-bold">@totalDocuments</h2>
                        </div>
                        <div class="bg-primary bg-opacity-10 p-3 rounded-circle">
                            <i class="fas fa-file-contract fa-2x text-primary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-warning border-start border-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="text-muted">المسودات</h5>
                            <h2 class="mb-0 fw-bold">@draftDocuments</h2>
                        </div>
                        <div class="bg-warning bg-opacity-10 p-3 rounded-circle">
                            <i class="fas fa-edit fa-2x text-warning"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-success border-start border-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="text-muted">الموقعة</h5>
                            <h2 class="mb-0 fw-bold">@signedDocuments</h2>
                        </div>
                        <div class="bg-success bg-opacity-10 p-3 rounded-circle">
                            <i class="fas fa-signature fa-2x text-success"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-info border-start border-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="text-muted">المطبوعة</h5>
                            <h2 class="mb-0 fw-bold">@printedDocuments</h2>
                        </div>
                        <div class="bg-info bg-opacity-10 p-3 rounded-circle">
                            <i class="fas fa-print fa-2x text-info"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- علامات التبويب -->
    <div class="row">
        <div class="col-12">
            <ul class="nav nav-tabs mb-4" id="documentTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="all-tab" data-bs-toggle="tab" data-bs-target="#all" type="button" role="tab" @onclick="() => LoadDocuments(DocumentStatus.All)">
                        جميع الوثائق
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="draft-tab" data-bs-toggle="tab" data-bs-target="#draft" type="button" role="tab" @onclick="() => LoadDocuments(DocumentStatus.Draft)">
                        المسودات
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="signed-tab" data-bs-toggle="tab" data-bs-target="#signed" type="button" role="tab" @onclick="() => LoadDocuments(DocumentStatus.Signed)">
                        الموقعة
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="printed-tab" data-bs-toggle="tab" data-bs-target="#printed" type="button" role="tab" @onclick="() => LoadDocuments(DocumentStatus.Printed)">
                        المطبوعة
                    </button>
                </li>
            </ul>
            <div class="tab-content" id="documentTabsContent">
                <!-- جميع الوثائق -->
                <div class="tab-pane fade show active" id="all" role="tabpanel">
                    <div class="card">
                        <div class="card-header bg-white">
                            <div class="row align-items-center">
                                <div class="col-md-6">
                                    <h5 class="mb-0">قائمة الوثائق</h5>
                                </div>
                                <div class="col-md-6">
                                    <div class="d-flex justify-content-md-end gap-2">
                                        <div class="input-group" style="max-width: 300px;">
                                            <span class="input-group-text"><i class="fas fa-search"></i></span>
                                            <input type="text" class="form-control" placeholder="بحث عن وثيقة..." @bind="searchTerm" @oninput="SearchDocuments">
                                        </div>
                                        <select class="form-select" style="max-width: 150px;" @onchange="FilterByType">
                                            <option value="">جميع الأنواع</option>
                                            <option value="شهادة">الشهادات</option>
                                            <option value="قرار">القرارات</option>
                                            <option value="خطاب">الخطابات</option>
                                            <option value="عقد">العقود</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead class="table-light">
                                        <tr>
                                            <th>#</th>
                                            <th>العنوان</th>
                                            <th>نوع الوثيقة</th>
                                            <th>رقم الوثيقة</th>
                                            <th>تاريخ الإنشاء</th>
                                            <th>الحالة</th>
                                            <th>الإجراءات</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (documents.Any())
                                        {
                                            @for (int i = 0; i < documents.Count; i++)
                                            {
                                                var doc = documents[i];
                                                <tr>
                                                    <td>@doc.Id</td>
                                                    <td>@doc.Title</td>
                                                    <td>@doc.DocumentType</td>
                                                    <td>@doc.DocumentNumber</td>
                                                    <td>@doc.CreatedDate.ToString("yyyy-MM-dd")</td>
                                                    <td>
                                                        <span class="badge @(doc.Status == "مسودة" ? "bg-warning" :
                                                                            doc.Status == "موقعة" ? "bg-success" :
                                                                            doc.Status == "مطبوعة" ? "bg-info" : "bg-secondary")">
                                                            @doc.Status
                                                        </span>
                                                    </td>
                                                    <td>
                                                        <div class="dropdown">
                                                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                                                <i class="fas fa-ellipsis-v"></i>
                                                            </button>
                                                            <ul class="dropdown-menu">
                                                                <li><a class="dropdown-item" href="/documents/@doc.Id"><i class="fas fa-eye me-2"></i>عرض التفاصيل</a></li>
                                                                @if (doc.Status == "مسودة")
                                                                {
                                                                    <li><a class="dropdown-item" href="/documents/@doc.Id/edit"><i class="fas fa-edit me-2"></i>تعديل</a></li>
                                                                    <li><a class="dropdown-item text-success" href="javascript:void(0)" @onclick="() => ShowSignModal(doc)"><i class="fas fa-signature me-2"></i>توقيع</a></li>
                                                                }
                                                                @if (doc.Status == "موقعة" || doc.Status == "مطبوعة")
                                                                {
                                                                    <li><a class="dropdown-item" href="@doc.FilePath" target="_blank"><i class="fas fa-download me-2"></i>تحميل PDF</a></li>
                                                                    @if (doc.Status == "موقعة")
                                                                    {
                                                                        <li><a class="dropdown-item text-info" href="javascript:void(0)" @onclick="() => PrintDocument(doc.Id)"><i class="fas fa-print me-2"></i>طباعة PDF</a></li>
                                                                    }
                                                                }
                                                                <li><hr class="dropdown-divider"></li>
                                                                <li><a class="dropdown-item text-danger" href="javascript:void(0)" @onclick="() => DeleteDocument(doc.Id)"><i class="fas fa-trash me-2"></i>حذف</a></li>
                                                            </ul>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                        else
                                        {
                                            <tr>
                                                <td colspan="7" class="text-center">لا توجد وثائق</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal إنشاء وثيقة جديدة -->
<div class="modal fade" id="createDocumentModal" tabindex="-1">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">إنشاء وثيقة جديدة</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="mb-3">
                        <label class="form-label">عنوان الوثيقة *</label>
                        <input type="text" class="form-control" placeholder="أدخل عنوان الوثيقة" @bind="newDocument.Title" required>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">نوع الوثيقة *</label>
                            <select class="form-select" @bind="newDocument.DocumentType" required>
                                <option value="">اختر نوع الوثيقة</option>
                                <option value="شهادة">شهادة</option>
                                <option value="قرار">قرار</option>
                                <option value="خطاب">خطاب</option>
                                <option value="عقد">عقد</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">قالب الوثيقة</label>
                            <select class="form-select" @onchange="LoadTemplateContent">
                                <option value="0">بدون قالب</option>
                                @foreach (var template in templates)
                                {
                                    <option value="@template.Id">@template.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">محتوى الوثيقة *</label>
                        <textarea class="form-control" rows="10" style="height: 300px;" @bind="newDocument.Content" placeholder="أدخل محتوى الوثيقة"></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">الجهة/الشخص المستلم</label>
                        <input type="text" class="form-control" placeholder="أدخل اسم الجهة أو الشخص" @bind="newDocument.IssuedTo">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                <button type="button" class="btn btn-primary" @onclick="CreateDocument">إنشاء الوثيقة</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal التوقيع الإلكتروني -->
<div class="modal fade" id="signDocumentModal" tabindex="-1">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">توقيع الوثيقة رقم #@documentToSign?.Id</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                @if (documentToSign != null)
                {
                    <div class="row">
                        <div class="col-md-6">
                            <h6>معلومات الوثيقة</h6>
                            <hr>
                            <p><strong>العنوان:</strong> @documentToSign.Title</p>
                            <p><strong>النوع:</strong> @documentToSign.DocumentType</p>
                            <p><strong>رقم الوثيقة:</strong> @documentToSign.DocumentNumber</p>
                            <p><strong>المحتوى:</strong></p>
                            <div class="border p-3 bg-light">
                                @((MarkupString)documentToSign.Content)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <h6>التوقيع الإلكتروني</h6>
                            <hr>
                            <div class="mb-3">
                                <label class="form-label">اسم الموقع *</label>
                                <input type="text" class="form-control" placeholder="أدخل اسمك" @bind="signerName" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">المنصب *</label>
                                <input type="text" class="form-control" placeholder="أدخل منصبك" @bind="signerPosition" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">التوقيع</label>
                                <div class="border p-3 text-center bg-light">
                                    <div class="signature-display" style="font-family: 'Arial', cursive; font-size: 2rem; color: #000; min-height: 100px; display: flex; align-items: center; justify-content: center;">
                                        @if (!string.IsNullOrEmpty(signerName))
                                        {
                                            <div>
                                                <div style="border-bottom: 2px solid #000; padding-bottom: 10px; margin-bottom: 10px;">@signerName</div>
                                                <div style="font-size: 1rem;">@DateTime.Now.ToString("yyyy-MM-dd HH:mm")</div>
                                            </div>
                                        }
                                        else
                                        {
                                            <span class="text-muted">سيتم عرض التوقيع هنا</span>
                                        }
                                    </div>
                                </div>
                                <div class="mt-2">
                                    <small class="text-muted">سيتم إنشاء توقيع رقمي فريد بناءً على اسمك وتاريخ التوقيع</small>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                <button type="button" class="btn btn-success" @onclick="SignDocument" disabled="@string.IsNullOrEmpty(signerName)">توقيع الوثيقة</button>
            </div>
        </div>
    </div>
</div>

@code {
    private List<OfficialDocumentDto> documents = new();
    private List<DocumentTemplateDto> templates = new();
    private OfficialDocumentDto newDocument = new();
    private OfficialDocumentDto? documentToSign;
    private int selectedTemplateId = 0;
    private bool isEditorInitialized = false;
    private string searchTerm = "";
    private string signerName = "";
    private string signerPosition = "";
    private string signatureData = "";

    // إحصائيات
    private int totalDocuments = 0;
    private int draftDocuments = 0;
    private int signedDocuments = 0;
    private int printedDocuments = 0;

    // الفلاتر
    private DocumentStatus currentStatus = DocumentStatus.All;
    private string selectedType = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadTemplates();
        await LoadStatistics();
        await LoadDocuments(DocumentStatus.All);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // تهيئة محرر النصوص
            await InitializeEditor();
        }
    }

    private async Task InitializeEditor()
    {
        try
        {
            await JS.InvokeVoidAsync("initializeQuillEditor", "editor");
            isEditorInitialized = true;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error initializing editor: {ex.Message}");
        }
    }

    private async Task LoadTemplates()
    {
        try
        {
            templates = await DocumentService.GetAllTemplatesAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading templates: {ex.Message}");
        }
    }

    private async Task LoadTemplateContent(ChangeEventArgs e)
    {
        var templateId = int.Parse(e.Value?.ToString() ?? "0");
        if (templateId > 0)
        {
            try
            {
                var template = await DocumentService.GetTemplateByIdAsync(templateId);
                if (template != null)
                {
                    // تحديث محتوى الوثيقة مباشرة من C#
                    newDocument.Content = template.HtmlContent;

                    // تحديث الـ textarea المرتبط مباشرة
                    // هذا سيحدث الواجهة تلقائياً عند إعادة التصيير
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error loading template content: {ex.Message}");
            }
        }
        else
        {
            // مسح محتوى الوثيقة
            newDocument.Content = "";
        }

        // إعادة تحميل المكون لتحديث واجهة المستخدم
        StateHasChanged();
    }

    private async Task LoadStatistics()
    {
        try
        {
            var allDocs = await DocumentService.GetAllDocumentsAsync();
            totalDocuments = allDocs.Count;
            draftDocuments = allDocs.Count(d => d.Status == "مسودة");
            signedDocuments = allDocs.Count(d => d.Status == "موقعة");
            printedDocuments = allDocs.Count(d => d.Status == "مطبوعة");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading statistics: {ex.Message}");
        }
    }

    private async Task LoadDocuments(DocumentStatus status)
    {
        try
        {
            var allDocs = await DocumentService.GetAllDocumentsAsync();
            if (status != DocumentStatus.All)
            {
                var statusString = status switch
                {
                    DocumentStatus.Draft => "مسودة",
                    DocumentStatus.Signed => "موقعة",
                    DocumentStatus.Printed => "مطبوعة",
                    _ => ""
                };
                allDocs = allDocs.Where(d => d.Status == statusString).ToList();
            }
            if (!string.IsNullOrEmpty(selectedType))
            {
                allDocs = allDocs.Where(d => d.DocumentType == selectedType).ToList();
            }
            if (!string.IsNullOrEmpty(searchTerm))
            {
                allDocs = allDocs.Where(d =>
                    d.Title.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
                    d.DocumentNumber.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)).ToList();
            }
            documents = allDocs;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading documents: {ex.Message}");
        }
    }

    private async Task SearchDocuments(ChangeEventArgs e)
    {
        searchTerm = e.Value?.ToString() ?? "";
        await LoadDocuments(currentStatus);
    }

    private async Task FilterByType(ChangeEventArgs e)
    {
        selectedType = e.Value?.ToString() ?? "";
        await LoadDocuments(currentStatus);
    }

    private async Task CreateDocument()
    {
        try
        {
            // محتوى الوثيقة متوفر بالفعل في newDocument.Content
            // لا حاجة لاستدعاء getQuillContent

            newDocument.CreatedBy = "المستخدم الحالي"; // يجب استبداله بالمستخدم الفعلي
            newDocument.CreatedDate = DateTime.Now;
            newDocument.Status = "مسودة";

            var createdDoc = await DocumentService.CreateDocumentAsync(newDocument);

            // إعادة تعيين النموذج
            newDocument = new OfficialDocumentDto();
            selectedTemplateId = 0;

            // تحديث القائمة والإحصائيات
            await LoadStatistics();
            await LoadDocuments(DocumentStatus.All);

            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error creating document: {ex.Message}");
        }
    }

    private void ShowSignModal(OfficialDocumentDto document)
    {
        documentToSign = document;
        signerName = "";
        signerPosition = "";
        signatureData = "";
        // فتح الـ Modal
        // JS.InvokeVoidAsync("bootstrap.Modal.getOrCreateInstance", "#signDocumentModal")?.show();
    }

    private async Task SignDocument()
    {
        if (documentToSign != null && !string.IsNullOrEmpty(signerName))
        {
            try
            {
                // إنشاء توقيع رقمي فريد
                var signatureText = $"{signerName}\n{DateTime.Now:yyyy-MM-dd HH:mm}";
                // تحويل النص إلى صورة Base64 (اختياري)
                signatureData = $"text/plain;charset=utf-8,{Uri.EscapeDataString(signatureText)}";
                
                await DocumentService.SignDocumentAsync(documentToSign.Id, signatureData, signerName, signerPosition);
                
                // إغلاق الـ Modal
                // JS.InvokeVoidAsync("bootstrap.Modal.getInstance", "#signDocumentModal")?.hide();
                
                // تحديث القائمة والإحصائيات
                await LoadStatistics();
                await LoadDocuments(currentStatus);
                
                StateHasChanged();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error signing document: {ex.Message}");
            }
        }
    }

    private async Task PrintDocument(int documentId)
    {
        try
        {
            var filePath = await DocumentService.GenerateDocumentPdfAsync(documentId);
            
            // تحديث القائمة والإحصائيات
            await LoadStatistics();
            await LoadDocuments(currentStatus);
            
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error printing document: {ex.Message}");
        }
    }

    private async Task DeleteDocument(int documentId)
    {
        try
        {
            await DocumentService.DeleteDocumentAsync(documentId);
            
            // تحديث القائمة والإحصائيات
            await LoadStatistics();
            await LoadDocuments(currentStatus);
            
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting document: {ex.Message}");
        }
    }

    public enum DocumentStatus
    {
        All,
        Draft,
        Signed,
        Printed
    }
}