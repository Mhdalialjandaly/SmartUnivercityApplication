@inject IToastService ToastService

<div class="university-toast-container">
    @foreach (var toast in toasts)
    {
        <div class="university-toast @(GetToastAnimationClass(toast.Level)) @(GetToastPositionClass(toast.Level))"
             role="alert"
             aria-live="assertive"
             aria-atomic="true">
            <div class="toast-wrapper @(GetToastClass(toast.Level))">
                <div class="toast-header">
                    <div class="toast-icon">
                        <i class="@GetIconClass(toast.Level)"></i>
                    </div>
                    <div class="toast-header-content">
                        @if (!string.IsNullOrEmpty(toast.Heading))
                        {
                            <strong class="toast-heading">@toast.Heading</strong>
                        }
                        <small class="toast-time">الآن</small>
                    </div>
                    <button type="button" class="toast-close" @onclick="() => RemoveToast(toast.Id)">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                <div class="toast-body">
                    <div class="toast-message">@toast.Message</div>
                    <div class="toast-progress">
                        <div class="progress-bar @(GetProgressBarClass(toast.Level))"
                             style="width: @(GetProgressPercentage(toast))%"></div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<style>
    /* University Toast Container */
    .university-toast-container {
        position: fixed;
        top: 20px;
        left: 20px;
        z-index: 9999;
        direction: rtl;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    /* Toast Styles */
    .university-toast {
        margin-bottom: 15px;
        opacity: 0;
        transform: translateX(100%);
        transition: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
        min-width: 320px;
        max-width: 400px;
    }

        .university-toast.show {
            opacity: 1;
            transform: translateX(0);
        }

        .university-toast.hide {
            opacity: 0;
            transform: translateX(100%);
        }

    /* Toast Wrapper */
    .toast-wrapper {
        border-radius: 12px;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        overflow: hidden;
        border: none;
        backdrop-filter: blur(10px);
    }

    /* Toast Header */
    .toast-header {
        display: flex;
        align-items: center;
        padding: 15px 20px;
        background: rgba(255, 255, 255, 0.95);
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
    }

    .toast-icon {
        width: 32px;
        height: 32px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-left: 12px;
        flex-shrink: 0;
    }

    .toast-header-content {
        flex: 1;
        display: flex;
        flex-direction: column;
    }

    .toast-heading {
        font-size: 1.1rem;
        font-weight: 700;
        margin: 0 0 2px 0;
        color: #0f1724;
    }

    .toast-time {
        font-size: 0.8rem;
        color: #94a3b8;
        font-weight: 500;
    }

    .toast-close {
        background: transparent;
        border: none;
        color: #94a3b8;
        cursor: pointer;
        padding: 5px;
        border-radius: 50%;
        width: 28px;
        height: 28px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s ease;
        flex-shrink: 0;
    }

        .toast-close:hover {
            background: #f1f5f9;
            color: #0f1724;
        }

    /* Toast Body */
    .toast-body {
        padding: 15px 20px;
        background: rgba(255, 255, 255, 0.98);
    }

    .toast-message {
        font-size: 0.95rem;
        line-height: 1.5;
        color: #334155;
        margin-bottom: 12px;
        font-weight: 500;
    }

    /* Progress Bar */
    .toast-progress {
        height: 4px;
        background: #f1f5f9;
        border-radius: 2px;
        overflow: hidden;
    }

    .progress-bar {
        height: 100%;
        border-radius: 2px;
        transition: width 0.1s linear;
    }

    /* Toast Colors - University Theme */
    .toast-wrapper.info {
        background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
    }

        .toast-wrapper.info .toast-icon {
            background: rgba(59, 130, 246, 0.15);
            color: #3b82f6;
        }

        .toast-wrapper.info .progress-bar {
            background: linear-gradient(90deg, #3b82f6 0%, #2563eb 100%);
        }

    .toast-wrapper.success {
        background: linear-gradient(135deg, #dcfce7 0%, #bbf7d0 100%);
    }

        .toast-wrapper.success .toast-icon {
            background: rgba(34, 197, 94, 0.15);
            color: #22c55e;
        }

        .toast-wrapper.success .progress-bar {
            background: linear-gradient(90deg, #22c55e 0%, #16a34a 100%);
        }

    .toast-wrapper.warning {
        background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
    }

        .toast-wrapper.warning .toast-icon {
            background: rgba(251, 191, 36, 0.15);
            color: #fbbf24;
        }

        .toast-wrapper.warning .progress-bar {
            background: linear-gradient(90deg, #fbbf24 0%, #f59e0b 100%);
        }

    .toast-wrapper.error {
        background: linear-gradient(135deg, #fee2e2 0%, #fecaca 100%);
    }

        .toast-wrapper.error .toast-icon {
            background: rgba(239, 68, 68, 0.15);
            color: #ef4444;
        }

        .toast-wrapper.error .progress-bar {
            background: linear-gradient(90deg, #ef4444 0%, #dc2626 100%);
        }

    /* Toast Icons */
    .toast-icon i {
        font-size: 16px;
    }

    /* Animation Classes */
    .toast-animation-slide {
        animation: slideInLeft 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

    .toast-animation-bounce {
        animation: bounceInLeft 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

    .toast-animation-fade {
        animation: fadeInLeft 0.3s ease-out;
    }

    /* Position Classes */
    .toast-position-top-right {
        position: fixed;
        top: 20px;
        left: 20px;
    }

    .toast-position-top-left {
        position: fixed;
        top: 20px;
        right: 20px;
    }

    .toast-position-bottom-right {
        position: fixed;
        bottom: 20px;
        left: 20px;
    }

    .toast-position-bottom-left {
        position: fixed;
        bottom: 20px;
        right: 20px;
    }

    /* Animations */
    @@keyframes slideInLeft {
        from {
            opacity: 0;
            transform: translateX(100%) scaleX(0.8);
        }

        to {
            opacity: 1;
            transform: translateX(0) scaleX(1);
        }
    }

    @@keyframes bounceInLeft {
        0% {
            opacity: 0;
            transform: translateX(1000px);
        }

        60% {
            opacity: 1;
            transform: translateX(-30px);
        }

        80% {
            transform: translateX(10px);
        }

        100% {
            transform: translateX(0);
        }
    }

    @@keyframes fadeInLeft {
        from {
            opacity: 0;
            transform: translateX(50px);
        }

        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .university-toast-container {
            left: 10px;
            right: 10px;
            top: 10px;
        }

        .university-toast {
            min-width: 280px;
            max-width: 100%;
        }

        .toast-header {
            padding: 12px 15px;
        }

        .toast-body {
            padding: 12px 15px;
        }

        .toast-heading {
            font-size: 1rem;
        }

        .toast-message {
            font-size: 0.9rem;
        }
    }

    @@media (max-width: 576px) {
        .university-toast-container {
            left: 5px;
            right: 5px;
        }

        .university-toast {
            min-width: 250px;
        }

        .toast-icon {
            width: 28px;
            height: 28px;
        }

            .toast-icon i {
                font-size: 14px;
            }
    }
</style>

@code {
    private class ToastItem
    {
        public string Id { get; set; } = Guid.NewGuid().ToString();
        public string Message { get; set; } = string.Empty;
        public ToastLevel Level { get; set; }
        public string? Heading { get; set; }
        public int DurationSeconds { get; set; }
        public Timer? Timer { get; set; }
        public DateTime CreatedAt { get; set; } = DateTime.Now;
    }

    private List<ToastItem> toasts = new();

    protected override void OnInitialized()
    {
        ToastService.OnShow += ShowToast;
        ToastService.OnHideAll += HideAllToasts;
    }

    private void ShowToast(string message, ToastLevel level, string? heading, int durationSeconds)
    {
        var toast = new ToastItem
            {
                Message = message,
                Level = level,
                Heading = heading,
                DurationSeconds = durationSeconds,
                CreatedAt = DateTime.Now
            };

        // إعداد المؤقت لإزالة التوست تلقائياً
        toast.Timer = new Timer(_ =>
        {
            InvokeAsync(() =>
            {
                RemoveToast(toast.Id);
            });
        }, null, durationSeconds * 1000, Timeout.Infinite);

        toasts.Add(toast);
        StateHasChanged();
    }

    private void RemoveToast(string id)
    {
        var toast = toasts.FirstOrDefault(t => t.Id == id);
        if (toast != null)
        {
            toast.Timer?.Dispose();
            toasts.Remove(toast);
            StateHasChanged();
        }
    }

    private void HideAllToasts()
    {
        foreach (var toast in toasts)
        {
            toast.Timer?.Dispose();
        }
        toasts.Clear();
        StateHasChanged();
    }

    private string GetToastClass(ToastLevel level)
    {
        return level switch
        {
            ToastLevel.Info => "info",
            ToastLevel.Success => "success",
            ToastLevel.Warning => "warning",
            ToastLevel.Error => "error",
            _ => "info"
        };
    }

    private string GetIconClass(ToastLevel level)
    {
        return level switch
        {
            ToastLevel.Info => "fas fa-info-circle",
            ToastLevel.Success => "fas fa-check-circle",
            ToastLevel.Warning => "fas fa-exclamation-triangle",
            ToastLevel.Error => "fas fa-exclamation-circle",
            _ => "fas fa-info-circle"
        };
    }

    private string GetToastAnimationClass(ToastLevel level)
    {
        return "toast-animation-slide show";
    }

    private string GetToastPositionClass(ToastLevel level)
    {
        return "toast-position-top-right";
    }

    private string GetProgressBarClass(ToastLevel level)
    {
        return "";
    }

    private double GetProgressPercentage(ToastItem toast)
    {
        var elapsed = (DateTime.Now - toast.CreatedAt).TotalSeconds;
        var percentage = 100 - (elapsed / toast.DurationSeconds * 100);
        return Math.Max(0, Math.Min(100, percentage));
    }

    public void Dispose()
    {
        ToastService.OnShow -= ShowToast;
        ToastService.OnHideAll -= HideAllToasts;
        HideAllToasts();
    }
}