@page "/academic-calendar"
@inject IAcademicCalendarServices CalendarService
@inject IDepartmentServices DepartmentService
@rendermode InteractiveServer

<PageTitle>التقويم الأكاديمي - الجامعة الذكية</PageTitle>

<div class="main-panel">
    <div class="content">
        <div class="page-inner" >
            <!-- شريط العنوان والتنقل -->
            <div class="page-header">
                <div class="d-flex align-items-center">
                    <h4 class="page-title text-white">
                        <i class="fas fa-calendar-alt me-2"></i>التقويم الأكاديمي
                    </h4>
                    <div class="ml-md-auto">
                        <ul class="breadcrumbs">
                            <li class="nav-home">
                                <a href="/">
                                    <i class="fas fa-home text-white"></i>
                                </a>
                            </li>
                            <li class="separator">
                                <i class="fas fa-chevron-left text-white"></i>
                            </li>
                            <li class="nav-item">
                                <span class="text-white">التقويم الأكاديمي</span>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>

            <!-- لوحة التحكم الرئيسية -->
            <div class="card">
                <div class="card-header">
                    <div class="d-flex align-items-center">
                        <h4 class="card-title">إدارة التقويم الأكاديمي</h4>
                        <div class="ml-auto">
                            <button class="btn @(isInEditMode ? "btn-success" : "btn-primary") btn-round" @onclick="ToggleEditMode">
                                <i class="fas @(isInEditMode ? "fa-check" : "fa-plus") me-2"></i>
                                @(isInEditMode ? "إنهاء التحرير" : "إضافة حدث")
                            </button>
                        </div>
                    </div>
                </div>

                <div class="card-body">
                    <!-- شريط التحكم -->
                    <div class="row mb-4">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>السنة الأكاديمية</label>
                                <select @bind="selectedAcademicYear" class="form-control">
                                    @foreach (var year in academicYears)
                                    {
                                        <option value="@year">@year - @(year + 1)</option>
                                    }
                                </select>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label>الفصل الدراسي</label>
                                <select @bind="selectedSemester" class="form-control">
                                    <option value="0">كل الفصول</option>
                                    <option value="1">الفصل الأول</option>
                                    <option value="2">الفصل الثاني</option>
                                    <option value="3">الفصل الصيفي</option>
                                </select>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label>&nbsp;</label>
                                <button class="btn btn-primary btn-block" @onclick="LoadCalendarData">
                                    <i class="fas fa-sync-alt me-2"></i>تحديث البيانات
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- عرض التقويم -->
                    <!-- عرض التقويم -->
                    <div class="calendar-view mt-4" dir="rtl">
                        <div class="calendar-nav bg-light p-3 rounded-top d-flex justify-content-between align-items-center">
                            <button @onclick="PreviousMonth" class="btn btn-dark btn-sm">
                                <i class="fas fa-chevron-right me-2"></i> الشهر السابق
                            </button>
                            <h4 class="mb-0 text-center">@currentMonthName @currentYear</h4>
                            <button @onclick="NextMonth" class="btn btn-dark btn-sm">
                                الشهر التالي <i class="fas fa-chevron-left me-2"></i>
                            </button>
                        </div>

                        <div class="calendar-container bg-white rounded-bottom">
                            <div class="calendar-header">
                                @foreach (var day in arabicWeekDays)
                                {
                                    <div class="calendar-weekday">@day</div>
                                }
                            </div>

                            <div class="calendar-body">
                                @{
                                    var firstDay = new DateTime(currentYear, currentMonth, 1);
                                    var daysToSkip = (int)firstDay.DayOfWeek;
                                    var totalCells = daysToSkip + daysInMonth;
                                    var totalWeeks = (int)Math.Ceiling(totalCells / 7.0);

                                    for (int week = 0; week < totalWeeks; week++)
                                    {
                                        <div class="calendar-week">
                                            @for (int dayOfWeek = 0; dayOfWeek < 7; dayOfWeek++)
                                            {
                                                var dayIndex = week * 7 + dayOfWeek;
                                                if (dayIndex >= daysToSkip && dayIndex < daysToSkip + daysInMonth)
                                                {
                                                    var day = dayIndex - daysToSkip + 1;
                                                    var currentDate = new DateTime(currentYear, currentMonth, day);
                                                    var dayEvents = GetEventsForDay(currentDate);

                                                    <div class="calendar-day @(IsToday(currentDate) ? "today" : "")"
                                                         @onclick="() => HandleDayClick(currentDate)">
                                                        <div class="day-number">@day</div>
                                                        <div class="day-events">
                                                            @foreach (var evt in dayEvents.Take(2))
                                                            {
                                                                <div class="calendar-event @GetEventClass(evt)"
                                                                     @onclick="() => ShowEventDetails(evt)">
                                                                    @evt.Title
                                                                </div>
                                                            }
                                                            @if (dayEvents.Count > 2)
                                                            {
                                                                <div class="more-events">+@(dayEvents.Count - 2) أكثر</div>
                                                            }
                                                        </div>
                                                    </div>
                                                }
                                                else if (dayIndex < daysToSkip)
                                                {
                                                    <div class="calendar-day empty"></div>
                                                }
                                                else
                                                {
                                                    <div class="calendar-day empty"></div>
                                                }
                                            }
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
                    <style>
                        /* أنماط التقويم */
                        .calendar-container {
                            border: 1px solid #e0e0e0;
                            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
                        }

                        .calendar-header {
                            display: grid;
                            grid-template-columns: repeat(7, 1fr);
                            background-color: #f8f9fa;
                            font-weight: bold;
                            text-align: center;
                            border-bottom: 1px solid #e0e0e0;
                        }

                        .calendar-weekday {
                            padding: 10px;
                            color: #2c3e50;
                        }

                        .calendar-body {
                            display: flex;
                            flex-direction: column;
                        }

                        .calendar-week {
                            display: grid;
                            grid-template-columns: repeat(7, 1fr);
                            min-height: 100px;
                        }

                        .calendar-day {
                            border: 1px solid #e0e0e0;
                            padding: 5px;
                            position: relative;
                            min-height: 100px;
                            transition: background-color 0.2s;
                        }

                            .calendar-day:hover {
                                background-color: #f8f9fa;
                            }

                            .calendar-day.today {
                                background-color: #e3f2fd;
                            }

                            .calendar-day.empty {
                                background-color: #f8f9fa;
                            }

                        .day-number {
                            font-weight: bold;
                            text-align: left;
                            margin-bottom: 5px;
                        }

                        .day-events {
                            overflow: hidden;
                        }

                        .calendar-event {
                            font-size: 0.75rem;
                            padding: 3px 6px;
                            margin-bottom: 3px;
                            border-radius: 3px;
                            cursor: pointer;
                            overflow: hidden;
                            text-overflow: ellipsis;
                            white-space: nowrap;
                        }

                        .more-events {
                            font-size: 0.7rem;
                            color: #6c757d;
                            cursor: pointer;
                            padding: 2px;
                            text-align: center;
                        }

                        /* أنماط الأحداث حسب النوع */
                        .bg-primary-light {
                            background-color: #e3f2fd;
                            color: #0d47a1;
                            border-left: 3px solid #2196f3;
                        }

                        .bg-danger-light {
                            background-color: #ffebee;
                            color: #b71c1c;
                            border-left: 3px solid #f44336;
                        }

                        .bg-warning-light {
                            background-color: #fff8e1;
                            color: #ff8f00;
                            border-left: 3px solid #ffc107;
                        }

                        .bg-success-light {
                            background-color: #e8f5e9;
                            color: #1b5e20;
                            border-left: 3px solid #4caf50;
                        }

                        /* تصميم متجاوب */
                        @@media (max-width: 768px) {
                            .calendar-weekday {
                                font-size: 0.8rem;
                                padding: 5px;
                            }

                            .calendar-day {
                                min-height: 80px;
                            }

                            .calendar-event {
                                font-size: 0.65rem;
                                padding: 2px 4px;
                            }
                        }

                        @@media (max-width: 576px) {
                            .calendar-weekday {
                                font-size: 0.7rem;
                            }

                            .calendar-day {
                                min-height: 60px;
                            }

                            .day-number {
                                font-size: 0.8rem;
                            }
                        }
                    </style>

<!-- نافذة تفاصيل الحدث -->
@if (selectedEvent != null)
{
    <div class="modal fade show" style="display: block; background: rgba(0,0,0,0.5);" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header @GetEventClass(selectedEvent)">
                    <h5 class="modal-title text-white">@selectedEvent.Title</h5>
                    <button type="button" class="close text-white" @onclick="CloseEventDetails">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="d-flex align-items-center mb-3">
                        <i class="fas fa-calendar-alt text-muted me-2"></i>
                        <span>@selectedEvent.StartDate.ToString("yyyy/MM/dd") - @selectedEvent.EndDate.ToString("yyyy/MM/dd")</span>
                    </div>
                    <div class="d-flex align-items-center mb-3">
                        <i class="fas fa-clock text-muted me-2"></i>
                        <span>@selectedEvent.StartDate.ToString("hh:mm tt") - @selectedEvent.EndDate.ToString("hh:mm tt")</span>
                    </div>
                    <div class="d-flex align-items-center mb-3">
                        <i class="fas fa-info-circle text-muted me-2"></i>
                        <span>@selectedEvent.Description</span>
                    </div>
                    <div class="d-flex align-items-center">
                        <i class="fas fa-building text-muted me-2"></i>
                        <span>@(selectedEvent.Department?.Name ?? "جميع الأقسام")</span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" @onclick="DeleteEvent">
                        <i class="fas fa-trash me-2"></i>حذف
                    </button>
                    <button class="btn btn-secondary" @onclick="CloseEventDetails">
                        <i class="fas fa-times me-2"></i>إغلاق
                    </button>
                </div>
            </div>
        </div>
    </div>
}

<!-- نافذة إضافة حدث جديد -->
@if (showAddEventModal)
{
    <div class="modal fade show" style="display: block; background: rgba(0,0,0,0.5);" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h5 class="modal-title text-white">
                        <i class="fas fa-plus-circle me-2"></i>إضافة حدث جديد
                    </h5>
                    <button type="button" class="close text-white" @onclick="CloseAddEventModal">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label class="form-label required">عنوان الحدث</label>
                        <input @bind="newEvent.Title" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="form-label">وصف الحدث</label>
                        <textarea @bind="newEvent.Description" class="form-control" rows="3"></textarea>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label required">تاريخ البداية</label>
                                <input type="date" @bind="newEvent.StartDate" class="form-control" />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label">وقت البداية</label>
                                <input type="time" @bind="newEvent.StartTime" class="form-control" />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label">تاريخ النهاية</label>
                                <input type="date" @bind="newEvent.EndDate" class="form-control" />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label">وقت النهاية</label>
                                <input type="time" @bind="newEvent.EndTime" class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="form-label required">نوع الحدث</label>
                        <select @bind="newEvent.EventType" class="form-control">
                            <option value="@CalendarEventType.Academic">أكاديمي</option>
                            <option value="@CalendarEventType.Holiday">إجازة</option>
                            <option value="@CalendarEventType.Exam">امتحان</option>
                            <option value="@CalendarEventType.Registration">تسجيل</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label class="form-label">القسم</label>
                        <select @bind="newEvent.DepartmentId" class="form-control">
                            <option value="">جميع الأقسام</option>
                            @if (departments != null)
                            {
                                @foreach (var dept in departments)
                                {
                                    <option value="@dept.Id">@dept.Name</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" @onclick="AddNewEvent">
                        <i class="fas fa-save me-2"></i>حفظ
                    </button>
                    <button class="btn btn-secondary" @onclick="CloseAddEventModal">
                        <i class="fas fa-times me-2"></i>إلغاء
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private DateTime currentDate = DateTime.Now;
    private int currentYear => currentDate.Year;
    private int currentMonth => currentDate.Month;
    private int daysInMonth => DateTime.DaysInMonth(currentYear, currentMonth);
    private string currentMonthName => new System.Globalization.CultureInfo("ar-SA").DateTimeFormat.GetMonthName(currentMonth);
    private int firstDayOfWeek => (int)new DateTime(currentYear, currentMonth, 1).DayOfWeek;

    private List<AcademicCalendarDto> calendarEvents = new();
    private AcademicCalendarDto selectedEvent = null;
    private int selectedAcademicYear = DateTime.Now.Year;
    private int selectedSemester = 0;
    private List<int> academicYears = Enumerable.Range(DateTime.Now.Year - 2, 5).ToList();
    private string[] arabicWeekDays = { "الأحد", "الإثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت" };
    private bool isInEditMode = false;
    private bool showAddEventModal = false;
    private NewEventDto newEvent = new();
    public List<DepartmentDto> departments { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadCalendarData();
        await LoadDepartments();
    }

    private async Task LoadCalendarData()
    {
        DateTime startDate = new DateTime(selectedAcademicYear, 1, 1);
        DateTime endDate = new DateTime(selectedAcademicYear, 12, 31);

        if (selectedSemester > 0)
        {
            switch (selectedSemester)
            {
                case 1: // الفصل الأول
                    startDate = new DateTime(selectedAcademicYear, 9, 1);
                    endDate = new DateTime(selectedAcademicYear, 12, 31);
                    break;
                case 2: // الفصل الثاني
                    startDate = new DateTime(selectedAcademicYear, 1, 1);
                    endDate = new DateTime(selectedAcademicYear, 4, 30);
                    break;
                case 3: // الفصل الصيفي
                    startDate = new DateTime(selectedAcademicYear, 5, 1);
                    endDate = new DateTime(selectedAcademicYear, 8, 31);
                    break;
            }
        }

        calendarEvents = await CalendarService.GetEventsByDateRangeAsync(startDate, endDate);
    }

    private async Task LoadDepartments()
    {
        departments = await DepartmentService.GetAllDepartmentsAsync();
    }

    private void ShowDayForAddEvent(DateTime date)
    {
        newEvent = new NewEventDto
            {
                StartDate = date,
                EndDate = date,
                StartTime = DateTime.Now,
                EndTime = DateTime.Now.AddHours(1),
                EventType = CalendarEventType.Academic
            };
        showAddEventModal = true;
    }

    private void CloseAddEventModal()
    {
        showAddEventModal = false;
    }

    private async Task AddNewEvent()
    {
        try
        {
            var eventToAdd = new AcademicCalendarDto
                {
                    Title = newEvent.Title,
                    Description = newEvent.Description,
                    StartDate = new DateTime(newEvent.StartDate.Year, newEvent.StartDate.Month, newEvent.StartDate.Day,
                                            newEvent.StartTime.Hour, newEvent.StartTime.Minute, 0),
                    EndDate = new DateTime(newEvent.EndDate.Year, newEvent.EndDate.Month, newEvent.EndDate.Day,
                                          newEvent.EndTime.Hour, newEvent.EndTime.Minute, 0),
                    EventType = newEvent.EventType,
                    DepartmentId = newEvent.DepartmentId,
                    AcademicYear = newEvent.StartDate.Year,
                    IsUniversityWide = newEvent.DepartmentId == null
                };

            await CalendarService.CreateEventAsync(eventToAdd);
            await LoadCalendarData();
            showAddEventModal = false;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"حدث خطأ أثناء إضافة الحدث: {ex.Message}");
        }
    }

    private void HandleDayClick(DateTime date)
    {
        if (isInEditMode)
        {
            ShowDayForAddEvent(date);
        }
    }

    private List<AcademicCalendarDto> GetEventsForDay(DateTime date)
    {
        return calendarEvents.Where(e => date >= e.StartDate.Date && date <= e.EndDate.Date).ToList();
    }

    private string GetEventClass(AcademicCalendarDto evt)
    {
        return evt.EventType switch
        {
            CalendarEventType.Academic => "bg-primary-light text-primary",
            CalendarEventType.Holiday => "bg-danger-light text-danger",
            CalendarEventType.Exam => "bg-warning-light text-warning",
            CalendarEventType.Registration => "bg-success-light text-success",
            _ => ""
        };
    }

    private bool IsToday(DateTime date)
    {
        return date.Date == DateTime.Now.Date;
    }

    private void PreviousMonth()
    {
        currentDate = currentDate.AddMonths(-1);
    }

    private void NextMonth()
    {
        currentDate = currentDate.AddMonths(1);
    }

    private void ShowEventDetails(AcademicCalendarDto evt)
    {
        selectedEvent = evt;
    }

    private void CloseEventDetails()
    {
        selectedEvent = null;
    }

    private async Task DeleteEvent()
    {
        if (selectedEvent != null)
        {
            await CalendarService.DeleteEventAsync(selectedEvent.Id);
            await LoadCalendarData();
            selectedEvent = null;
        }
    }

    private void ToggleEditMode()
    {
        isInEditMode = !isInEditMode;
        if (!isInEditMode)
        {
            showAddEventModal = false;
        }
    }
}