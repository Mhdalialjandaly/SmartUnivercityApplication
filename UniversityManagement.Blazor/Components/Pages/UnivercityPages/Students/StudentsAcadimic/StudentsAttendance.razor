@page "/studentsattendance"
@attribute [Authorize]
@inject IStudentAttendanceServices StudentAttendanceService
@inject IStudentServices StudentService
@inject ICourseServices CourseService
@inject IDepartmentServices DepartmentService
@inject IJSRuntime JS
@rendermode InteractiveServer

<PageTitle>سجل الحضور والغياب - الجامعة الذكية</PageTitle>

<div class="main-panel">
    <div class="content">
        <div class="page-inner">
            <div class="attendance-management-container" dir="rtl">
                <!-- شريط العنوان مع خلفية متدرجة -->
                <div class="admin-header bg-gradient-primary">
                    <div class="container-fluid">
                        <div class="header-content">
                            <div class="header-title">
                                <h1>
                                    <i class="fas fa-clipboard-list"></i>
                                    <span>سجل الحضور والغياب</span>
                                </h1>
                                <nav class="breadcrumb">
                                    <a href="/" class="breadcrumb-item"><i class="fas fa-home"></i></a>
                                    <a href="/academic" class="breadcrumb-item">الشؤون الأكاديمية</a>
                                    <span class="breadcrumb-item active">سجل الحضور</span>
                                </nav>
                            </div>
                            <div class="header-actions">
                                <button class="btn btn-light btn-refresh" @onclick="RefreshAttendance">
                                    <i class="fas fa-sync-alt"></i>
                                    <span>تحديث البيانات</span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- بطاقات الإحصاءات -->
                <div class="stats-cards">
                    <div class="container-fluid">
                        <div class="row">
                            <!-- بطاقة إجمالي المحاضرات -->
                            <div class="col-md-3">
                                <div class="stat-card card-dark bg-primary-gradient">
                                    <div class="card-body">
                                        <div class="d-flex align-items-center">
                                            <div class="flex-grow-1">
                                                <h2 class="mb-0">@attendanceSummary.TotalSessions</h2>
                                                <p class="mb-0">إجمالي المحاضرات</p>
                                            </div>
                                            <div class="icon-shape bg-primary-light rounded-circle">
                                                <i class="fas fa-calendar-alt text-primary"></i>
                                            </div>
                                        </div>
                                        <div class="mt-3">
                                            <a href="#" @onclick="() => LoadAttendances(AttendanceStatus.All)" class="text-white">
                                                عرض الكل <i class="fas fa-arrow-left"></i>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- بطاقة الحضور -->
                            <div class="col-md-3">
                                <div class="stat-card card-dark bg-success-gradient">
                                    <div class="card-body">
                                        <div class="d-flex align-items-center">
                                            <div class="flex-grow-1">
                                                <h2 class="mb-0">@attendanceSummary.PresentCount</h2>
                                                <p class="mb-0">حضور</p>
                                            </div>
                                            <div class="icon-shape bg-success-light rounded-circle">
                                                <i class="fas fa-user-check text-success"></i>
                                            </div>
                                        </div>
                                        <div class="mt-3">
                                            <a href="#" @onclick="() => LoadAttendances(AttendanceStatus.Present)" class="text-white">
                                                عرض الحاضرين <i class="fas fa-arrow-left"></i>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- بطاقة الغياب -->
                            <div class="col-md-3">
                                <div class="stat-card card-dark bg-danger-gradient">
                                    <div class="card-body">
                                        <div class="d-flex align-items-center">
                                            <div class="flex-grow-1">
                                                <h2 class="mb-0">@attendanceSummary.AbsentCount</h2>
                                                <p class="mb-0">غياب</p>
                                            </div>
                                            <div class="icon-shape bg-danger-light rounded-circle">
                                                <i class="fas fa-user-times text-danger"></i>
                                            </div>
                                        </div>
                                        <div class="mt-3">
                                            <a href="#" @onclick="() => LoadAttendances(AttendanceStatus.Absent)" class="text-white">
                                                عرض الغائبين <i class="fas fa-arrow-left"></i>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- بطاقة المعذورين -->
                            <div class="col-md-3">
                                <div class="stat-card card-dark bg-info-gradient">
                                    <div class="card-body">
                                        <div class="d-flex align-items-center">
                                            <div class="flex-grow-1">
                                                <h2 class="mb-0">@attendanceSummary.ExcusedCount</h2>
                                                <p class="mb-0">معذورون</p>
                                            </div>
                                            <div class="icon-shape bg-info-light rounded-circle">
                                                <i class="fas fa-user-clock text-info"></i>
                                            </div>
                                        </div>
                                        <div class="mt-3">
                                            <a href="#" @onclick="() => LoadAttendances(AttendanceStatus.Excused)" class="text-white">
                                                عرض المعذورين <i class="fas fa-arrow-left"></i>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- لوحة التحكم -->
                <div class="card">
                    <div class="card-header">
                        <div class="d-flex align-items-center">
                            <h4 class="card-title">سجلات الحضور والغياب</h4>
                            <div class="ml-auto">
                                <button class="btn btn-primary btn-round" data-bs-toggle="modal" data-bs-target="#addAttendanceModal">
                                    <i class="fas fa-plus me-2"></i>إضافة حضور
                                </button>
                                <button class="btn btn-success btn-round" @onclick="ExportToExcel">
                                    <i class="fas fa-file-excel me-2"></i>تصدير لإكسل
                                </button>
                                <div class="dropdown d-inline">
                                    <button class="btn btn-secondary btn-round dropdown-toggle" type="button" data-toggle="dropdown">
                                        <i class="fas fa-bolt me-2"></i>روابط سريعة
                                    </button>
                                    <div class="dropdown-menu">
                                        <a class="dropdown-item" href="/students-managment"><i class="fas fa-users me-2"></i>إدارة الطلاب</a>
                                        <a class="dropdown-item" href="/courses"><i class="fas fa-book me-2"></i>إدارة المواد</a>
                                        <a class="dropdown-item" href="/reports"><i class="fas fa-chart-bar me-2"></i>التقارير</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card-body">
                        <!-- علامات التبويب -->
                        <ul class="nav nav-pills nav-secondary" id="attendanceTabs" role="tablist">
                            <li class="nav-item">
                                <button class="nav-link @(currentStatus == AttendanceStatus.All ? "active" : "")" 
                                        @onclick="() => LoadAttendances(AttendanceStatus.All)">
                                    <i class="fas fa-list me-2"></i> الكل
                                </button>
                            </li>
                            <li class="nav-item">
                                <button class="nav-link @(currentStatus == AttendanceStatus.Present ? "active" : "")" 
                                        @onclick="() => LoadAttendances(AttendanceStatus.Present)">
                                    <i class="fas fa-user-check me-2"></i> الحاضرون
                                </button>
                            </li>
                            <li class="nav-item">
                                <button class="nav-link @(currentStatus == AttendanceStatus.Absent ? "active" : "")" 
                                        @onclick="() => LoadAttendances(AttendanceStatus.Absent)">
                                    <i class="fas fa-user-times me-2"></i> الغائبون
                                </button>
                            </li>
                            <li class="nav-item">
                                <button class="nav-link @(currentStatus == AttendanceStatus.Excused ? "active" : "")" 
                                        @onclick="() => LoadAttendances(AttendanceStatus.Excused)">
                                    <i class="fas fa-user-clock me-2"></i> المعذورون
                                </button>
                            </li>
                        </ul>

                        <!-- شريط البحث والتصفية -->
                        <div class="row mt-3">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <div class="input-icon">
                                        <input type="text" class="form-control" placeholder="ابحث عن طالب..." 
                                               @bind="searchTerm" @oninput="SearchAttendances">
                                        <span class="input-icon-addon">
                                            <i class="fas fa-search"></i>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <select class="form-control" @onchange="FilterByCourse">
                                        <option value="">جميع المواد</option>
                                        @foreach (var course in courses)
                                        {
                                            <option value="@course.Id">@course.Name</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <select class="form-control" @onchange="FilterByDepartment">
                                        <option value="">جميع الأقسام</option>
                                        @foreach (var dept in departments)
                                        {
                                            <option value="@dept.Id">@dept.Name</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <input type="date" class="form-control"  @onchange="LoadAttendanceByDate">
                                </div>
                            </div>
                        </div>

                        <!-- جدول الحضور -->
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>الطالب</th>
                                        <th>المادة</th>
                                        <th>التاريخ</th>
                                        <th>الحالة</th>
                                        <th>سبب الغياب</th>
                                        <th>الإجراءات</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (attendances.Any())
                                    {
                                        @for (int i = 0; i < attendances.Count; i++)
                                        {
                                            var attendance = attendances[i];
                                            <tr>
                                                <td>@((currentPage - 1) * pageSize + i + 1)</td>
                                                <td>
                                                    <div class="d-flex align-items-center">
                                                        <img src="https://ui-avatars.com/api/?name=@Uri.EscapeDataString(attendance.StudentName)&background=2c3e50&color=fff"
                                                             class="rounded-circle mr-3"
                                                             width="40" height="40"
                                                             alt="صورة الطالب" />
                                                        <div>
                                                            <span class="d-block font-weight-bold">@attendance.StudentName</span>
                                                            <small class="text-muted">@attendance.StudentId</small>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td>
                                                    <span class="badge badge-primary">
                                                        @attendance.CourseName
                                                    </span>
                                                </td>
                                                <td>@attendance.AttendanceDate.ToString("yyyy-MM-dd")</td>
                                                <td>
                                                    <span class="badge @GetStatusClass(attendance.Status)">
                                                        @GetStatusText(attendance.Status)
                                                    </span>
                                                </td>
                                                <td>@attendance.AbsenceReason</td>
                                                <td>
                                                    <div class="dropdown">
                                                        <button class="btn btn-sm btn-secondary dropdown-toggle" type="button" data-toggle="dropdown">
                                                            <i class="fas fa-ellipsis-v"></i>
                                                        </button>
                                                        <div class="dropdown-menu">
                                                            <a class="dropdown-item" href="#" @onclick="() => ViewAttendanceDetails(attendance)">
                                                                <i class="fas fa-eye mr-2"></i> عرض التفاصيل
                                                            </a>
                                                            <a class="dropdown-item" href="#" @onclick="() => EditAttendance(attendance)">
                                                                <i class="fas fa-edit mr-2"></i> تعديل
                                                            </a>
                                                            <div class="dropdown-divider"></div>
                                                            <a class="dropdown-item text-danger" href="#" @onclick="() => DeleteAttendance(attendance.Id)">
                                                                <i class="fas fa-trash mr-2"></i> حذف
                                                            </a>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="7">
                                                <div class="text-center py-5">
                                                    <i class="fas fa-clipboard-list fa-3x text-muted mb-3"></i>
                                                    <p class="text-muted">لا توجد سجلات حضور</p>
                                                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addAttendanceModal">
                                                        <i class="fas fa-plus mr-2"></i> إضافة حضور جديد
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- الترقيم -->
                        @if (totalPages > 1)
                        {
                            <div class="d-flex justify-content-between align-items-center mt-3">
                                <div class="text-muted">
                                    عرض @((currentPage - 1) * pageSize + 1)-@Math.Min(currentPage * pageSize, totalRecords) من @totalRecords
                                </div>
                                <ul class="pagination">
                                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                                        <a class="page-link" href="#" @onclick="() => GoToPage(1)">
                                            <i class="fas fa-angle-double-right"></i>
                                        </a>
                                    </li>
                                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                                        <a class="page-link" href="#" @onclick="() => GoToPage(currentPage - 1)">
                                            <i class="fas fa-angle-right"></i>
                                        </a>
                                    </li>

                                    @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                                    {
                                        <li class="page-item @(i == currentPage ? "active" : "")">
                                            <a class="page-link" href="#" @onclick="() => GoToPage(i)">@i</a>
                                        </li>
                                    }

                                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                                        <a class="page-link" href="#" @onclick="() => GoToPage(currentPage + 1)">
                                            <i class="fas fa-angle-left"></i>
                                        </a>
                                    </li>
                                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                                        <a class="page-link" href="#" @onclick="() => GoToPage(totalPages)">
                                            <i class="fas fa-angle-double-left"></i>
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- مودال إضافة حضور -->
<div class="modal fade" id="addAttendanceModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-clipboard-list"></i> إضافة حضور جديد
                </h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>الطالب <span class="text-danger">*</span></label>
                                <select class="form-control" @bind="newAttendance.StudentId" required>
                                    <option value="">اختر الطالب</option>
                                    @foreach (var student in students)
                                    {
                                        <option value="@student.Id">@($"{student.FullName} - {student.StudentId}")</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>المادة <span class="text-danger">*</span></label>
                                <select class="form-control" @bind="newAttendance.CourseId" required>
                                    <option value="">اختر المادة</option>
                                    @foreach (var course in courses)
                                    {
                                        <option value="@course.Id">@course.Name</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>التاريخ <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" @bind="newAttendance.AttendanceDate" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>الحالة <span class="text-danger">*</span></label>
                                <select class="form-control" @bind="newAttendance.Status" required>
                                    <option value="">اختر الحالة</option>
                                    <option value="Present">حاضر</option>
                                    <option value="Absent">غائب</option>
                                    <option value="Excused">معذور</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>سبب الغياب</label>
                                <input type="text" class="form-control" placeholder="أدخل سبب الغياب" @bind="newAttendance.AbsenceReason">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>القسم</label>
                                <select class="form-control" @bind="newAttendance.DepartmentId">
                                    <option value="">اختر القسم</option>
                                    @foreach (var dept in departments)
                                    {
                                        <option value="@dept.Id">@dept.Name</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-group">
                                <label>الملاحظات</label>
                                <textarea class="form-control" rows="3" placeholder="أدخل الملاحظات" @bind="newAttendance.Notes"></textarea>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>إلغاء
                </button>
                <button type="button" class="btn btn-primary" @onclick="CreateAttendance">
                    <i class="fas fa-save me-2"></i>حفظ السجل
                </button>
            </div>
        </div>
    </div>
</div>

<!-- مودال عرض التفاصيل -->
<div class="modal fade" id="viewAttendanceModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">
                    <i class="fas fa-info-circle"></i> تفاصيل سجل الحضور
                </h5>
                <button type="button" class="close btn-close-white" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @if (viewingAttendance != null)
                {
                    <div class="details-section">
                        <div class="detail-item">
                            <span>الطالب:</span>
                            <strong>@viewingAttendance.StudentName</strong>
                        </div>
                        <div class="detail-item">
                            <span>رقم الطالب:</span>
                            <strong>@viewingAttendance.StudentId</strong>
                        </div>
                        <div class="detail-item">
                            <span>المادة:</span>
                            <strong>@viewingAttendance.CourseName</strong>
                        </div>
                        <div class="detail-item">
                            <span>التاريخ:</span>
                            <strong>@viewingAttendance.AttendanceDate.ToString("yyyy-MM-dd")</strong>
                        </div>
                        <div class="detail-item">
                            <span>الحالة:</span>
                            <strong>
                                <span class="badge @GetStatusClass(viewingAttendance.Status)">
                                    @GetStatusText(viewingAttendance.Status)
                                </span>
                            </strong>
                        </div>
                        @if (!string.IsNullOrEmpty(viewingAttendance.AbsenceReason))
                        {
                            <div class="detail-item">
                                <span>سبب الغياب:</span>
                                <strong>@viewingAttendance.AbsenceReason</strong>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(viewingAttendance.Notes))
                        {
                            <div class="detail-item">
                                <span>الملاحظات:</span>
                                <strong>@viewingAttendance.Notes</strong>
                            </div>
                        }
                        <div class="detail-item">
                            <span>تاريخ التسجيل:</span>
                            <strong>@viewingAttendance.RecordedAt.ToString("yyyy-MM-dd HH:mm")</strong>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>إغلاق
                </button>
            </div>
        </div>
    </div>
</div>

<!-- مودال تعديل الحضور -->
<div class="modal fade" id="editAttendanceModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-warning text-white">
                <h5 class="modal-title">
                    <i class="fas fa-edit"></i> تعديل سجل الحضور
                </h5>
                <button type="button" class="close btn-close-white" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @if (editingAttendance != null)
                {
                    <form>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>الطالب</label>
                                    <input type="text" class="form-control" value="@editingAttendance.StudentName" readonly>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>المادة</label>
                                    <input type="text" class="form-control" value="@editingAttendance.CourseName" readonly>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>التاريخ <span class="text-danger">*</span></label>
                                    <input type="date" class="form-control" @bind="editingAttendance.AttendanceDate" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>الحالة <span class="text-danger">*</span></label>
                                    <select class="form-control" @bind="editingAttendance.Status" required>
                                        <option value="Present">حاضر</option>
                                        <option value="Absent">غائب</option>
                                        <option value="Excused">معذور</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>سبب الغياب</label>
                                    <input type="text" class="form-control" placeholder="أدخل سبب الغياب" @bind="editingAttendance.AbsenceReason">
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="form-group">
                                    <label>الملاحظات</label>
                                    <textarea class="form-control" rows="3" placeholder="أدخل الملاحظات" @bind="editingAttendance.Notes"></textarea>
                                </div>
                            </div>
                        </div>
                    </form>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>إلغاء
                </button>
                <button type="button" class="btn btn-warning" @onclick="UpdateAttendance">
                    <i class="fas fa-save me-2"></i>تحديث السجل
                </button>
            </div>
        </div>
    </div>
</div>

<style>
    /* أنماط CSS جديدة */
    .attendance-management-container {
        font-family: 'Tajawal', sans-serif;
        background-color: #f8fafc;
        min-height: 100vh;
    }
    
    .admin-header {
        padding: 1.5rem 0;
        color: white;
        margin-bottom: 2rem;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
    
    .bg-gradient-primary {
        background: linear-gradient(135deg, #2c3e50 0%, #1a2530 100%);
    }
    
    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    .header-title h1 {
        font-size: 1.75rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }
    
    .breadcrumb {
        display: flex;
        padding: 0;
        margin: 0;
        background: transparent;
    }
    
    .breadcrumb-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: rgba(255,255,255,0.8);
    }
    
    .breadcrumb-item.active {
        color: white;
        font-weight: 500;
    }
    
    .breadcrumb-item a {
        color: rgba(255,255,255,0.8);
        text-decoration: none;
        transition: color 0.2s;
    }
    
    .breadcrumb-item a:hover {
        color: white;
    }
    
    .btn-refresh {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-weight: 500;
    }
    
    /* بطاقات الإحصاءات */
    .stats-cards {
        margin-bottom: 2rem;
    }
    
    .stat-card {
        border-radius: 0.5rem;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        overflow: hidden;
        height: 100%;
        transition: transform 0.2s;
    }
    
    .stat-card:hover {
        transform: translateY(-5px);
    }
    
    .card-dark {
        color: white;
    }
    
    .bg-primary-gradient {
        background: linear-gradient(135deg, #1f6feb 0%, #1554c7 100%);
    }
    
    .bg-warning-gradient {
        background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
    }
    
    .bg-success-gradient {
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
    }
    
    .bg-danger-gradient {
        background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
    }
    
    .bg-info-gradient {
        background: linear-gradient(135deg, #0ea5e9 0%, #0284c7 100%);
    }
    
    .icon-shape {
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
    }
    
    .bg-primary-light {
        background: rgba(255, 255, 255, 0.2);
    }
    
    .bg-warning-light {
        background: rgba(255, 255, 255, 0.2);
    }
    
    .bg-success-light {
        background: rgba(255, 255, 255, 0.2);
    }
    
    .bg-danger-light {
        background: rgba(255, 255, 255, 0.2);
    }
    
    .bg-info-light {
        background: rgba(255, 255, 255, 0.2);
    }
    
    /* تبويبات التنقل */
    .nav-pills .nav-link {
        border: none;
        color: #6c757d;
        font-weight: 500;
        padding: 0.75rem 1.25rem;
        border-radius: 0.5rem;
        transition: all 0.2s;
    }
    
    .nav-pills .nav-link:hover {
        color: #2c3e50;
        background-color: #f8f9fa;
    }
    
    .nav-pills .nav-link.active {
        color: white;
        background-color: #2c3e50;
    }
    
    /* البحث والفلاتر */
    .input-icon {
        position: relative;
    }
    
    .input-icon .form-control {
        padding-right: 2.5rem;
    }
    
    .input-icon-addon {
        position: absolute;
        right: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: #6c757d;
    }
    
    /* جدول الحضور */
    .table th {
        background: #f8f9fa;
        color: #2c3e50;
        font-weight: 600;
        padding: 1rem;
        text-align: right;
        border-bottom: 1px solid #e9ecef;
    }
    
    .table td {
        padding: 1rem;
        border-bottom: 1px solid #e9ecef;
        vertical-align: middle;
    }
    
    .badge {
        padding: 0.5rem 0.75rem;
        border-radius: 1rem;
        font-size: 0.85rem;
        font-weight: 500;
    }
    
    .status-present {
        background: rgba(16, 185, 129, 0.1);
        color: #10b981;
    }
    
    .status-absent {
        background: rgba(239, 68, 68, 0.1);
        color: #ef4444;
    }
    
    .status-excused {
        background: rgba(59, 130, 246, 0.1);
        color: #3b82f6;
    }
    
    .btn-actions {
        background: none;
        border: none;
        color: #6c757d;
        padding: 0.5rem;
        border-radius: 50%;
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s;
    }
    
    .btn-actions:hover {
        background: #f8f9fa;
        color: #2c3e50;
    }
    
    .dropdown-menu {
        border: none;
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        border-radius: 0.5rem;
        padding: 0.5rem;
    }
    
    .dropdown-item {
        padding: 0.5rem 1rem;
        border-radius: 0.25rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.2s;
    }
    
    .dropdown-item:hover {
        background: #f8f9fa;
    }
    
    .dropdown-item.text-danger:hover {
        background: rgba(239, 68, 68, 0.1);
    }
    
    /* الترقيم */
    .pagination {
        display: flex;
        gap: 0.5rem;
        margin-bottom: 0;
    }
    
    .page-item .page-link {
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 1px solid #e9ecef;
        color: #6c757d;
        border-radius: 0.25rem;
        text-decoration: none;
        transition: all 0.2s;
    }
    
    .page-item.active .page-link {
        background: #2c3e50;
        border-color: #2c3e50;
        color: white;
    }
    
    .page-item:not(.active) .page-link:hover {
        background: #f8f9fa;
        color: #2c3e50;
    }
    
    .page-item.disabled .page-link {
        opacity: 0.5;
        pointer-events: none;
    }
    
    /* المودالات */
    .modal-content {
        border: none;
        border-radius: 0.5rem;
        box-shadow: 0 5px 20px rgba(0,0,0,0.1);
    }
    
    .modal-header {
        border-bottom: 1px solid #e9ecef;
        padding: 1.25rem;
    }
    
    .modal-header.bg-primary {
        color: white;
    }
    
    .modal-header.bg-warning {
        color: white;
    }
    
    .modal-title {
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .modal-body {
        padding: 1.5rem;
    }
    
    .details-section {
        margin-bottom: 1rem;
    }
    
    .details-section h6 {
        color: #2c3e50;
        font-weight: 600;
        margin-bottom: 1rem;
        padding-bottom: 0.5rem;
        border-bottom: 1px solid #e9ecef;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .detail-item {
        display: flex;
        justify-content: space-between;
        margin-bottom: 0.75rem;
    }
    
    .detail-item span:first-child {
        color: #6c757d;
    }
    
    .detail-item strong {
        color: #2c3e50;
        font-weight: 500;
        text-align: left;
    }
    
    .modal-footer {
        border-top: 1px solid #e9ecef;
        padding: 1rem 1.5rem;
    }
    
    /* تصميم متجاوب */
    @@media (max-width: 992px) {
        .header-content {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
        }
        
        .input-icon {
            width: 100%;
        }
        
        .control-bar {
            flex-direction: column;
            gap: 1rem;
        }
    }
    
    @@media (max-width: 768px) {
        .table-responsive {
            overflow-x: auto;
        }
        
        .table {
            min-width: 800px;
        }
        
        .stat-card .card-body {
            flex-direction: column;
            gap: 1rem;
        }
        
        .icon-shape {
            display: none;
        }
    }
    
    @@media (max-width: 576px) {
        .modal-dialog {
            margin: 1rem;
        }
        
        .pagination-container {
            flex-direction: column;
            gap: 1rem;
        }
    }
</style>

@code {
    private List<StudentAttendanceDto> attendances = new();
    private List<StudentDto> students = new();
    private List<CourseDto> courses = new();
    private List<DepartmentDto> departments = new();
    private StudentAttendanceDto newAttendance = new();
    private StudentAttendanceDto viewingAttendance;
    private StudentAttendanceDto editingAttendance;
    private StudentsAttendanceSummaryDto attendanceSummary = new();
    
    private string searchTerm = "";
    private int? selectedCourseId = null;
    private int? selectedDepartmentId = null;
    private DateTime selectedDate = DateTime.Now;
    
    // ترقيم الصفحات
    private int currentPage = 1;
    private int totalPages = 1;
    private int pageSize = 10;
    private int totalRecords = 0;
    
    // الفلاتر
    private AttendanceStatus currentStatus = AttendanceStatus.All;
    
    protected override async Task OnInitializedAsync()
    {
        await LoadStudents();
        await LoadCourses();
        await LoadDepartments();
        await LoadAttendanceSummary();
        await LoadAttendances(AttendanceStatus.All);
    }
    
    private async Task LoadStudents()
    {
        try
        {
            students = await StudentService.GetAllStudentsAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading students: {ex.Message}");
        }
    }
    
    private async Task LoadCourses()
    {
        try
        {
            courses = await CourseService.GetAllCoursesAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading courses: {ex.Message}");
        }
    }
    
    private async Task LoadDepartments()
    {
        try
        {
            departments = await DepartmentService.GetAllDepartmentsAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading departments: {ex.Message}");
        }
    }
    
    private async Task LoadAttendanceSummary()
    {
        try
        {
            attendanceSummary = await StudentAttendanceService.GetAttendanceSummaryAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading attendance summary: {ex.Message}");
        }
    }
    
    private async Task LoadAttendances(AttendanceStatus status)
    {
        try
        {
            currentStatus = status;
            var result = await StudentAttendanceService.GetAttendancesPagedAsync(
                currentPage,
                pageSize,
                searchTerm,
                selectedCourseId,
                selectedDepartmentId,
                selectedDate,
                status);
            
            attendances = result.Data.ToList();
            totalPages = result.TotalPages;
            totalRecords = result.TotalRecords;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading attendances: {ex.Message}");
        }
    }
    
    private async Task RefreshAttendance()
    {
        await LoadAttendanceSummary();
        await LoadAttendances(currentStatus);
        StateHasChanged();
    }
    
    private async Task CreateAttendance()
    {
        try
        {
            newAttendance.RecordedAt = DateTime.Now;
            var createdAttendance = await StudentAttendanceService.CreateAttendanceAsync(newAttendance);
            
            // إعادة تعيين النموذج
            newAttendance = new StudentAttendanceDto();
            
            // تحديث القائمة والإحصائيات
            await LoadAttendanceSummary();
            await LoadAttendances(currentStatus);
            
            // إغلاق المودال
            await JS.InvokeVoidAsync("bootstrap.Modal.hide", "#addAttendanceModal");
            
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error creating attendance: {ex.Message}");
        }
    }
    
    private async Task UpdateAttendance()
    {
        try
        {
            editingAttendance.ModifiedAt = DateTime.Now;
            await StudentAttendanceService.UpdateAttendanceAsync(editingAttendance.Id, editingAttendance);
            
            // تحديث القائمة والإحصائيات
            await LoadAttendanceSummary();
            await LoadAttendances(currentStatus);
            
            // إغلاق المودال
            await JS.InvokeVoidAsync("bootstrap.Modal.hide", "#editAttendanceModal");
            
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error updating attendance: {ex.Message}");
        }
    }
    
    private async Task DeleteAttendance(int attendanceId)
    {
        try
        {
            await StudentAttendanceService.DeleteAttendanceAsync(attendanceId);
            
            // تحديث القائمة والإحصائيات
            await LoadAttendanceSummary();
            await LoadAttendances(currentStatus);
            
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting attendance: {ex.Message}");
        }
    }
    
    private async Task SearchAttendances(ChangeEventArgs e)
    {
        searchTerm = e.Value?.ToString() ?? "";
        currentPage = 1;
        await LoadAttendances(currentStatus);
    }
    
    private async Task FilterByCourse(ChangeEventArgs e)
    {
        var value = e.Value?.ToString();
        selectedCourseId = string.IsNullOrEmpty(value) ? null : (int?)int.Parse(value);
        currentPage = 1;
        await LoadAttendances(currentStatus);
    }
    
    private async Task FilterByDepartment(ChangeEventArgs e)
    {
        var value = e.Value?.ToString();
        selectedDepartmentId = string.IsNullOrEmpty(value) ? null : (int?)int.Parse(value);
        currentPage = 1;
        await LoadAttendances(currentStatus);
    }
    
    private async Task LoadAttendanceByDate(ChangeEventArgs e)
    {
        await LoadAttendances(currentStatus);
    }
    
    private async Task GoToPage(int page)
    {
        if (page >= 1 && page <= totalPages)
        {
            currentPage = page;
            await LoadAttendances(currentStatus);
        }
    }
    
    private async Task ExportToExcel()
    {
        try
        {
            // تنفيذ تصدير البيانات إلى Excel
            // var excelData = await StudentAttendanceService.ExportToExcelAsync(attendances);
            // يمكنك استخدام مكتبات مثل EPPlus أو ClosedXML
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error exporting to Excel: {ex.Message}");
        }
    }
    
    private void ViewAttendanceDetails(StudentAttendanceDto attendance)
    {
        viewingAttendance = attendance;
        // فتح المودال
        JS.InvokeVoidAsync("bootstrap.Modal.getOrCreateInstance", "#viewAttendanceModal");
    }
    
    private void EditAttendance(StudentAttendanceDto attendance)
    {
        editingAttendance = new StudentAttendanceDto
        {
            Id = attendance.Id,
            StudentId = attendance.StudentId,
            CourseId = attendance.CourseId,
            DepartmentId = attendance.DepartmentId,
            AttendanceDate = attendance.AttendanceDate,
            Status = attendance.Status,
            AbsenceReason = attendance.AbsenceReason,
            Notes = attendance.Notes,
            RecordedAt = attendance.RecordedAt,
            ModifiedAt = attendance.ModifiedAt,
            StudentName = attendance.StudentName,
            CourseName = attendance.CourseName
        };
        // فتح المودال
        JS.InvokeVoidAsync("bootstrap.Modal.getOrCreateInstance", "#editAttendanceModal");
    }
    
    // Helper functions
    private string GetStatusClass(AttendanceStatus status)
    {
        return status switch
        {
            AttendanceStatus.Present => "status-present",
            AttendanceStatus.Absent => "status-absent",
            AttendanceStatus.Excused => "status-excused",
            _ => "status-present"
        };
    }
    
    private string GetStatusText(AttendanceStatus status)
    {
        return status switch
        {
            AttendanceStatus.Present => "status-present",
            AttendanceStatus.Absent => "status-absent",
            AttendanceStatus.Excused => "status-excused",
            _ => "status-present"
        };
    }
    
    
}
