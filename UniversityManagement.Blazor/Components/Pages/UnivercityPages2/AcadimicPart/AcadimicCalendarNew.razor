@page "/academiccalendar"
@inject IAcademicCalendarServices CalendarService
@inject IDepartmentServices DepartmentService
@rendermode InteractiveServer

<PageTitle>التقويم الأكاديمي - الجامعة الذكية</PageTitle>

<style>
    /* أنماط CSS من ملف النص */
    *, *:before, *:after {
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        padding: 0;
        margin: 0;
    }

    html, body {
        padding: 0;
        margin: 0;
        font-family: "Sora", sans-serif;
        font-size: 15px;
        font-weight: 400;
        color: rgba(18, 24, 32, 0.7);
        line-height: 170%;
        background-color: #f9f9f9;
    }

    h1, h2, h3, h4, h5, h6 {
        font-family: "Sora", sans-serif;
        color: rgb(18, 24, 32);
        font-weight: 600;
        line-height: 140%;
    }

    h1 {
        font-size: 42px;
    }

    h2 {
        font-size: 36px;
    }

    h3 {
        font-size: 28px;
    }

    h4 {
        font-size: 22px;
    }

    h5 {
        font-size: 18px;
    }

    h6 {
        font-size: 16px;
    }

    a {
        color: inherit;
        text-decoration: none;
    }

    .mil-accent {
        color: rgb(245, 124, 0);
    }

    .mil-bold {
        font-weight: 500;
    }

    .container {
        width: 100%;
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 15px;
    }

    .mil-section {
        padding: 80px 0;
    }

    .mil-section-title {
        text-align: center;
        margin-bottom: 60px;
    }

        .mil-section-title h2 {
            font-size: 36px;
            margin-bottom: 15px;
        }

        .mil-section-title p {
            color: rgba(18, 24, 32, 0.5);
            max-width: 600px;
            margin: 0 auto;
        }

    .mil-flex {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
    }

    .mil-flex-center {
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        justify-content: center;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
    }

    .mil-mb-30 {
        margin-bottom: 30px;
    }

    .mil-mb-60 {
        margin-bottom: 60px;
    }

    .mil-mb-90 {
        margin-bottom: 90px;
    }

    .mil-mt-30 {
        margin-top: 30px;
    }

    .mil-mt-60 {
        margin-top: 60px;
    }

    .mil-mt-90 {
        margin-top: 90px;
    }

    .mil-center {
        text-align: center;
    }

    .mil-button {
        cursor: pointer;
        height: 60px;
        padding: 0 40px;
        font-family: "Sora", sans-serif;
        font-size: 16px;
        color: rgb(18, 24, 32);
        font-weight: 500;
        white-space: nowrap;
        display: -webkit-inline-box;
        display: -ms-inline-flexbox;
        display: inline-flex;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        justify-content: center;
        text-align: center;
        border: none;
        border-radius: 40px;
        background-color: rgb(245, 124, 0);
        color: white;
        -webkit-transition: 0.4s cubic-bezier(0, 0, 0.3642, 1);
        transition: 0.4s cubic-bezier(0, 0, 0.3642, 1);
    }

        .mil-button:hover {
            -webkit-transform: translateY(-5px);
            transform: translateY(-5px);
            -webkit-box-shadow: 0px 10px 20px 0px rgba(245, 124, 0, 0.3);
            box-shadow: 0px 10px 20px 0px rgba(245, 124, 0, 0.3);
        }

        .mil-button.mil-button-sm {
            height: 50px;
            padding: 0 30px;
            font-size: 14px;
        }

    .mil-top-panel {
        padding: 0 10px;
        height: 80px;
        background-color: rgb(255, 255, 255);
        width: 100%;
        z-index: 999;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-pack: justify;
        -ms-flex-pack: justify;
        justify-content: space-between;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
        -webkit-box-shadow: 0px 0px 40px 0px rgba(18, 24, 32, 0.1);
        box-shadow: 0px 0px 40px 0px rgba(18, 24, 32, 0.1);
        position: fixed;
        top: 0;
        left: 0;
    }

    .mil-logo img {
        height: 50px;
    }

    .mil-navigation nav ul {
        list-style: none;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
    }

        .mil-navigation nav ul li {
            margin: 0 15px;
            position: relative;
        }

            .mil-navigation nav ul li a {
                font-family: "Sora", sans-serif;
                text-decoration: none;
                color: rgb(18, 24, 32);
                font-weight: 400;
                white-space: nowrap;
                -webkit-transition: 0.2s cubic-bezier(0, 0, 0.3642, 1);
                transition: 0.2s cubic-bezier(0, 0, 0.3642, 1);
            }

                .mil-navigation nav ul li a:hover {
                    color: rgb(245, 124, 0);
                }

    .mil-menu-btn {
        display: none;
        cursor: pointer;
        width: 30px;
        height: 30px;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        justify-content: center;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
    }

        .mil-menu-btn span, .mil-menu-btn span:after, .mil-menu-btn span:before {
            content: "";
            display: block;
            width: 24px;
            height: 2px;
            background: rgb(18, 24, 32);
            -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
            -webkit-transition: inherit;
            transition: inherit;
        }

        .mil-menu-btn span {
            position: relative;
        }

            .mil-menu-btn span:before {
                top: -8px;
            }

            .mil-menu-btn span:after {
                top: 8px;
            }

        .mil-menu-btn.mil-active span {
            background: transparent;
        }

            .mil-menu-btn.mil-active span:before {
                top: 0;
                -webkit-transform: rotate(45deg);
                transform: rotate(45deg);
            }

            .mil-menu-btn.mil-active span:after {
                top: 0;
                -webkit-transform: rotate(-45deg);
                transform: rotate(-45deg);
            }

    /* أنماط إضافية للوحة الطلاب */
    :root {
        --primary-color: #f57c00;
        --dark-color: #121820;
        --light-color: #ffffff;
        --gray-color: #f5f5f5;
        --text-color: #333333;
    }

    body {
        font-family: 'Sora', sans-serif;
        color: var(--text-color);
        background-color: #f9f9f9;
        padding-top: 80px;
    }

    .students-dashboard {
        display: flex;
        min-height: calc(100vh - 80px);
    }

    .sidebar {
        width: 280px;
        background: var(--dark-color);
        color: white;
        padding: 20px 0;
        transition: all 0.3s ease;
    }

    .sidebar-header {
        padding: 20px;
        text-align: center;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

        .sidebar-header h3 {
            color: white;
            margin: 10px 0;
        }

    .sidebar-menu {
        padding: 20px 0;
    }

        .sidebar-menu ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .sidebar-menu li {
            margin-bottom: 5px;
        }

        .sidebar-menu a {
            display: flex;
            align-items: center;
            padding: 12px 20px;
            color: rgba(255, 255, 255, 0.7);
            text-decoration: none;
            transition: all 0.3s;
        }

            .sidebar-menu a:hover, .sidebar-menu a.active {
                background: rgba(255, 255, 255, 0.1);
                color: white;
                border-right: 3px solid var(--primary-color);
            }

        .sidebar-menu i {
            margin-left: 10px;
            font-size: 18px;
        }

    .main-content {
        flex: 1;
        padding: 20px;
        background: var(--gray-color);
    }

    .top-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 20px;
        background: white;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        margin-bottom: 20px;
    }

    .calendar-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

        .calendar-header h2 {
            margin: 0;
        }

    .calendar-nav {
        display: flex;
        gap: 10px;
    }

        .calendar-nav button {
            background: white;
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 8px 15px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 5px;
            font-family: 'Sora', sans-serif;
        }

            .calendar-nav button:hover {
                background: #f5f5f5;
            }

    .stats-cards {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        background: white;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        display: flex;
        align-items: center;
        transition: transform 0.3s, box-shadow 0.3s;
    }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

    .stat-icon {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-left: 15px;
        font-size: 24px;
    }

    .stat-primary {
        background: rgba(245, 124, 0, 0.1);
        color: var(--primary-color);
    }

    .stat-warning {
        background: rgba(255, 152, 0, 0.1);
        color: #ff9800;
    }

    .stat-success {
        background: rgba(76, 175, 80, 0.1);
        color: #4caf50;
    }

    .stat-info {
        background: rgba(33, 150, 243, 0.1);
        color: #2196f3;
    }

    .stat-content h3 {
        margin: 0 0 5px;
        font-size: 24px;
        color: var(--dark-color);
    }

    .stat-content p {
        margin: 0;
        color: #777;
        font-size: 14px;
    }

    .controls-row {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
        background: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .form-group {
        margin-bottom: 15px;
    }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
            color: var(--dark-color);
        }

    .form-control {
        width: 100%;
        padding: 12px;
        border: 1px solid #ddd;
        border-radius: 8px;
        font-family: 'Sora', sans-serif;
        font-size: 14px;
        transition: border-color 0.3s;
        box-sizing: border-box;
    }

        .form-control:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(245, 124, 0, 0.1);
        }

    /* أنماط التقويم */
    .calendar-view {
        background: white;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        overflow: hidden;
    }

    .calendar-nav-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 20px;
        background: linear-gradient(135deg, var(--primary-color), #ff9800);
        color: white;
    }

    .calendar-nav-btn {
        background: rgba(255, 255, 255, 0.2);
        border: none;
        color: white;
        padding: 8px 15px;
        border-radius: 5px;
        cursor: pointer;
        transition: all 0.3s;
        display: flex;
        align-items: center;
        gap: 5px;
    }

        .calendar-nav-btn:hover {
            background: rgba(255, 255, 255, 0.3);
        }

    .calendar-container {
        border: 1px solid #e0e0e0;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .calendar-header-grid {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        background-color: #f8f9fa;
        font-weight: bold;
        text-align: center;
        border-bottom: 1px solid #e0e0e0;
    }

    .calendar-weekday {
        padding: 15px;
        color: #2c3e50;
        font-weight: 600;
    }

    .calendar-body {
        display: flex;
        flex-direction: column;
    }

    .calendar-week {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        min-height: 120px;
    }

    .calendar-day {
        border: 1px solid #e0e0e0;
        padding: 8px;
        position: relative;
        min-height: 120px;
        transition: background-color 0.2s;
        background: white;
    }

        .calendar-day:hover {
            background-color: #f8f9fa;
        }

        .calendar-day.today {
            background-color: #fff3e0;
            border: 2px solid var(--primary-color);
        }

        .calendar-day.empty {
            background-color: #f8f9fa;
        }

        .calendar-day.other-month {
            background-color: #f5f5f5;
            color: #999;
        }

    .day-number {
        font-weight: bold;
        text-align: left;
        margin-bottom: 5px;
        font-size: 16px;
    }

    .day-events {
        overflow: hidden;
    }

    .calendar-event {
        font-size: 0.8rem;
        padding: 4px 8px;
        margin-bottom: 4px;
        border-radius: 4px;
        cursor: pointer;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        transition: all 0.2s;
    }

        .calendar-event:hover {
            transform: translateY(-2px);
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

    .more-events {
        font-size: 0.75rem;
        color: #6c757d;
        cursor: pointer;
        padding: 2px;
        text-align: center;
        font-weight: 500;
    }

    /* أنماط الأحداث حسب النوع */
    .bg-primary-light {
        background-color: #e3f2fd;
        color: #0d47a1;
        border-left: 3px solid #2196f3;
    }

    .bg-danger-light {
        background-color: #ffebee;
        color: #b71c1c;
        border-left: 3px solid #f44336;
    }

    .bg-warning-light {
        background-color: #fff8e1;
        color: #ff8f00;
        border-left: 3px solid #ffc107;
    }

    .bg-success-light {
        background-color: #e8f5e9;
        color: #1b5e20;
        border-left: 3px solid #4caf50;
    }

    /* تصميم متجاوب */
    @@media (max-width: 992px) {
        .sidebar {
            width: 70px;
        }

        .sidebar-header h3, .sidebar-menu span {
            display: none;
        }

        .sidebar-menu a {
            justify-content: center;
            padding: 15px;
        }

        .sidebar-menu i {
            margin-left: 0;
        }
    }

    @@media (max-width: 768px) {
        .students-dashboard {
            flex-direction: column;
        }

        .sidebar {
            width: 100%;
            height: auto;
        }

        .sidebar-menu {
            display: flex;
            overflow-x: auto;
        }

            .sidebar-menu ul {
                display: flex;
            }

            .sidebar-menu li {
                margin-bottom: 0;
                margin-left: 5px;
            }

            .sidebar-menu a {
                border-radius: 5px;
                border-right: none !important;
                border-bottom: 3px solid transparent;
            }

                .sidebar-menu a:hover, .sidebar-menu a.active {
                    border-right: none;
                    border-bottom: 3px solid var(--primary-color);
                }

        .top-bar {
            flex-direction: column;
            gap: 15px;
        }

        .calendar-header {
            flex-direction: column;
            gap: 15px;
            text-align: center;
        }

        .calendar-nav {
            justify-content: center;
        }

        .controls-row {
            grid-template-columns: 1fr;
        }

        .calendar-week {
            min-height: 80px;
        }

        .calendar-day {
            min-height: 80px;
            padding: 5px;
        }

        .calendar-weekday {
            padding: 10px;
            font-size: 0.85rem;
        }

        .day-number {
            font-size: 14px;
        }

        .calendar-event {
            font-size: 0.7rem;
            padding: 2px 4px;
        }
    }

    /* أنماط المودال */
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
        backdrop-filter: blur(5px);
    }

    .modal-content {
        background: white;
        border-radius: 15px;
        width: 90%;
        max-width: 800px;
        max-height: 90vh;
        overflow-y: auto;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        animation: modalSlideIn 0.3s ease-out;
    }

    @@keyframes modalSlideIn {
        from {
            opacity: 0;
            transform: translateY(-50px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .modal-header {
        padding: 20px;
        border-bottom: 1px solid #eee;
        display: flex;
        justify-content: space-between;
        align-items: center;
        background: linear-gradient(135deg, var(--primary-color), #ff9800);
        color: white;
        border-radius: 15px 15px 0 0;
    }

        .modal-header h3 {
            margin: 0;
            font-size: 22px;
        }

    .modal-close {
        background: none;
        border: none;
        color: white;
        font-size: 24px;
        cursor: pointer;
        width: 30px;
        height: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        transition: background 0.3s;
    }

        .modal-close:hover {
            background: rgba(255, 255, 255, 0.2);
        }

    .modal-body {
        padding: 20px;
    }

    .modal-footer {
        padding: 20px;
        border-top: 1px solid #eee;
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        background: #f9f9f9;
        border-radius: 0 0 15px 15px;
    }

    .btn-primary {
        background: var(--primary-color);
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 8px;
        cursor: pointer;
        font-family: 'Sora', sans-serif;
        font-weight: 500;
        transition: all 0.3s;
        display: flex;
        align-items: center;
        gap: 8px;
    }

        .btn-primary:hover {
            background: #e65100;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(245, 124, 0, 0.3);
        }

    .btn-secondary {
        background: #6c757d;
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 8px;
        cursor: pointer;
        font-family: 'Sora', sans-serif;
        font-weight: 500;
        transition: all 0.3s;
        display: flex;
        align-items: center;
        gap: 8px;
    }

        .btn-secondary:hover {
            background: #545b62;
            transform: translateY(-2px);
        }

    .btn-danger {
        background: #f44336;
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 8px;
        cursor: pointer;
        font-family: 'Sora', sans-serif;
        font-weight: 500;
        transition: all 0.3s;
        display: flex;
        align-items: center;
        gap: 8px;
    }

        .btn-danger:hover {
            background: #da190b;
            transform: translateY(-2px);
        }

    .form-row {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
        margin-bottom: 20px;
    }

    .required {
        color: #f44336;
    }

    .event-detail-item {
        display: flex;
        margin-bottom: 15px;
        padding-bottom: 15px;
        border-bottom: 1px solid #eee;
    }

        .event-detail-item:last-child {
            border-bottom: none;
            margin-bottom: 0;
            padding-bottom: 0;
        }

    .event-detail-label {
        font-weight: 500;
        color: var(--dark-color);
        min-width: 120px;
    }

    .event-detail-value {
        flex: 1;
        color: #555;
    }

    .event-type-badge {
        padding: 5px 10px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 500;
    }
</style>

<!-- Top Panel -->
<div class="mil-top-panel">
    <div class="mil-logo">
        <a href="#home"><img src="https://via.placeholder.com/150x50?text=الجامعة" alt="Logo"></a>
    </div>
    <div class="mil-navigation">
        <nav>
            <ul>
                <li><a href="/"><i class="fas fa-home"></i> الرئيسية</a></li>
                <li><a href="/students-managment"><i class="fas fa-users"></i> الطلاب</a></li>
                <li><a href="/admin/applications"><i class="fas fa-file-signature"></i> طلبات التقديم</a></li>
                <li><a href="/academic-calendar"><i class="fas fa-calendar-alt"></i> التقويم الأكاديمي</a></li>
            </ul>
        </nav>
    </div>
    <div class="mil-menu-btn">
        <span></span>
    </div>
</div>

<div class="students-dashboard">
    <!-- الشريط الجانبي -->
    <NavMenu2 />

    <!-- المحتوى الرئيسي -->
    <div class="main-content">
        <div class="top-bar">
            <div class="user-profile">
                <div class="user-info">
                    <h4>د. أحمد محمد</h4>
                    <p>مدير النظام - قسم التقويم الأكاديمي</p>
                </div>
                <img src="https://via.placeholder.com/40" alt="User" style="width: 40px; height: 40px; border-radius: 50%; margin-left: 10px;">
            </div>
        </div>

        <div class="calendar-header">
            <h2><i class="fas fa-calendar-alt"></i> التقويم الأكاديمي</h2>
            <div class="calendar-nav">
                <button class="mil-button mil-button-sm" @onclick="ToggleEditMode">
                    <i class="fas @(isInEditMode ? "fa-check" : "fa-plus")"></i>
                    @(isInEditMode ? "إنهاء التحرير" : "إضافة حدث")
                </button>
                <button class="btn-outline" @onclick="LoadCalendarData">
                    <i class="fas fa-sync"></i> تحديث
                </button>
            </div>
        </div>

        <!-- بطاقات الإحصائيات -->
        <div class="stats-cards">
            <div class="stat-card">
                <div class="stat-icon stat-primary">
                    <i class="fas fa-calendar-day"></i>
                </div>
                <div class="stat-content">
                    <h3>@totalEvents</h3>
                    <p>إجمالي الأحداث</p>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-icon stat-warning">
                    <i class="fas fa-graduation-cap"></i>
                </div>
                <div class="stat-content">
                    <h3>@academicEvents</h3>
                    <p>الأحداث الأكاديمية</p>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-icon stat-success">
                    <i class="fas fa-book"></i>
                </div>
                <div class="stat-content">
                    <h3>@examEvents</h3>
                    <p>امتحانات</p>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-icon stat-info">
                    <i class="fas fa-calendar-check"></i>
                </div>
                <div class="stat-content">
                    <h3>@currentMonthEvents</h3>
                    <p>أحداث هذا الشهر</p>
                </div>
            </div>
        </div>

        <!-- عناصر التحكم -->
        <div class="controls-row">
            <div class="form-group">
                <label for="academicYear">السنة الأكاديمية</label>
                <select id="academicYear" class="form-control" @bind="selectedAcademicYear">
                    @foreach (var year in academicYears)
                    {
                        <option value="@year">@year - @(year + 1)</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="semester">الفصل الدراسي</label>
                <select id="semester" class="form-control" @bind="selectedSemester">
                    <option value="0">كل الفصول</option>
                    <option value="1">الفصل الأول</option>
                    <option value="2">الفصل الثاني</option>
                    <option value="3">الفصل الصيفي</option>
                </select>
            </div>
            <div class="form-group">
                <label for="department">القسم</label>
                <select id="department" class="form-control" @bind="selectedDepartmentId">
                    <option value="">جميع الأقسام</option>
                    @if (departments != null)
                    {
                        @foreach (var dept in departments)
                        {
                            <option value="@dept.Id">@dept.Name</option>
                        }
                    }
                </select>
            </div>
        </div>

        <!-- عرض التقويم -->
        <div class="calendar-view" dir="rtl">
            <div class="calendar-nav-header">
                <button class="calendar-nav-btn" @onclick="PreviousMonth">
                    <i class="fas fa-chevron-right"></i> الشهر السابق
                </button>
                <h3>@currentMonthName @currentYear</h3>
                <button class="calendar-nav-btn" @onclick="NextMonth">
                    الشهر التالي <i class="fas fa-chevron-left"></i>
                </button>
            </div>

            <div class="calendar-container">
                <div class="calendar-header-grid">
                    @foreach (var day in arabicWeekDays)
                    {
                        <div class="calendar-weekday">@day</div>
                    }
                </div>

                <div class="calendar-body">
                    @{
                        var firstDay = new DateTime(currentYear, currentMonth, 1);
                        var daysToSkip = (int)firstDay.DayOfWeek;
                        var totalCells = daysToSkip + DateTime.DaysInMonth(currentYear, currentMonth);
                        var totalWeeks = (int)Math.Ceiling(totalCells / 7.0);

                        for (int week = 0; week < totalWeeks; week++)
                        {
                            <div class="calendar-week">
                                @for (int dayOfWeek = 0; dayOfWeek < 7; dayOfWeek++)
                                {
                                    var dayIndex = week * 7 + dayOfWeek;
                                    if (dayIndex >= daysToSkip && dayIndex < daysToSkip + DateTime.DaysInMonth(currentYear, currentMonth))
                                    {
                                        var day = dayIndex - daysToSkip + 1;
                                        var currentDate = new DateTime(currentYear, currentMonth, day);
                                        var dayEvents = GetEventsForDay(currentDate);

                                        <div class="calendar-day @(IsToday(currentDate) ? "today" : "")"
                                             @onclick="() => HandleDayClick(currentDate)">
                                            <div class="day-number">@day</div>
                                            <div class="day-events">
                                                @foreach (var evt in dayEvents.Take(3))
                                                {
                                                    <div class="calendar-event @GetEventClass(evt)"
                                                         @onclick="() => ShowEventDetails(evt)">
                                                        @evt.Title
                                                    </div>
                                                }
                                                @if (dayEvents.Count > 3)
                                                {
                                                    <div class="more-events">+@(dayEvents.Count - 3) أكثر</div>
                                                }
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="calendar-day empty other-month"></div>
                                    }
                                }
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- نافذة تفاصيل الحدث -->
@if (selectedEvent != null)
{
    <div class="modal-overlay" @onclick="CloseEventDetails">
        <div class="modal-content" @onclick:stopPropagation="true">
            <div class="modal-header @(GetEventClass(selectedEvent))">
                <h3><i class="fas fa-calendar-alt"></i> @selectedEvent.Title</h3>
                <button class="modal-close" @onclick="CloseEventDetails">&times;</button>
            </div>
            <div class="modal-body">
                <div class="event-detail-item">
                    <div class="event-detail-label"><i class="fas fa-calendar-alt"></i> التاريخ:</div>
                    <div class="event-detail-value">@selectedEvent.StartDate.ToString("yyyy/MM/dd") - @selectedEvent.EndDate.ToString("yyyy/MM/dd")</div>
                </div>
                <div class="event-detail-item">
                    <div class="event-detail-label"><i class="fas fa-clock"></i> الوقت:</div>
                    <div class="event-detail-value">@selectedEvent.StartDate.ToString("hh:mm tt") - @selectedEvent.EndDate.ToString("hh:mm tt")</div>
                </div>
                <div class="event-detail-item">
                    <div class="event-detail-label"><i class="fas fa-info-circle"></i> الوصف:</div>
                    <div class="event-detail-value">@selectedEvent.Description</div>
                </div>
                <div class="event-detail-item">
                    <div class="event-detail-label"><i class="fas fa-tag"></i> النوع:</div>
                    <div class="event-detail-value">
                        <span class="event-type-badge @GetEventClass(selectedEvent)">@GetEventTypeText(selectedEvent.EventType)</span>
                    </div>
                </div>
                <div class="event-detail-item">
                    <div class="event-detail-label"><i class="fas fa-building"></i> القسم:</div>
                    <div class="event-detail-value">@(selectedEvent.Department?.Name ?? "جميع الأقسام")</div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn-secondary" @onclick="CloseEventDetails">
                    <i class="fas fa-times"></i> إغلاق
                </button>
                <button class="btn-danger" @onclick="DeleteEvent">
                    <i class="fas fa-trash"></i> حذف
                </button>
            </div>
        </div>
    </div>
}

<!-- نافذة إضافة حدث جديد -->
@if (showAddEventModal)
{
    <div class="modal-overlay" @onclick="CloseAddEventModal">
        <div class="modal-content" @onclick:stopPropagation="true">
            <div class="modal-header" style="background: linear-gradient(135deg, var(--primary-color), #ff9800); color: white;">
                <h3><i class="fas fa-plus-circle"></i> إضافة حدث جديد</h3>
                <button class="modal-close" @onclick="CloseAddEventModal">&times;</button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-row">
                        <div class="form-group">
                            <label class="required">عنوان الحدث <span class="required">*</span></label>
                            <input @bind="newEvent.Title" class="form-control" placeholder="أدخل عنوان الحدث" required />
                        </div>
                        <div class="form-group">
                            <label>وصف الحدث</label>
                            <textarea @bind="newEvent.Description" class="form-control" rows="3" placeholder="أدخل وصف الحدث"></textarea>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label class="required">تاريخ البداية <span class="required">*</span></label>
                            <input type="date" @bind="newEvent.StartDate" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label>وقت البداية</label>
                            <input type="time" @bind="newEvent.StartTime" class="form-control" />
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label>تاريخ النهاية</label>
                            <input type="date" @bind="newEvent.EndDate" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label>وقت النهاية</label>
                            <input type="time" @bind="newEvent.EndTime" class="form-control" />
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label class="required">نوع الحدث <span class="required">*</span></label>
                            <select @bind="newEvent.EventType" class="form-control" required>
                                <option value="@CalendarEventType.Academic">أكاديمي</option>
                                <option value="@CalendarEventType.Holiday">إجازة</option>
                                <option value="@CalendarEventType.Exam">امتحان</option>
                                <option value="@CalendarEventType.Registration">تسجيل</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label>القسم</label>
                            <select @bind="newEvent.DepartmentId" class="form-control">
                                <option value="">جميع الأقسام</option>
                                @if (departments != null)
                                {
                                    @foreach (var dept in departments)
                                    {
                                        <option value="@dept.Id">@dept.Name</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn-secondary" @onclick="CloseAddEventModal">
                    <i class="fas fa-times"></i> إلغاء
                </button>
                <button class="btn-primary" @onclick="AddNewEvent">
                    <i class="fas fa-save"></i> حفظ الحدث
                </button>
            </div>
        </div>
    </div>
}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const menuBtn = document.querySelector('.mil-menu-btn');
        const navigation = document.querySelector('.mil-navigation');

        menuBtn.addEventListener('click', function () {
            menuBtn.classList.toggle('mil-active');
            navigation.style.display = navigation.style.display === 'block' ? 'none' : 'block';
        });

        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                document.querySelector(this.getAttribute('href')).scrollIntoView({ behavior: 'smooth' });
            });
        });

        document.querySelectorAll('.sidebar-menu a').forEach(item => {
            item.addEventListener('click', function (e) {
                document.querySelectorAll('.sidebar-menu a').forEach(link => link.classList.remove('active'));
                this.classList.add('active');
            });
        });
    });
</script>

@code {
    private DateTime currentDate = DateTime.Now;
    private int currentYear => currentDate.Year;
    private int currentMonth => currentDate.Month;
    private string currentMonthName => new System.Globalization.CultureInfo("ar-SA").DateTimeFormat.GetMonthName(currentMonth);
    private int firstDayOfWeek => (int)new DateTime(currentYear, currentMonth, 1).DayOfWeek;

    private List<AcademicCalendarDto> calendarEvents = new();
    private AcademicCalendarDto selectedEvent = null;
    private int selectedAcademicYear = DateTime.Now.Year;
    private int selectedSemester = 0;
    private int? selectedDepartmentId = null;
    private List<int> academicYears = Enumerable.Range(DateTime.Now.Year - 2, 5).ToList();
    private string[] arabicWeekDays = { "الأحد", "الإثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت" };
    private bool isInEditMode = false;
    private bool showAddEventModal = false;
    private NewEventDto newEvent = new();
    public List<DepartmentDto> departments { get; set; }

    // إحصائيات
    private int totalEvents = 0;
    private int academicEvents = 0;
    private int examEvents = 0;
    private int currentMonthEvents = 0;

    protected override async Task OnInitializedAsync()
    {
        await LoadCalendarData();
        await LoadDepartments();
        await LoadStatistics();
    }

    private async Task LoadCalendarData()
    {
        DateTime startDate = new DateTime(selectedAcademicYear, 1, 1);
        DateTime endDate = new DateTime(selectedAcademicYear, 12, 31);

        if (selectedSemester > 0)
        {
            switch (selectedSemester)
            {
                case 1: // الفصل الأول
                    startDate = new DateTime(selectedAcademicYear, 9, 1);
                    endDate = new DateTime(selectedAcademicYear, 12, 31);
                    break;
                case 2: // الفصل الثاني
                    startDate = new DateTime(selectedAcademicYear, 1, 1);
                    endDate = new DateTime(selectedAcademicYear, 4, 30);
                    break;
                case 3: // الفصل الصيفي
                    startDate = new DateTime(selectedAcademicYear, 5, 1);
                    endDate = new DateTime(selectedAcademicYear, 8, 31);
                    break;
            }
        }

        calendarEvents = await CalendarService.GetEventsByDateRangeAsync(startDate, endDate);
        await LoadStatistics();
    }

    private async Task LoadDepartments()
    {
        departments = await DepartmentService.GetAllDepartmentsAsync();
    }

    private async Task LoadStatistics()
    {
        totalEvents = calendarEvents.Count;
        academicEvents = calendarEvents.Count(e => e.EventType == CalendarEventType.Academic);
        examEvents = calendarEvents.Count(e => e.EventType == CalendarEventType.Exam);
        currentMonthEvents = calendarEvents.Count(e => e.StartDate.Month == currentMonth && e.StartDate.Year == currentYear);
    }

    private void ShowDayForAddEvent(DateTime date)
    {
        newEvent = new NewEventDto
            {
                StartDate = date,
                EndDate = date,
                StartTime = DateTime.Now,
                EndTime = DateTime.Now.AddHours(1),
                EventType = CalendarEventType.Academic
            };
        showAddEventModal = true;
    }

    private void CloseAddEventModal()
    {
        showAddEventModal = false;
    }

    private async Task AddNewEvent()
    {
        try
        {
            var eventToAdd = new AcademicCalendarDto
                {
                    Title = newEvent.Title,
                    Description = newEvent.Description,
                    StartDate = new DateTime(newEvent.StartDate.Year, newEvent.StartDate.Month, newEvent.StartDate.Day,
                                                newEvent.StartTime.Hour, newEvent.StartTime.Minute, 0),
                    EndDate = new DateTime(newEvent.EndDate.Year, newEvent.EndDate.Month, newEvent.EndDate.Day,
                                              newEvent.EndTime.Hour, newEvent.EndTime.Minute, 0),
                    EventType = newEvent.EventType,
                    DepartmentId = newEvent.DepartmentId,
                    AcademicYear = newEvent.StartDate.Year,
                    IsUniversityWide = newEvent.DepartmentId == null
                };

            await CalendarService.CreateEventAsync(eventToAdd);
            await LoadCalendarData();
            showAddEventModal = false;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"حدث خطأ أثناء إضافة الحدث: {ex.Message}");
        }
    }

    private void HandleDayClick(DateTime date)
    {
        if (isInEditMode)
        {
            ShowDayForAddEvent(date);
        }
    }

    private List<AcademicCalendarDto> GetEventsForDay(DateTime date)
    {
        return calendarEvents.Where(e => date >= e.StartDate.Date && date <= e.EndDate.Date).ToList();
    }

    private string GetEventClass(AcademicCalendarDto evt)
    {
        return evt.EventType switch
        {
            CalendarEventType.Academic => "bg-primary-light",
            CalendarEventType.Holiday => "bg-danger-light",
            CalendarEventType.Exam => "bg-warning-light",
            CalendarEventType.Registration => "bg-success-light",
            _ => "bg-primary-light"
        };
    }

    private string GetEventTypeText(CalendarEventType eventType)
    {
        return eventType switch
        {
            CalendarEventType.Academic => "أكاديمي",
            CalendarEventType.Holiday => "إجازة",
            CalendarEventType.Exam => "امتحان",
            CalendarEventType.Registration => "تسجيل",
            _ => "حدث"
        };
    }

    private bool IsToday(DateTime date)
    {
        return date.Date == DateTime.Now.Date;
    }

    private void PreviousMonth()
    {
        currentDate = currentDate.AddMonths(-1);
    }

    private void NextMonth()
    {
        currentDate = currentDate.AddMonths(1);
    }

    private void ShowEventDetails(AcademicCalendarDto evt)
    {
        selectedEvent = evt;
    }

    private void CloseEventDetails()
    {
        selectedEvent = null;
    }

    private async Task DeleteEvent()
    {
        if (selectedEvent != null)
        {
            await CalendarService.DeleteEventAsync(selectedEvent.Id);
            await LoadCalendarData();
            selectedEvent = null;
        }
    }

    private void ToggleEditMode()
    {
        isInEditMode = !isInEditMode;
        if (!isInEditMode)
        {
            showAddEventModal = false;
        }
    }
}