@page "/studentsview"
@attribute [Authorize(Roles = "Admin")]
@inject IStudentServices StudentService
@inject IDepartmentServices DepartmentService
@inject INationalityServices NationalityService
@inject NavigationManager Navigation
@inject IToastService ToastService
@rendermode InteractiveServer

<style>
   
    /* تصميم لوحة الطلاب */
    .students-dashboard {
        display: flex;
        min-height: 100vh;
        background: #f5f7fa;
    }

    .main-content {
        flex: 1;
        margin-right: 330px;
        padding: 20px;
        margin-top: 90px;
    }

    /* شريط الأدوات السريع */
    .header-shortcuts {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
        gap: 15px;
        margin-bottom: 25px;
    }

    .shortcut-item {
        background: white;
        border-radius: 12px;
        padding: 20px;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        border: 2px solid #f0f0f0;
    }

        .shortcut-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 20px rgba(0,0,0,0.15);
            border-color: #3498db;
        }

    .shortcut-icon {
        font-size: 28px;
        margin-bottom: 10px;
        color: #3498db;
    }

    .shortcut-label {
        font-weight: 600;
        color: #2c3e50;
        font-size: 14px;
    }

    /* شريط البحث */
    .top-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background: white;
        padding: 15px 20px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        margin-bottom: 25px;
    }

    .search-box {
        display: flex;
        gap: 10px;
    }

        .search-box input {
            padding: 10px 15px;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 14px;
            width: 300px;
        }

            .search-box input:focus {
                outline: none;
                border-color: #3498db;
            }

    .user-profile {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .user-info h4 {
        margin: 0;
        color: #2c3e50;
    }

    .user-info p {
        margin: 0;
        color: #7f8c8d;
        font-size: 12px;
    }

    .logo {
        width: 40px;
        height: 40px;
        background: #3498db;
        color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
    }

    /* رأس الطلاب */
    .students-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
    }

        .students-header h2 {
            color: #2c3e50;
            font-size: 24px;
        }

    .students-nav {
        display: flex;
        gap: 10px;
    }

    .btn-outline {
        background: transparent;
        border: 2px solid #3498db;
        color: #3498db;
        padding: 8px 15px;
        border-radius: 6px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .btn-outline:hover {
            background: #3498db;
            color: white;
        }

    .mil-button {
        background: #3498db;
        color: white;
        border: none;
        padding: 8px 15px;
        border-radius: 6px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .mil-button:hover {
            background: #2980b9;
        }

    .mil-button-sm {
        padding: 6px 12px;
        font-size: 12px;
    }

    /* حالة التحميل */
    .loading {
        text-align: center;
        padding: 50px;
        color: #7f8c8d;
    }

        .loading i {
            font-size: 36px;
            margin-bottom: 15px;
            color: #3498db;
            animation: spin 1s linear infinite;
        }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    /* حالة عدم وجود طلاب */
    .no-students {
        text-align: center;
        padding: 60px;
        background: white;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

        .no-students i {
            font-size: 48px;
            color: #bdc3c7;
            margin-bottom: 15px;
        }

        .no-students p {
            color: #7f8c8d;
            margin-bottom: 20px;
            font-size: 16px;
        }

    /* شبكة الطلاب */
    .students-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    /* بطاقة الطالب */
    .student-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        overflow: hidden;
        transition: all 0.3s ease;
    }

        .student-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

    .student-card-active {
        border-top: 4px solid #27ae60;
    }

    .student-card-inactive {
        border-top: 4px solid #e74c3c;
    }

    .student-card-new {
        border-top: 4px solid #f39c12;
    }

    .student-card-suspended {
        border-top: 4px solid #95a5a6;
    }

    .student-card-warrning {
        border-top: 4px solid #e67e22;
    }

    .student-header {
        padding: 20px;
        background: #f8f9fa;
        border-bottom: 1px solid #eee;
    }

    .student-avatar {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        overflow: hidden;
        margin-bottom: 10px;
        border: 2px solid #3498db;
    }

        .student-avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    .student-header h3 {
        margin: 0;
        color: #2c3e50;
        font-size: 18px;
    }

    .student-id {
        color: #7f8c8d;
        font-size: 14px;
    }

    .student-body {
        padding: 20px;
    }

    .student-info {
        margin-bottom: 20px;
    }

        .student-info p {
            margin: 8px 0;
            color: #34495e;
            font-size: 14px;
        }

        .student-info i {
            width: 20px;
            color: #3498db;
            margin-left: 5px;
        }

    .student-stats {
        display: flex;
        justify-content: space-around;
        margin-top: 15px;
    }

    .stat-item {
        text-align: center;
    }

        .stat-item .number {
            font-size: 20px;
            font-weight: bold;
            color: #3498db;
        }

        .stat-item .label {
            font-size: 12px;
            color: #7f8c8d;
        }

    .student-footer {
        padding: 15px 20px;
        background: #f8f9fa;
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-top: 1px solid #eee;
    }

    .badge {
        padding: 4px 10px;
        border-radius: 15px;
        font-size: 12px;
        font-weight: bold;
    }

    .badge-active {
        background: #27ae60;
        color: white;
    }

    .badge-inactive {
        background: #e74c3c;
        color: white;
    }

    .badge-new {
        background: #f39c12;
        color: white;
    }

    .badge-suspended {
        background: #95a5a6;
        color: white;
    }

    .badge-warrning {
        background: #e67e22;
        color: white;
    }

    /* النماذج */
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 2000;
    }

    .modal-content {
        background: white;
        border-radius: 12px;
        width: 90%;
        max-width: 800px;
        max-height: 90vh;
        overflow-y: auto;
        position: relative;
    }

    .loading-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(255,255,255,0.8);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 2001;
        border-radius: 12px;
    }

    .spinner {
        width: 40px;
        height: 40px;
        border: 4px solid #f3f3f3;
        border-top: 4px solid #3498db;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    .modal-header {
        padding: 20px;
        background: #f8f9fa;
        border-bottom: 1px solid #eee;
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-radius: 12px 12px 0 0;
    }

        .modal-header h3 {
            margin: 0;
            color: #2c3e50;
        }

    .modal-close {
        background: none;
        border: none;
        font-size: 24px;
        cursor: pointer;
        color: #7f8c8d;
    }

    .modal-body {
        padding: 20px;
    }

    .success-message {
        background: #d4edda;
        color: #155724;
        padding: 10px;
        border-radius: 6px;
        margin-bottom: 15px;
        border: 1px solid #c3e6cb;
    }

    .form-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 15px;
        margin-bottom: 15px;
    }

    .form-group {
        margin-bottom: 15px;
    }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 600;
            color: #2c3e50;
        }

    .required-field::after {
        content: " *";
        color: #e74c3c;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 2px solid #e0e0e0;
        border-radius: 6px;
        font-size: 14px;
        transition: border-color 0.3s ease;
    }

        .form-control:focus {
            outline: none;
            border-color: #3498db;
        }

        .form-control[disabled] {
            background: #f8f9fa;
            cursor: not-allowed;
        }

    .section-title {
        color: #2c3e50;
        border-bottom: 2px solid #eee;
        padding-bottom: 10px;
        margin: 20px 0 15px 0;
    }

    .modal-footer {
        padding: 20px;
        background: #f8f9fa;
        border-top: 1px solid #eee;
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        border-radius: 0 0 12px 12px;
    }

    /* تحسينات للجوال */
    @@media (max-width: 768px) {
        .students-dashboard {
            flex-direction: column;
        }

        .main-content {
            margin-right: 0;
            margin-top: 0;
        }

        .header-shortcuts {
            grid-template-columns: repeat(2, 1fr);
        }

        .top-bar {
            flex-direction: column;
            gap: 15px;
            align-items: stretch;
        }

        .search-box {
            width: 100%;
        }

            .search-box input {
                width: 100%;
            }

        .students-nav {
            flex-wrap: wrap;
            justify-content: center;
        }

        .students-grid {
            grid-template-columns: 1fr;
        }

        .form-row {
            grid-template-columns: 1fr;
        }

        .modal-content {
            width: 95%;
            margin: 10px;
        }
    }

    @@media (max-width: 480px) {
        .header-shortcuts {
            grid-template-columns: 1fr;
        }

        .students-header {
            flex-direction: column;
            gap: 15px;
            align-items: stretch;
        }

        .students-nav {
            flex-direction: column;
        }
    }
</style>


<div class="students-dashboard">
   <NavMenu2/>
    <!-- Main Content -->
    <div class="main-content">
        <!-- New Header with Shortcuts -->
        <div class="header-shortcuts">
            <div class="shortcut-item" @onclick="ShowAddStudentModal">
                <div class="shortcut-icon">
                    <i class="fas fa-user-plus"></i>
                </div>
                <div class="shortcut-label">إضافة طالب</div>
            </div>
            <div class="shortcut-item" @onclick="GoToAdmissions">
                <div class="shortcut-icon">
                    <i class="fas fa-file-alt"></i>
                </div>
                <div class="shortcut-label">طلبات القبول</div>
            </div>
            <div class="shortcut-item" @onclick="RefreshStudents">
                <div class="shortcut-icon">
                    <i class="fas fa-sync-alt"></i>
                </div>
                <div class="shortcut-label">تحديث</div>
            </div>
            <div class="shortcut-item" @onclick="() =>SearchStudents(ActiveSearch)">
                <div class="shortcut-icon">
                    <i class="fas fa-user-check"></i>
                </div>
                <div class="shortcut-label">النشطين</div>
            </div>
            <div class="shortcut-item" @onclick="() =>SearchStudents(NotActiveSearch)">
                <div class="shortcut-icon">
                    <i class="fas fa-user-times"></i>
                </div>
                <div class="shortcut-label">غير النشطين</div>
            </div>
        </div>

        <div class="top-bar">
            <div class="search-box">
                <input type="text" placeholder="بحث في الطلاب..." @bind="searchTerm" />
                <button class="mil-button mil-button-sm" @onclick="()=>SearchStudents(searchTerm)"><i class="fas fa-search"></i> بحث</button>
            </div>
            <AuthorizeView>
                <Authorized>
            <div class="user-profile">
                <div class="user-info">
                    <h4>@context.User.Identity!.Name</h4>
                           @*  <p>@context.User.Claims</p> *@
                </div>
                        <div class="logo">@context.User.Identity.Name</div>
                @* <img src="https://via.placeholder.com/40  " alt="User" style="width: 40px; height: 40px; border-radius: 50%; margin-right: 10px;"> *@
            </div>
                </Authorized>
            </AuthorizeView>
        </div>
        <div class="students-header">
            <h2><i class="fas fa-users"></i> إدارة الطلاب</h2>
            <div class="students-nav">
                <button class="btn-outline" @onclick="RefreshStudents">
                    <i class="fas fa-sync"></i> تحديث
                </button>
                <button class="mil-button" @onclick="GoToAdmissions">
                    <i class="fas fa-user-plus"></i> طلبات القبول
                </button>
                <button class="mil-button" @onclick="ShowAddStudentModal">
                    <i class="fas fa-plus"></i> إضافة طالب جديد
                </button>
            </div>
        </div>
        <!-- Loading State -->
        @if (isLoading)
        {
            <div class="loading">
                <i class="fas fa-spinner"></i>
                <p>جارِ تحميل بيانات الطلاب...</p>
            </div>
        }
        else if (students == null || !students.Any())
        {
            <div class="no-students">
                <i class="fas fa-users"></i>
                <p>لا توجد بيانات طلاب حالياً.</p>
                <button class="mil-button" @onclick="ShowAddStudentModal"> إضافة طالب جديد</button>
            </div>
        }
        else
        {
            <!-- Student Cards Grid -->
            <div class="students-grid">
                @foreach (var student in students)
                {
                    <div class="student-card student-card-@(student.Status.ToString().ToLower())">
                        <div class="student-header">
                            <div class="student-avatar">
                                <img src="@(string.IsNullOrEmpty(student.ProfilePicture) ? "favicon.png" : student.ProfilePicture)" alt="طالب">
                            </div>
                            <h3>@student.FullName</h3>
                            <span class="student-id">@student.StudentId</span>
                        </div>
                        <div class="student-body">
                            <div class="student-info">
                                <p><i class="fas fa-graduation-cap"></i> @student.Department?.Name</p>
                                <p><i class="fas fa-envelope"></i> @student.Email</p>
                                <p><i class="fas fa-phone"></i> @student.Phone</p>
                                <p><i class="fas fa-calendar"></i> السنة @student.AcademicYear</p>
                            </div>
                            <div class="student-stats">
                                <div class="stat-item">
                                    <div class="number">@student.GPA.ToString("F1")</div>
                                    <div class="label">المعدل</div>
                                </div>
                                <div class="stat-item">
                                    <div class="number">@student.AttendancePercentage.ToString("F0")%</div>
                                    <div class="label">الحضور</div>
                                </div>
                            </div>
                        </div>
                        <div class="student-footer">
                            <span class="badge @(GetStatusBadgeClass(student.Status))">@GetStatusText(student.Status)</span>
                            <button class="btn-outline" @onclick="() => ShowStudentDetailsModal(student)"><i class="fas fa-eye"></i> تفاصيل</button>
                            <button class="btn-outline" @onclick="() => ShowEditStudentModal(student)"><i class="fas fa-edit"></i> تعديل</button>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

<!-- Student Add/Edit Modal -->
@if (showStudentModal)
{
    <div class="modal-overlay" @onclick="CloseStudentModal">
        <div class="modal-content" @onclick:stopPropagation="true">
            @if (isSubmitting)
            {
                <div class="loading-overlay">
                    <div class="spinner"></div>
                </div>
            }
            <div class="modal-header">
                <h3><i class="fas fa-user-plus"></i> @(isEditMode ? "تعديل بيانات الطالب" : "إضافة طالب جديد")</h3>
                <button class="modal-close" @onclick="CloseStudentModal">&times;</button>
            </div>
            <div class="modal-body">
                @if (!string.IsNullOrEmpty(successMessage))
                {
                    <div class="success-message">
                        @successMessage
                    </div>
                }
                <form @onsubmit:preventDefault="true">
                    <!-- Basic Information -->
                    <h4 class="section-title">المعلومات الأساسية</h4>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="firstName" class="required-field">الاسم الأول</label>
                            <input type="text" id="firstName" class="form-control" @bind="currentStudent.FirstName" required />
                        </div>
                        <div class="form-group">
                            <label for="lastName" class="required-field">اسم العائلة</label>
                            <input type="text" id="lastName" class="form-control" @bind="currentStudent.LastName" required />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="email" class="required-field">البريد الإلكتروني</label>
                            <input type="email" id="email" class="form-control" @bind="currentStudent.Email" required />
                        </div>
                        <div class="form-group">
                            <label for="phone" class="required-field">رقم الهاتف</label>
                            <input type="text" id="phone" class="form-control" @bind="currentStudent.Phone" required />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="studentId" class="required-field">رقم الطالب</label>
                            <input type="text" id="studentId" class="form-control" @bind="currentStudent.StudentId" required />
                        </div>
                        <div class="form-group">
                            <label for="departmentId" class="required-field">القسم</label>
                            @if (departmentsLoading)
                            {
                                <div class="loading">جارِ تحميل الأقسام...</div>
                            }
                            else
                            {
                                <select id="departmentId" class="form-control" @bind="currentStudent.DepartmentId" required>
                                    <option value="">اختر القسم</option>
                                    @foreach (var dept in departments)
                                    {
                                        <option value="@dept.Id">@dept.Name</option>
                                    }
                                </select>
                            }
                        </div>
                        <div class="form-group">
                            <label for="nationalityId" class="required-field">الجنسية</label>
                            @if (departmentsLoading)
                            {
                                <div class="loading">جارِ تحميل الجنسيات...</div>
                            }
                            else
                            {
                                <select id="nationalityId" class="form-control" @bind="currentStudent.NationalityId" required>
                                    <option value="">اختر الجنسية</option>
                                    @foreach (var dept in nationalities)
                                    {
                                        <option value="@dept.Id">@dept.CountryName</option>
                                    }
                                </select>
                            }
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="academicYear">السنة الدراسية</label>
                            <input type="text" id="academicYear" class="form-control" @bind="currentStudent.AcademicYear" />
                        </div>
                        <div class="form-group">
                            <label for="registrationDate">تاريخ التسجيل</label>
                            <input type="date" id="registrationDate" class="form-control" @bind="currentStudent.RegistrationDate" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="status" class="required-field">الحالة</label>
                            <select id="status" class="form-control" @bind="currentStudent.Status" required>
                                <option value="@StudentStatus.New">جديد</option>
                                <option value="@StudentStatus.Active">نشط</option>
                                <option value="@StudentStatus.Inactive">غير نشط</option>
                                <option value="@StudentStatus.Suspended">موقوف دراسياً</option>
                                <option value="@StudentStatus.Warrning">تحذير أكاديمي</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="gpa">المعدل التراكمي</label>
                            <input type="number" step="0.01" id="gpa" class="form-control" @bind="currentStudent.GPA" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="attendancePercentage">نسبة الحضور (%)</label>
                            <input type="number" step="0.01" id="attendancePercentage" class="form-control" @bind="currentStudent.AttendancePercentage" />
                        </div>
                        <div class="form-group">
                            <label for="accountBalance">رصيد الحساب</label>
                            <input type="number" step="0.01" id="accountBalance" class="form-control" @bind="currentStudent.AccountBalance" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="registraionCompleted">اكتمل التسجيل</label>
                            <select id="registraionCompleted" class="form-control" @bind="currentStudent.RegistraionCompleted">
                                <option value="true">نعم</option>
                                <option value="false">لا</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="homeAddress" class="required-field">العنوان</label>
                            <input type="text" id="homeAddress" class="form-control" @bind="currentStudent.HomeAddress" required />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="birthOfDate" class="required-field">تاريخ الميلاد</label>
                            <input type="date" id="birthOfDate" class="form-control" @bind="currentStudent.BirthOfDate" required />
                        </div>
                        <div class="form-group">
                            <label for="sexual" class="required-field">الجنس</label>
                            <select id="sexual" class="form-control" @bind="currentStudent.Sexual" required>
                                <option value="true">ذكر</option>
                                <option value="false">أنثى</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="civilstatusIDNumberAndNationalCard" class="required-field">رقم الهوية المدنية</label>
                            <input type="text" id="civilstatusIDNumberAndNationalCard" class="form-control" @bind="currentStudent.CivilstatusIDNumberAndNationalCard" required />
                        </div>
                        <div class="form-group">
                            <label for="userNameOnSite">اسم المستخدم على الموقع</label>
                            <input type="text" id="userNameOnSite" class="form-control" @bind="currentStudent.UserNameOnSite" />
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="mil-button" @onclick="CloseStudentModal">
                    <i class="fas fa-times"></i> إلغاء
                </button>
                <button class="mil-button" @onclick="SaveStudent">
                    <i class="fas @(isEditMode ? "fa-save" : "fa-plus")"></i> @(isEditMode ? "حفظ التغييرات" : "إضافة الطالب")
                </button>
            </div>
        </div>
    </div>
}

<!-- Student Details Modal -->
@if (showDetailsModal && selectedStudent != null)
{
    <div class="modal-overlay" @onclick="CloseDetailsModal">
        <div class="modal-content" @onclick:stopPropagation="true">
            <div class="modal-header">
                <h3><i class="fas fa-user"></i> تفاصيل الطالب</h3>
                <button class="modal-close" @onclick="CloseDetailsModal">&times;</button>
            </div>
            <div class="modal-body">
                <div style="display: flex; flex-direction: column; align-items: center; margin-bottom: 20px;">
                    <div class="student-avatar" style="width: 100px; height: 100px;">
                        <img src="@(string.IsNullOrEmpty(selectedStudent.ProfilePicture) ? "https://via.placeholder.com/100  " : selectedStudent.ProfilePicture)" alt="طالب">
                    </div>
                    <h3 style="margin: 15px 0 5px;">@selectedStudent.FullName</h3>
                    <span class="student-id">@selectedStudent.StudentId</span>
                    <span class="badge @(GetStatusBadgeClass(selectedStudent.Status))" style="margin-top: 10px;">@GetStatusText(selectedStudent.Status)</span>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>البريد الإلكتروني:</label>
                        <div class="form-control">@selectedStudent.Email</div>
                    </div>
                    <div class="form-group">
                        <label>رقم الهاتف:</label>
                        <div class="form-control">@selectedStudent.Phone</div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>القسم:</label>
                        <div class="form-control">@selectedStudent.Department?.Name</div>
                    </div>
                    <div class="form-group">
                        <label>السنة الدراسية:</label>
                        <div class="form-control">@selectedStudent.AcademicYear</div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>المعدل التراكمي:</label>
                        <div class="form-control">@selectedStudent.GPA.ToString("F2")</div>
                    </div>
                    <div class="form-group">
                        <label>نسبة الحضور:</label>
                        <div class="form-control">@selectedStudent.AttendancePercentage.ToString("F0")%</div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>تاريخ التسجيل:</label>
                        <div class="form-control">@selectedStudent.RegistrationDate.ToString("yyyy/MM/dd")</div>
                    </div>
                    <div class="form-group">
                        <label>تاريخ الميلاد:</label>
                        <div class="form-control">@selectedStudent.BirthOfDate.ToString("yyyy/MM/dd")</div>
                    </div>
                </div>
                <h4 class="section-title">معلومات السكن</h4>
                <div class="form-row">
                    <div class="form-group">
                        <label>العنوان:</label>
                        <div class="form-control">@selectedStudent.HomeAddress</div>
                    </div>
                    <div class="form-group">
                        <label>رقم المنزل:</label>
                        <div class="form-control">@selectedStudent.HomeNumber</div>
                    </div>
                </div>
                <h4 class="section-title">معلومات شخصية</h4>
                <div class="form-row">
                    <div class="form-group">
                        <label>الديانة:</label>
                        <div class="form-control">@selectedStudent.Religion</div>
                    </div>
                    <div class="form-group">
                        <label>الجنسية:</label>
                        <div class="form-control">@selectedStudent.NationalityName</div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>رقم الهوية:</label>
                        <div class="form-control">@selectedStudent.CivilstatusIDNumberAndNationalCard</div>
                    </div>
                    <div class="form-group">
                        <label>الانتماء السياسي:</label>
                        <div class="form-control">@selectedStudent.PoliticalNationalism</div>
                    </div>
                </div>
                <h4 class="section-title">معلومات المدرسة</h4>
                <div class="form-row">
                    <div class="form-group">
                        <label>اسم المدرسة:</label>
                        <div class="form-control">@selectedStudent.SchoolName</div>
                    </div>
                    <div class="form-group">
                        <label>التخصص:</label>
                        <div class="form-control">@selectedStudent.Branch</div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>تاريخ التخرج:</label>
                        <div class="form-control">@selectedStudent.DateOfSchoolGraduate.ToString("yyyy/MM/dd")</div>
                    </div>
                    <div class="form-group">
                        <label>المعدل التراكمي:</label>
                        <div class="form-control">@selectedStudent.GPA</div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn-secondary" @onclick="CloseDetailsModal">
                    <i class="fas fa-times"></i> إغلاق
                </button>
                <button class="btn-primary" @onclick="() => ShowEditStudentModal(selectedStudent)">
                    <i class="fas fa-edit"></i> تعديل
                </button>
            </div>
        </div>
    </div>
}

@code {
    private List<StudentDto> students = new();
    private string searchTerm = "";
    private bool isLoading = true;
    // Modal variables
    private bool showStudentModal = false;
    private bool showDetailsModal = false;
    private bool isSubmitting = false;
    private bool isEditMode = false;
    private string successMessage = "";
    private List<DepartmentDto> departments = new();
    private List<NationalityDto> nationalities = new();
    private bool departmentsLoading = false;
    private bool nationalitiesLoading = false;
    public string ActiveSearch { get; set; } = "active";
    public string NotActiveSearch { get; set; } = "notactive";
    // Student objects
    private StudentDto currentStudent = new StudentDto();
    private StudentDto selectedStudent = new StudentDto();
    private StudentDto newStudent = new StudentDto
        {
            BirthOfDate = DateTime.Now.AddYears(-18),
            DateOfSchoolGraduate = DateTime.Now,
            RegistrationDate = DateTime.Now,
            CreatedAt = DateTime.Now,
            Status = StudentStatus.New,
            GPA = 0.0,
            AttendancePercentage = 0,
            AccountBalance = 0,
            RegistraionCompleted = false
        };
    protected override async Task OnInitializedAsync()
    {
        await LoadStudents();
        await LoadDepartments();
        await LoadNationalitiess();
    }
    private async Task LoadDepartments()
    {
        try
        {
            departmentsLoading = true;
            StateHasChanged();
            var result = await DepartmentService.GetAllDepartmentsAsync();
            departments = result ?? new List<DepartmentDto>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading departments: {ex.Message}");
            departments = new List<DepartmentDto>();
        }
        finally
        {
            departmentsLoading = false;
            StateHasChanged();
        }
    }
    private async Task LoadNationalitiess()
    {
        try
        {
            nationalitiesLoading = true;
            StateHasChanged();
            var result = await NationalityService.GetAllNationalitiesAsync();
            nationalities = result ?? new List<NationalityDto>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading departments: {ex.Message}");
            nationalities = new List<NationalityDto>();
        }
        finally
        {
            nationalitiesLoading = false;
            StateHasChanged();
        }
    }
    private async Task LoadStudents()
    {
        try
        {
            isLoading = true;
            StateHasChanged();
            var result = await StudentService.GetAllStudentsAsync();
            students = result ?? new List<StudentDto>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading students: {ex.Message}");
            students = new List<StudentDto>();
            ToastService.ShowError("حدث خطأ أثناء تحميل بيانات الطلاب", "خطأ");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
    private async Task SearchStudents(string term)
    {
        try
        {
            isLoading = true;
            StateHasChanged();
            if (!string.IsNullOrWhiteSpace(term))
            {
                var result = await StudentService.GetStudentsAsync(term);
                students = result ?? new List<StudentDto>();
            }
            else
            {
                await LoadStudents();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error searching students: {ex.Message}");
            students = new List<StudentDto>();
            ToastService.ShowError("حدث خطأ أثناء البحث في بيانات الطلاب", "خطأ");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
    private async Task RefreshStudents()
    {
        searchTerm = "";
        await LoadStudents();
    }
    private string GetStatusBadgeClass(StudentStatus status)
    {
        return status switch
        {
            StudentStatus.New or StudentStatus.Active => "badge-success",
            StudentStatus.Inactive => "badge-warning",
            StudentStatus.Suspended => "badge-danger",
            _ => "badge-primary"
        };
    }
    private string GetStatusText(StudentStatus status)
    {
        return status switch
        {
            StudentStatus.Active => "نشط",
            StudentStatus.Inactive => "غير نشط",
            StudentStatus.Suspended => "موقوف دراسياً",
            StudentStatus.New => "جديد",
            StudentStatus.Warrning => "تحذير أكاديمي",
            _ => "غير محدد"
        };
    }
    // Unified modal functions for add/edit
    private void ShowAddStudentModal()
    {
        isEditMode = false;
        currentStudent = new StudentDto
            {
                BirthOfDate = DateTime.Now.AddYears(-18),
                DateOfSchoolGraduate = DateTime.Now,
                RegistrationDate = DateTime.Now,
                CreatedAt = DateTime.Now,
                Status = StudentStatus.New,
                GPA = 0.0,
                AttendancePercentage = 0,
                AccountBalance = 0,
                RegistraionCompleted = false
            };
        showStudentModal = true;
        successMessage = "";
    }
    private void ShowEditStudentModal(StudentDto student)
    {
        isEditMode = true;
        currentStudent = new StudentDto
            {
                Id = student.Id,
                FirstName = student.FirstName,
                LastName = student.LastName,
                FullName = student.FullName,
                Email = student.Email,
                Phone = student.Phone,
                StudentId = student.StudentId,
                DepartmentId = student.DepartmentId,
                BirthOfDate = student.BirthOfDate,
                Sexual = student.Sexual,
                HomeAddress = student.HomeAddress,
                HomeNumber = student.HomeNumber,
                Religion = student.Religion,
                NationalityName = student.NationalityName,
                NationalityId = student.NationalityId,
                PoliticalNationalism = student.PoliticalNationalism,
                CivilstatusIDNumberAndNationalCard = student.CivilstatusIDNumberAndNationalCard,
                SchoolName = student.SchoolName,
                Branch = student.Branch,
                DateOfSchoolGraduate = student.DateOfSchoolGraduate,
                GPA = student.GPA,
                AcademicYear = student.AcademicYear,
                Status = student.Status,
                RegistrationDate = student.RegistrationDate,
                CreatedAt = student.CreatedAt,
                ProfilePicture = student.ProfilePicture,
                AttendancePercentage = student.AttendancePercentage,
                AccountBalance = student.AccountBalance,
                RegistraionCompleted = student.RegistraionCompleted,
                TunnelId = 1
            };
        showStudentModal = true;
        successMessage = "";
    }
    private void CloseStudentModal()
    {
        showStudentModal = false;
        currentStudent = new StudentDto();
        successMessage = "";
    }
    private async Task SaveStudent()
    {
        try
        {
            isSubmitting = true;
            StateHasChanged();
            currentStudent.TunnelId = 1;
            // Set calculated values
            currentStudent.FullName = $"{currentStudent.FirstName} {currentStudent.LastName}";
            if (isEditMode)
            {
                await StudentService.UpdateStudentAsync(currentStudent.Id, currentStudent);
                ToastService.ShowSuccess("تم تحديث بيانات الطالب بنجاح", "نجاح");
                await LoadStudents();
                CloseStudentModal();
            }
            else
            {
                // Add new student
                currentStudent.RegistrationDate = DateTime.Now;
                currentStudent.CreatedAt = DateTime.Now;
                var result = await StudentService.CreateStudentAsync(currentStudent);
                if (result != null)
                {
                    ToastService.ShowSuccess("تم إضافة الطالب بنجاح", "نجاح");
                    await LoadStudents(); // Reload student list
                    CloseStudentModal();
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error saving student: {ex.Message}");
            ToastService.ShowError("حدث خطأ أثناء حفظ بيانات الطالب", "خطأ");
        }
        finally
        {
            isSubmitting = false;
            StateHasChanged();
        }
    }
    // Details modal functions
    private void ShowStudentDetailsModal(StudentDto student)
    {
        selectedStudent = student;
        showDetailsModal = true;
    }
    private void CloseDetailsModal()
    {
        showDetailsModal = false;
        selectedStudent = new StudentDto();
    }
    // Navigation to admissions page
    private void GoToAdmissions()
    {
        Navigation.NavigateTo("/apply");
    }
    private void ViewStudentCourses(int studentId)
    {
        // Navigate to student details page
        Navigation.NavigateTo($"/student/{studentId}/registrations");
    }
}