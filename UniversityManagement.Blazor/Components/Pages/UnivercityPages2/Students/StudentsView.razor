@page "/studentsview"
@attribute [Authorize(Roles = "Admin")]
@inject IStudentServices StudentService
@inject IDepartmentServices DepartmentService
@inject INationalityServices NationalityService
@inject NavigationManager Navigation
@inject IToastService ToastService
@rendermode InteractiveServer

<style>
    /* Existing styles from Pasted_Text_1757157217441.txt */
    *, *:before, *:after {
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        padding: 0;
        margin: 0;
    }
    html, body {
        padding: 0;
        margin: 0;
        font-family: "Sora", sans-serif;
        font-size: 15px;
        font-weight: 400;
        color: rgba(18, 24, 32, 0.7);
        line-height: 100%;
        background-color: #f9f9f9;
    }
    h1, h2, h3, h4, h5, h6 {
        font-family: "Sora", sans-serif;
        color: rgb(18, 24, 32);
        font-weight: 600;
        line-height: 140%;
    }
    h1 {
        font-size: 42px;
    }
    h2 {
        font-size: 36px;
    }
    h3 {
        font-size: 28px;
    }
    h4 {
        font-size: 22px;
    }
    h5 {
        font-size: 18px;
    }
    h6 {
        font-size: 16px;
    }
    a {
        color: inherit;
        text-decoration: none;
    }
    .mil-accent {
        color: rgb(245, 124, 0);
    }
    .mil-bold {
        font-weight: 500;
    }
    .container {
        width: 100%;
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 15px;
    }
    .mil-section {
        padding: 80px 0;
    }
    .mil-section-title {
        text-align: center;
        margin-bottom: 60px;
    }
        .mil-section-title h2 {
            font-size: 36px;
            margin-bottom: 15px;
        }
        .mil-section-title p {
            color: rgba(18, 24, 32, 0.5);
            max-width: 600px;
            margin: 0 auto;
        }
    .mil-flex {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
    }
    .mil-flex-center {
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        justify-content: center;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
    }
    .mil-mb-30 {
        margin-bottom: 30px;
    }
    .mil-mb-60 {
        margin-bottom: 60px;
    }
    .mil-mb-90 {
        margin-bottom: 90px;
    }
    .mil-mt-30 {
        margin-top: 30px;
    }
    .mil-mt-60 {
        margin-top: 60px;
    }
    .mil-mt-90 {
        margin-top: 90px;
    }
    .mil-center {
        text-align: center;
    }
    .mil-button {
        cursor: pointer;
        height: 40px;
        font-family: "Sora", sans-serif;
        font-size: 16px;
        color: rgb(18, 24, 32);
        font-weight: 500;
        white-space: nowrap;
        display: -webkit-inline-box;
        display: -ms-inline-flexbox;
        display: inline-flex;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        justify-content: center;
        text-align: center;
        border: none;
        border-radius: 40px;
        background-color: rgb(245, 124, 0);
        color: white;
        -webkit-transition: 0.4s cubic-bezier(0, 0, 0.3642, 1);
        transition: 0.4s cubic-bezier(0, 0, 0.3642, 1);
    } 
    
        
        .mil-button:hover {
            -webkit-transform: translateY(-5px);
            transform: translateY(-5px);
            -webkit-box-shadow: 0px 10px 20px 0px rgba(245, 124, 0, 0.3);
            box-shadow: 0px 10px 20px 0px rgba(245, 124, 0, 0.3);
    }

    
  
        
        .mil-button .mil-button-sm {
            height: 30px;
            padding: 0 30px;
            font-size: 14px;
        }
    .mil-top-panel {
        padding: 0 10px;
        height: 80px;
        background-color: rgb(255, 255, 255);
        width: 100%;
        z-index: 999;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-pack: justify;
        -ms-flex-pack: justify;
        justify-content: space-between;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
        -webkit-box-shadow: 0px 0px 40px 0px rgba(18, 24, 32, 0.1);
        box-shadow: 0px 0px 40px 0px rgba(18, 24, 32, 0.1);
        position: fixed;
        top: 0;
        left: 0;
    }
    .mil-logo img {
        height: 50px;
    }
    .mil-navigation nav ul {
        list-style: none;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
    }
        .mil-navigation nav ul li {
            margin: 0 15px;
            position: relative;
        }
            .mil-navigation nav ul li a {
                font-family: "Sora", sans-serif;
                text-decoration: none;
                color: rgb(18, 24, 32);
                font-weight: 400;
                white-space: nowrap;
                -webkit-transition: 0.2s cubic-bezier(0, 0, 0.3642, 1);
                transition: 0.2s cubic-bezier(0, 0, 0.3642, 1);
            }
                .mil-navigation nav ul li a:hover {
                    color: rgb(245, 124, 0);
                }
    .mil-menu-btn {
        display: none;
        cursor: pointer;
        width: 30px;
        height: 30px;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        justify-content: center;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
    }
        .mil-menu-btn span, .mil-menu-btn span:after, .mil-menu-btn span:before {
            content: "";
            display: block;
            width: 24px;
            height: 2px;
            background: rgb(18, 24, 32);
            -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
            -webkit-transition: inherit;
            transition: inherit;
        }
        .mil-menu-btn span {
            position: relative;
        }
            .mil-menu-btn span:before {
                top: -8px;
            }
            .mil-menu-btn span:after {
                top: 8px;
            }
        .mil-menu-btn.mil-active span {
            background: transparent;
        }
            .mil-menu-btn.mil-active span:before {
                top: 0;
                -webkit-transform: rotate(45deg);
                transform: rotate(45deg);
            }
            .mil-menu-btn.mil-active span:after {
                top: 0;
                -webkit-transform: rotate(-45deg);
                transform: rotate(-45deg);
            }
    /* Additional styles for the student panel */
    :root {
        --primary-color: #f57c00;
        --dark-color: #121820;
        --light-color: #ffffff;
        --gray-color: #f5f5f5;
        --text-color: #333333;
        --success-color: #4caf50;
        --warning-color: #ff9800;
        --danger-color: #f44336;
        --info-color: #2196f3;
        --card-gradient-start: #6a11cb;
        --card-gradient-end: #2575fc;
        --card-hover-gradient-start: #f57c00;
        --card-hover-gradient-end: #ff9800;
    }
    body {
        font-family: 'Sora', sans-serif;
        color: var(--text-color);
        background-color: #f9f9f9;
        margin: 0;
        padding: 0;
    }
    .students-dashboard {
        display: flex;
        min-height: 100vh;
    }

    .sidebar {
        width: 280px;
        background: var(--dark-color);
        color: white;
        padding: 20px 0;
        transition: all 0.3s ease;
        position: fixed;
        height: 100vh;
        overflow-y: auto;
        z-index: 1000;
    }

    .sidebar-header {
        padding: 20px;
        text-align: center;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

        .sidebar-header h3 {
            color: white;
            margin: 10px 0;
        }

    .sidebar-menu {
        padding: 20px 0;
    }

        .sidebar-menu ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .sidebar-menu li {
            margin-bottom: 5px;
        }

        .sidebar-menu a {
            display: flex;
            align-items: center;
            padding: 12px 20px;
            color: rgba(255, 255, 255, 0.7);
            text-decoration: none;
            transition: all 0.3s;
        }

            .sidebar-menu a:hover, .sidebar-menu a.active {
                background: rgba(255, 255, 255, 0.1);
                color: white;
                border-right: 3px solid var(--primary-color);
            }

        .sidebar-menu i {
            margin-left: 10px;
            font-size: 18px;
        }


    .main-content {
        flex: 1;
        padding: 20px;
        background: var(--gray-color);
        margin-right: 280px;
        min-height: 100vh;
    }

    .top-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 20px;
        background: white;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        margin-bottom: 20px;
    }
    .students-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }
        .students-header h2 {
            margin: 0;
        }
    .students-nav {
        display: flex;
        gap: 10px;
    }
        .students-nav .btn-outline {
            background: white;
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 8px 15px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 5px;
            font-family: 'Sora', sans-serif;
            color: var(--text-color);
            transition: all 0.3s ease;
        }
            .students-nav .btn-outline:hover {
                background: #f5f5f5;
                transform: translateY(-2px);
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            }
            .students-nav .btn-outline i {
                color: var(--primary-color);
            }
        .students-nav .mil-button  {
            display: flex;
            align-items: center;
            gap: 8px;
            box-shadow: 0 4px 6px rgba(245, 124, 0, 0.2);
        }
            .students-nav .mil-button:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 12px rgba(245, 124, 0, 0.3);
            }
    .students-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
    }
    .student-card {
        background: linear-gradient(135deg, var(--card-gradient-start), var(--card-gradient-end));
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
        transition: all 0.5s cubic-bezier(0.23, 1, 0.32, 1);
        position: relative;
        transform-style: preserve-3d;
        perspective: 1000px;
    }
        .student-card:hover {
            transform: translateY(-10px) scale(1.02);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.25);
            background: linear-gradient(135deg, var(--card-hover-gradient-start), var(--card-hover-gradient-end));
        }
        .student-card::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0) 70%);
            opacity: 0;
            transition: opacity 0.5s ease, transform 0.5s ease;
            transform: rotate(0deg);
            z-index: 1;
        }
        .student-card:hover::before {
            opacity: 1;
            transform: rotate(45deg);
        }
    .student-header {
        padding: 25px 20px 20px;
        text-align: center;
        color: white;
        position: relative;
        z-index: 2;
    }
    .student-avatar {
        width: 90px;
        height: 90px;
        border-radius: 50%;
        border: 4px solid rgba(255, 255, 255, 0.3);
        margin: 0 auto 20px;
        overflow: hidden;
        transition: all 0.3s ease;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    }
        .student-avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }
    .student-card:hover .student-avatar img {
        transform: scale(1.1);
    }
    /* تمييز كروت الطلاب حسب الحالة */
    /* الحالة: جديد (New) */
    .student-card-new {
        background: linear-gradient(135deg, #8e24aa, #ff689b); /* أرجواني/وردي */
        border-left: 5px solid #ffd700; /* حد أيسر ذهبي */
    }

        .student-card-new:hover {
            background: linear-gradient(135deg, #7b1fa2, #ff4081);
            box-shadow: 0 15px 35px rgba(142, 36, 170, 0.4);
        }

    /* الحالة: نشط / مسجل (Active) */
    .student-card-active {
        background: linear-gradient(135deg, var(--card-gradient-start), var(--card-gradient-end)); /* الأزرق الأصلي */
        border-left: 5px solid #4caf50; /* حد أيسر أخضر */
    }

        .student-card-active:hover {
            background: linear-gradient(135deg, var(--card-hover-gradient-start), var(--card-hover-gradient-end)); /* البرتقالي الأصلي */
            box-shadow: 0 15px 35px rgba(76, 175, 80, 0.4);
        }

    /* الحالة: غير نشط / ملغي (Inactive) */
    .student-card-inactive {
        background: linear-gradient(135deg, #757575, #bdbdbd); /* رمادي */
        border-left: 5px solid #ff9800; /* حد أيسر برتقالي */
    }

        .student-card-inactive:hover {
            background: linear-gradient(135deg, #616161, #9e9e9e);
            box-shadow: 0 15px 35px rgba(121, 85, 72, 0.4);
        }

    /* الحالة: موقوف (Suspended) */
    .student-card-suspended {
        background: linear-gradient(135deg, #d32f2f, #f44336); /* أحمر داكن */
        border-left: 5px solid #000000; /* حد أيسر أسود */
    }

        .student-card-suspended:hover {
            background: linear-gradient(135deg, #c62828, #e53935);
            box-shadow: 0 15px 35px rgba(211, 47, 47, 0.4);
        }

    /* الحالة: تحذير أكاديمي (Warrning) */
    .student-card-warrning {
        background: linear-gradient(135deg, #ff8f00, #ffc107); /* برتقالي / أصفر */
        border-left: 5px solid #ff0000; /* حد أيسر أحمر */
    }

        .student-card-warrning:hover {
            background: linear-gradient(135deg, #ff6f00, #ffb300);
            box-shadow: 0 15px 35px rgba(255, 143, 0, 0.4);
        }

        /* تأكد من أن النصوص على الكروت ذات الخلفيات الملونة تبقى مقروءة */
        .student-card-new .student-header,
        .student-card-inactive .student-header,
        .student-card-suspended .student-header,
        .student-card-warrning .student-header {
            color: white; /* يجعل اسم الطالب وأرقام الهوية بيضاء */
        }

        .student-card-new .student-id,
        .student-card-inactive .student-id,
        .student-card-suspended .student-id,
        .student-card-warrning .student-id {
            background: rgba(255, 255, 255, 0.2); /* خلفية شبه شفافة للرقم */
            color: white; /* رقم الهوية أبيض */
        }
    .student-header h3 {
        margin: 0 0 8px;
        font-size: 20px;
        font-weight: 600;
        text-shadow: 0 2px 4px rgba(0,0,0,0.2);
    }
    .student-id {
        display: inline-block;
        background: rgba(255, 255, 255, 0.25);
        padding: 5px 12px;
        border-radius: 20px;
        font-size: 13px;
        font-weight: 500;
        backdrop-filter: blur(5px);
    }
    .student-body {
        padding: 20px;
        background: rgba(255, 255, 255, 0.95);
        position: relative;
        z-index: 2;
    }
    .student-info {
        margin-bottom: 18px;
    }
        .student-info p {
            margin: 10px 0;
            display: flex;
            align-items: center;
            font-size: 14px;
            color: #444;
        }
        .student-info i {
            margin-left: 12px;
            color: var(--primary-color);
            width: 22px;
            text-align: center;
            font-size: 16px;
        }
    .student-stats {
        display: flex;
        justify-content: space-around;
        padding-top: 18px;
        border-top: 1px dashed #eee;
    }
    .stat-item {
        text-align: center;
        flex: 1;
    }
        .stat-item .number {
            font-size: 22px;
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: 5px;
        }
        .stat-item .label {
            font-size: 13px;
            color: #777;
            font-weight: 500;
        }
    .student-footer {
        padding: 18px 20px;
        background: rgba(245, 245, 245, 0.98);
        display: flex;
        justify-content: space-between;
        align-items: center;
        position: relative;
        z-index: 2;
        border-top: 1px solid rgba(0,0,0,0.05);
    }
    .badge {
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 13px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    .badge-success {
        background: rgba(76, 175, 80, 0.15);
        color: #2e7d32;
        border: 1px solid rgba(76, 175, 80, 0.3);
    }
    .badge-warning {
        background: rgba(255, 152, 0, 0.15);
        color: #ef6c00;
        border: 1px solid rgba(255, 152, 0, 0.3);
    }
    .badge-primary {
        background: rgba(245, 124, 0, 0.15);
        color: #e65100;
        border: 1px solid rgba(245, 124, 0, 0.3);
    }
    .badge-danger {
        background: rgba(244, 67, 54, 0.15);
        color: #c62828;
        border: 1px solid rgba(244, 67, 54, 0.3);
    }
    .btn-outline {
        background: transparent;
        border: 1px solid #ddd;
        color: #555;
        padding: 7px 12px;
        border-radius: 6px;
        cursor: pointer;
        transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
        font-family: 'Sora', sans-serif;
        display: inline-flex;
        align-items: center;
        gap: 6px;
        font-size: 13px;
        font-weight: 500;
    }
        .btn-outline:hover {
            background: #f0f0f0;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            border-color: #bbb;
        }
    .loading {
        text-align: center;
        padding: 50px;
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }
        .loading i {
            font-size: 52px;
            color: var(--primary-color);
            margin-bottom: 20px;
            animation: spin 1s linear infinite;
        }
    .no-students {
        text-align: center;
        padding: 50px;
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }
        .no-students i {
            font-size: 52px;
            color: #ddd;
            margin-bottom: 20px;
        }
    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }
        100% {
            transform: rotate(360deg);
        }
    }
    /* Enhanced modal styles */
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.6);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10000;
        backdrop-filter: blur(5px);
        animation: fadeIn 0.3s ease;
    }
    .modal-content {
        background: white;
        border-radius: 12px;
        width: 90%;
        max-width: 800px;
        max-height: 90vh;
        overflow-y: auto;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.25);
        animation: modalSlideIn 0.3s ease-out;
        position: relative;
    }
    .modal-header {
        padding: 20px 25px;
        border-bottom: 1px solid #f0f0f0;
        display: flex;
        justify-content: space-between;
        align-items: center;
        background: linear-gradient(135deg, var(--primary-color), #ff9800);
        color: white;
        border-radius: 12px 12px 0 0;
        position: sticky;
        top: 0;
        z-index: 10;
    }
        .modal-header h3 {
            margin: 0;
            font-size: 22px;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 10px;
        }
    .modal-close {
        background: rgba(255, 255, 255, 0.2);
        border: none;
        color: white;
        font-size: 24px;
        cursor: pointer;
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        transition: all 0.3s;
    }
        .modal-close:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: rotate(90deg);
        }
    .modal-body {
        padding: 25px;
    }
    .form-row {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
        margin-bottom: 25px;
    }
    .form-group {
        margin-bottom: 20px;
        position: relative;
    }
        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--dark-color);
            font-size: 14px;
        }
    .form-control {
        width: 100%;
        padding: 14px 16px;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        font-family: 'Sora', sans-serif;
        font-size: 15px;
        transition: all 0.3s;
        box-sizing: border-box;
        background-color: #fafafa;
    }
        .form-control:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(245, 124, 0, 0.15);
            background-color: white;
        }
        .form-control:disabled {
            background-color: #f5f5f5;
            color: #999;
            cursor: not-allowed;
        }
    select.form-control {
        appearance: none;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%23666' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M6 9l6 6 6-6'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: left 16px center;
        background-size: 16px;
        padding-left: 45px;
    }
    .section-title {
        font-size: 18px;
        font-weight: 600;
        color: var(--primary-color);
        margin: 30px 0 20px;
        padding-bottom: 12px;
        border-bottom: 2px solid rgba(245, 124, 0, 0.2);
        position: relative;
    }
        .section-title:first-child {
            margin-top: 0;
        }
        .section-title::after {
            content: '';
            position: absolute;
            bottom: -2px;
            right: 0;
            width: 60px;
            height: 2px;
            background: var(--primary-color);
        }
    .form-check {
        display: flex;
        align-items: center;
        gap: 10px;
        margin: 25px 0;
        padding: 15px;
        background: #f9f9f9;
        border-radius: 8px;
        border-right: 4px solid var(--primary-color);
    }
        .form-check input[type="checkbox"] {
            width: 20px;
            height: 20px;
            accent-color: var(--primary-color);
        }
        .form-check label {
            margin: 0;
            font-weight: 500;
            color: var(--dark-color);
        }
    .modal-footer {
        padding: 20px 25px;
        border-top: 1px solid #f0f0f0;
        display: flex;
        justify-content: flex-end;
        gap: 15px;
        background: #fafafa;
        border-radius: 0 0 12px 12px;
        position: sticky;
        bottom: 0;
        z-index: 10;
    }
    .btn {
        padding: 12px 25px;
        border-radius: 8px;
        cursor: pointer;
        font-family: 'Sora', sans-serif;
        font-weight: 500;
        font-size: 15px;
        transition: all 0.3s;
        display: flex;
        align-items: center;
        gap: 8px;
        border: none;
    }
    .btn-primary {
        background: var(--primary-color);
        color: white;
        box-shadow: 0 4px 6px rgba(245, 124, 0, 0.2);
    }
        .btn-primary:hover {
            background: #e65100;
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(245, 124, 0, 0.3);
        }
    .btn-secondary {
        background: #6c757d;
        color: white;
    }
        .btn-secondary:hover {
            background: #5a6268;
            transform: translateY(-2px);
        }
    .required-field::after {
        content: '*';
        color: #e53935;
        margin-left: 4px;
    }
    .error-message {
        color: #e53935;
        font-size: 13px;
        margin-top: 5px;
        display: block;
    }
    .success-message {
        background: #e8f5e9;
        color: #2e7d32;
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 20px;
        border: 1px solid #c8e6c9;
        display: flex;
        align-items: center;
        gap: 10px;
    }
    .loading-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(255, 255, 255, 0.9);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
        border-radius: 12px;
        flex-direction: column;
        gap: 15px;
    }
    .spinner {
        width: 40px;
        height: 40px;
        border: 4px solid rgba(245, 124, 0, 0.3);
        border-top: 4px solid var(--primary-color);
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }
    .loading-text {
        font-weight: 500;
        color: var(--dark-color);
    }
    @@media (max-width: 992px) {
        .sidebar {
            width: 70px;
        }
        .sidebar-header h3, .sidebar-menu span {
            display: none;
        }
        .sidebar-menu a {
            justify-content: center;
            padding: 15px;
        }
        .sidebar-menu i {
            margin-left: 0;
        }
        .main-content {
            margin-left: 70px;
        }
        .students-grid {
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        }
    }
    @@media (max-width: 768px) {
        .students-dashboard {
            flex-direction: column;
        }
        .sidebar {
            width: 100%;
            height: auto;
            position: relative;
        }
        .sidebar-menu {
            display: flex;
            overflow-x: auto;
        }
            .sidebar-menu ul {
                display: flex;
            }
            .sidebar-menu li {
                margin-bottom: 0;
                margin-left: 5px;
            }
            .sidebar-menu a {
                border-radius: 5px;
                border-right: none !important;
                border-bottom: 3px solid transparent;
            }
                .sidebar-menu a:hover, .sidebar-menu a.active {
                    border-right: none;
                    border-bottom: 3px solid var(--primary-color);
                }
        .main-content {
            margin-left: 0;
            padding: 10px;
        }
        .top-bar {
            flex-direction: column;
            gap: 15px;
        }
        .students-grid {
            grid-template-columns: 1fr;
        }
        .student-footer {
            flex-direction: column;
            gap: 10px;
            align-items: stretch;
        }
        .modal-content {
            width: 95%;
            margin: 10px;
            max-height: 95vh;
        }
        .form-row {
            grid-template-columns: 1fr;
            gap: 15px;
        }
        .modal-footer {
            flex-direction: column;
        }
            .modal-footer button {
                width: 100%;
                justify-content: center;
            }
    }
    @@keyframes fadeIn {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }
    @@keyframes modalSlideIn {
        from {
            opacity: 0;
            transform: translateY(-30px) scale(0.95);
        }
        to {
            opacity: 1;
            transform: translateY(0) scale(1);
        }
    }
    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }
        100% {
            transform: rotate(360deg);
        }
    }
    @@keyframes pulse {
        0% {
            box-shadow: 0 0 0 0 rgba(245, 124, 0, 0.4);
        }
        70% {
            box-shadow: 0 0 0 10px rgba(245, 124, 0, 0);
        }
        100% {
            box-shadow: 0 0 0 0 rgba(245, 124, 0, 0);
        }
    }
    @@keyframes bounce {
        0%, 20%, 50%, 80%, 100% {
            transform: translateY(0);
        }
        40% {
            transform: translateY(-10px);
        }
        60% {
            transform: translateY(-5px);
        }
    }
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translate3d(0, 30px, 0);
        }
        to {
            opacity: 1;
            transform: translate3d(0, 0, 0);
        }
    }
    @@keyframes float {
        0% {
            transform: translateY(0px);
        }
        50% {
            transform: translateY(-20px);
        }
        100% {
            transform: translateY(0px);
        }
    }
    /* New Header Styles */
    .header-shortcuts {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 20px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
        color: white;
    }
    .shortcut-item {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        cursor: pointer;
        transition: transform 0.3s ease;
        flex: 1;
        padding: 10px;
    }
        .shortcut-item:hover {
            transform: translateY(-5px);
        }
    .shortcut-icon {
        font-size: 24px;
        margin-bottom: 8px;
        background: rgba(255, 255, 255, 0.2);
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    .shortcut-label {
        font-size: 13px;
        font-weight: 500;
    }
    @@media (max-width: 768px) {
        .header-shortcuts {
            flex-wrap: wrap;
        }
        .shortcut-item {
            flex: 0 0 33%;
            margin-bottom: 15px;
        }
    }
    
    /* Enhanced Search Box Styles */
    .search-box {
        display: flex;
        align-items: center;
        background: #f8f9fa;
        border: 1px solid #e0e0e0;
        border-radius: 30px;
        padding: 5px 5px 5px 15px;
        transition: all 0.3s ease;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
    }
        .search-box:focus-within {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(245, 124, 0, 0.15);
        }
        .search-box input {
            border: none;
            background: transparent;
            padding: 10px 15px;
            font-size: 15px;
            width: 300px;
            outline: none;
            font-family: 'Sora', sans-serif;
        }
        .search-box button {
            border-radius: 30px;
            height: 40px;
            padding: 0 20px;
            font-size: 14px;
            font-weight: 500;
            box-shadow: none;
        }
            .search-box button:hover {
                transform: translateY(0);
                box-shadow: none;
            }
    
    @@media (max-width: 768px) {
        .search-box {
            width: 100%;
        }
            .search-box input {
                width: 100%;
            }
    }
    
    /* Enhanced Modal Button Styles */
    .modal-footer .btn-secondary {
        background: #e9ecef;
        color: #495057;
        border: 1px solid #ced4da;
    }
        .modal-footer .btn-secondary:hover {
            background: #d3d3d3;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
    .modal-footer .btn-primary {
        background: linear-gradient(135deg, var(--primary-color), #ff9800);
        border: none;
    }
        .modal-footer .btn-primary:hover {
            background: linear-gradient(135deg, #e65100, #f57c00);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(245, 124, 0, 0.3);
        }
</style>


<div class="students-dashboard">
   <NavMenu2/>
    <!-- Main Content -->
    <div class="main-content">
        <!-- New Header with Shortcuts -->
        <div class="header-shortcuts">
            <div class="shortcut-item" @onclick="ShowAddStudentModal">
                <div class="shortcut-icon">
                    <i class="fas fa-user-plus"></i>
                </div>
                <div class="shortcut-label">إضافة طالب</div>
            </div>
            <div class="shortcut-item" @onclick="GoToAdmissions">
                <div class="shortcut-icon">
                    <i class="fas fa-file-alt"></i>
                </div>
                <div class="shortcut-label">طلبات القبول</div>
            </div>
            <div class="shortcut-item" @onclick="RefreshStudents">
                <div class="shortcut-icon">
                    <i class="fas fa-sync-alt"></i>
                </div>
                <div class="shortcut-label">تحديث</div>
            </div>
            <div class="shortcut-item" @onclick="() =>SearchStudents(ActiveSearch)">
                <div class="shortcut-icon">
                    <i class="fas fa-user-check"></i>
                </div>
                <div class="shortcut-label">النشطين</div>
            </div>
            <div class="shortcut-item" @onclick="() =>SearchStudents(NotActiveSearch)">
                <div class="shortcut-icon">
                    <i class="fas fa-user-times"></i>
                </div>
                <div class="shortcut-label">غير النشطين</div>
            </div>
        </div>

        <div class="top-bar">
            <div class="search-box">
                <input type="text" placeholder="بحث في الطلاب..." @bind="searchTerm" />
                <button class="mil-button mil-button-sm" @onclick="()=>SearchStudents(searchTerm)"><i class="fas fa-search"></i> بحث</button>
            </div>
            <AuthorizeView>
                <Authorized>
            <div class="user-profile">
                <div class="user-info">
                    <h4>@context.User.Identity!.Name</h4>
                           @*  <p>@context.User.Claims</p> *@
                </div>
                        <div class="logo">@context.User.Identity.Name</div>
                @* <img src="https://via.placeholder.com/40" alt="User" style="width: 40px; height: 40px; border-radius: 50%; margin-right: 10px;"> *@
            </div>
                </Authorized>
            </AuthorizeView>
        </div>
        <div class="students-header">
            <h2><i class="fas fa-users"></i> إدارة الطلاب</h2>
            <div class="students-nav">
                <button class="btn-outline" @onclick="RefreshStudents">
                    <i class="fas fa-sync"></i> تحديث
                </button>
                <button class="mil-button" @onclick="GoToAdmissions">
                    <i class="fas fa-user-plus"></i> طلبات القبول
                </button>
                <button class="mil-button" @onclick="ShowAddStudentModal">
                    <i class="fas fa-plus"></i> إضافة طالب جديد
                </button>
            </div>
        </div>
        <!-- Loading State -->
        @if (isLoading)
        {
            <div class="loading">
                <i class="fas fa-spinner"></i>
                <p>جارِ تحميل بيانات الطلاب...</p>
            </div>
        }
        else if (students == null || !students.Any())
        {
            <div class="no-students">
                <i class="fas fa-users"></i>
                <p>لا توجد بيانات طلاب حالياً.</p>
                <button class="mil-button" @onclick="ShowAddStudentModal"> إضافة طالب جديد</button>
            </div>
        }
        else
        {
            <!-- Student Cards Grid -->
            <div class="students-grid">
                @foreach (var student in students)
                {
                    <div class="student-card student-card-@(student.Status.ToString().ToLower())">
                        <div class="student-header">
                            <div class="student-avatar">
                                <img src="@(string.IsNullOrEmpty(student.ProfilePicture) ? "favicon.png" : student.ProfilePicture)" alt="طالب">
                            </div>
                            <h3>@student.FullName</h3>
                            <span class="student-id">@student.StudentId</span>
                        </div>
                        <div class="student-body">
                            <div class="student-info">
                                <p><i class="fas fa-graduation-cap"></i> @student.Department?.Name</p>
                                <p><i class="fas fa-envelope"></i> @student.Email</p>
                                <p><i class="fas fa-phone"></i> @student.Phone</p>
                                <p><i class="fas fa-calendar"></i> السنة @student.AcademicYear</p>
                            </div>
                            <div class="student-stats">
                                <div class="stat-item">
                                    <div class="number">@student.GPA.ToString("F1")</div>
                                    <div class="label">المعدل</div>
                                </div>
                                <div class="stat-item">
                                    <div class="number">@student.AttendancePercentage.ToString("F0")%</div>
                                    <div class="label">الحضور</div>
                                </div>
                            </div>
                        </div>
                        <div class="student-footer">
                            <span class="badge @(GetStatusBadgeClass(student.Status))">@GetStatusText(student.Status)</span>
                            <button class="btn-outline" @onclick="() => ShowStudentDetailsModal(student)"><i class="fas fa-eye"></i> تفاصيل</button>
                            <button class="btn-outline" @onclick="() => ShowEditStudentModal(student)"><i class="fas fa-edit"></i> تعديل</button>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

<!-- Student Add/Edit Modal -->
@if (showStudentModal)
{
    <div class="modal-overlay" @onclick="CloseStudentModal">
        <div class="modal-content" @onclick:stopPropagation="true">
            @if (isSubmitting)
            {
                <div class="loading-overlay">
                    <div class="spinner"></div>
                </div>
            }
            <div class="modal-header">
                <h3><i class="fas fa-user-plus"></i> @(isEditMode ? "تعديل بيانات الطالب" : "إضافة طالب جديد")</h3>
                <button class="modal-close" @onclick="CloseStudentModal">&times;</button>
            </div>
            <div class="modal-body">
                @if (!string.IsNullOrEmpty(successMessage))
                {
                    <div class="success-message">
                        @successMessage
                    </div>
                }
                <form @onsubmit:preventDefault="true">
                    <!-- Basic Information -->
                    <h4 class="section-title">المعلومات الأساسية</h4>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="firstName" class="required-field">الاسم الأول</label>
                            <input type="text" id="firstName" class="form-control" @bind="currentStudent.FirstName" required />
                        </div>
                        <div class="form-group">
                            <label for="lastName" class="required-field">اسم العائلة</label>
                            <input type="text" id="lastName" class="form-control" @bind="currentStudent.LastName" required />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="email" class="required-field">البريد الإلكتروني</label>
                            <input type="email" id="email" class="form-control" @bind="currentStudent.Email" required />
                        </div>
                        <div class="form-group">
                            <label for="phone" class="required-field">رقم الهاتف</label>
                            <input type="text" id="phone" class="form-control" @bind="currentStudent.Phone" required />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="studentId" class="required-field">رقم الطالب</label>
                            <input type="text" id="studentId" class="form-control" @bind="currentStudent.StudentId" required />
                        </div>
                        <div class="form-group">
                            <label for="departmentId" class="required-field">القسم</label>
                            @if (departmentsLoading)
                            {
                                <div class="loading">جارِ تحميل الأقسام...</div>
                            }
                            else
                            {
                                <select id="departmentId" class="form-control" @bind="currentStudent.DepartmentId" required>
                                    <option value="">اختر القسم</option>
                                    @foreach (var dept in departments)
                                    {
                                        <option value="@dept.Id">@dept.Name</option>
                                    }
                                </select>
                            }
                        </div>
                        <div class="form-group">
                            <label for="nationalityId" class="required-field">الجنسية</label>
                            @if (departmentsLoading)
                            {
                                <div class="loading">جارِ تحميل الجنسيات...</div>
                            }
                            else
                            {
                                <select id="nationalityId" class="form-control" @bind="currentStudent.NationalityId" required>
                                    <option value="">اختر الجنسية</option>
                                    @foreach (var dept in nationalities)
                                    {
                                        <option value="@dept.Id">@dept.CountryName</option>
                                    }
                                </select>
                            }
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="academicYear">السنة الدراسية</label>
                            <input type="text" id="academicYear" class="form-control" @bind="currentStudent.AcademicYear" />
                        </div>
                        <div class="form-group">
                            <label for="registrationDate">تاريخ التسجيل</label>
                            <input type="date" id="registrationDate" class="form-control" @bind="currentStudent.RegistrationDate" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="status" class="required-field">الحالة</label>
                            <select id="status" class="form-control" @bind="currentStudent.Status" required>
                                <option value="@StudentStatus.New">جديد</option>
                                <option value="@StudentStatus.Active">نشط</option>
                                <option value="@StudentStatus.Inactive">غير نشط</option>
                                <option value="@StudentStatus.Suspended">موقوف دراسياً</option>
                                <option value="@StudentStatus.Warrning">تحذير أكاديمي</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="gpa">المعدل التراكمي</label>
                            <input type="number" step="0.01" id="gpa" class="form-control" @bind="currentStudent.GPA" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="attendancePercentage">نسبة الحضور (%)</label>
                            <input type="number" step="0.01" id="attendancePercentage" class="form-control" @bind="currentStudent.AttendancePercentage" />
                        </div>
                        <div class="form-group">
                            <label for="accountBalance">رصيد الحساب</label>
                            <input type="number" step="0.01" id="accountBalance" class="form-control" @bind="currentStudent.AccountBalance" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="registraionCompleted">اكتمل التسجيل</label>
                            <select id="registraionCompleted" class="form-control" @bind="currentStudent.RegistraionCompleted">
                                <option value="true">نعم</option>
                                <option value="false">لا</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="homeAddress" class="required-field">العنوان</label>
                            <input type="text" id="homeAddress" class="form-control" @bind="currentStudent.HomeAddress" required />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="birthOfDate" class="required-field">تاريخ الميلاد</label>
                            <input type="date" id="birthOfDate" class="form-control" @bind="currentStudent.BirthOfDate" required />
                        </div>
                        <div class="form-group">
                            <label for="sexual" class="required-field">الجنس</label>
                            <select id="sexual" class="form-control" @bind="currentStudent.Sexual" required>
                                <option value="true">ذكر</option>
                                <option value="false">أنثى</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="civilstatusIDNumberAndNationalCard" class="required-field">رقم الهوية المدنية</label>
                            <input type="text" id="civilstatusIDNumberAndNationalCard" class="form-control" @bind="currentStudent.CivilstatusIDNumberAndNationalCard" required />
                        </div>
                        <div class="form-group">
                            <label for="userNameOnSite">اسم المستخدم على الموقع</label>
                            <input type="text" id="userNameOnSite" class="form-control" @bind="currentStudent.UserNameOnSite" />
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="mil-button" @onclick="CloseStudentModal">
                    <i class="fas fa-times"></i> إلغاء
                </button>
                <button class="mil-button" @onclick="SaveStudent">
                    <i class="fas @(isEditMode ? "fa-save" : "fa-plus")"></i> @(isEditMode ? "حفظ التغييرات" : "إضافة الطالب")
                </button>
            </div>
        </div>
    </div>
}

<!-- Student Details Modal -->
@if (showDetailsModal && selectedStudent != null)
{
    <div class="modal-overlay" @onclick="CloseDetailsModal">
        <div class="modal-content" @onclick:stopPropagation="true">
            <div class="modal-header">
                <h3><i class="fas fa-user"></i> تفاصيل الطالب</h3>
                <button class="modal-close" @onclick="CloseDetailsModal">&times;</button>
            </div>
            <div class="modal-body">
                <div style="display: flex; flex-direction: column; align-items: center; margin-bottom: 20px;">
                    <div class="student-avatar" style="width: 100px; height: 100px;">
                        <img src="@(string.IsNullOrEmpty(selectedStudent.ProfilePicture) ? "https://via.placeholder.com/100" : selectedStudent.ProfilePicture)" alt="طالب">
                    </div>
                    <h3 style="margin: 15px 0 5px;">@selectedStudent.FullName</h3>
                    <span class="student-id">@selectedStudent.StudentId</span>
                    <span class="badge @(GetStatusBadgeClass(selectedStudent.Status))" style="margin-top: 10px;">@GetStatusText(selectedStudent.Status)</span>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>البريد الإلكتروني:</label>
                        <div class="form-control">@selectedStudent.Email</div>
                    </div>
                    <div class="form-group">
                        <label>رقم الهاتف:</label>
                        <div class="form-control">@selectedStudent.Phone</div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>القسم:</label>
                        <div class="form-control">@selectedStudent.Department?.Name</div>
                    </div>
                    <div class="form-group">
                        <label>السنة الدراسية:</label>
                        <div class="form-control">@selectedStudent.AcademicYear</div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>المعدل التراكمي:</label>
                        <div class="form-control">@selectedStudent.GPA.ToString("F2")</div>
                    </div>
                    <div class="form-group">
                        <label>نسبة الحضور:</label>
                        <div class="form-control">@selectedStudent.AttendancePercentage.ToString("F0")%</div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>تاريخ التسجيل:</label>
                        <div class="form-control">@selectedStudent.RegistrationDate.ToString("yyyy/MM/dd")</div>
                    </div>
                    <div class="form-group">
                        <label>تاريخ الميلاد:</label>
                        <div class="form-control">@selectedStudent.BirthOfDate.ToString("yyyy/MM/dd")</div>
                    </div>
                </div>
                <h4 class="section-title">معلومات السكن</h4>
                <div class="form-row">
                    <div class="form-group">
                        <label>العنوان:</label>
                        <div class="form-control">@selectedStudent.HomeAddress</div>
                    </div>
                    <div class="form-group">
                        <label>رقم المنزل:</label>
                        <div class="form-control">@selectedStudent.HomeNumber</div>
                    </div>
                </div>
                <h4 class="section-title">معلومات شخصية</h4>
                <div class="form-row">
                    <div class="form-group">
                        <label>الديانة:</label>
                        <div class="form-control">@selectedStudent.Religion</div>
                    </div>
                    <div class="form-group">
                        <label>الجنسية:</label>
                        <div class="form-control">@selectedStudent.NationalityName</div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>رقم الهوية:</label>
                        <div class="form-control">@selectedStudent.CivilstatusIDNumberAndNationalCard</div>
                    </div>
                    <div class="form-group">
                        <label>الانتماء السياسي:</label>
                        <div class="form-control">@selectedStudent.PoliticalNationalism</div>
                    </div>
                </div>
                <h4 class="section-title">معلومات المدرسة</h4>
                <div class="form-row">
                    <div class="form-group">
                        <label>اسم المدرسة:</label>
                        <div class="form-control">@selectedStudent.SchoolName</div>
                    </div>
                    <div class="form-group">
                        <label>التخصص:</label>
                        <div class="form-control">@selectedStudent.Branch</div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label>تاريخ التخرج:</label>
                        <div class="form-control">@selectedStudent.DateOfSchoolGraduate.ToString("yyyy/MM/dd")</div>
                    </div>
                    <div class="form-group">
                        <label>المعدل التراكمي:</label>
                        <div class="form-control">@selectedStudent.GPA</div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn-secondary" @onclick="CloseDetailsModal">
                    <i class="fas fa-times"></i> إغلاق
                </button>
                <button class="btn-primary" @onclick="() => ShowEditStudentModal(selectedStudent)">
                    <i class="fas fa-edit"></i> تعديل
                </button>
            </div>
        </div>
    </div>
}

@code {
    private List<StudentDto> students = new();
    private string searchTerm = "";
    private bool isLoading = true;
    // Modal variables
    private bool showStudentModal = false;
    private bool showDetailsModal = false;
    private bool isSubmitting = false;
    private bool isEditMode = false;
    private string successMessage = "";
    private List<DepartmentDto> departments = new();
    private List<NationalityDto> nationalities = new();
    private bool departmentsLoading = false;
    private bool nationalitiesLoading = false;
    public string ActiveSearch { get; set; } = "active";
    public string NotActiveSearch { get; set; } = "notactive";
    // Student objects
    private StudentDto currentStudent = new StudentDto();
    private StudentDto selectedStudent = new StudentDto();
    private StudentDto newStudent = new StudentDto
        {
            BirthOfDate = DateTime.Now.AddYears(-18),
            DateOfSchoolGraduate = DateTime.Now,
            RegistrationDate = DateTime.Now,
            CreatedAt = DateTime.Now,
            Status = StudentStatus.New,
            GPA = 0.0,
            AttendancePercentage = 0,
            AccountBalance = 0,
            RegistraionCompleted = false
        };
    protected override async Task OnInitializedAsync()
    {
        await LoadStudents();
        await LoadDepartments();
        await LoadNationalitiess();
    }
    private async Task LoadDepartments()
    {
        try
        {
            departmentsLoading = true;
            StateHasChanged();
            var result = await DepartmentService.GetAllDepartmentsAsync();
            departments = result ?? new List<DepartmentDto>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading departments: {ex.Message}");
            departments = new List<DepartmentDto>();
        }
        finally
        {
            departmentsLoading = false;
            StateHasChanged();
        }
    }
    private async Task LoadNationalitiess()
    {
        try
        {
            nationalitiesLoading = true;
            StateHasChanged();
            var result = await NationalityService.GetAllNationalitiesAsync();
            nationalities = result ?? new List<NationalityDto>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading departments: {ex.Message}");
            nationalities = new List<NationalityDto>();
        }
        finally
        {
            nationalitiesLoading = false;
            StateHasChanged();
        }
    }
    private async Task LoadStudents()
    {
        try
        {
            isLoading = true;
            StateHasChanged();
            var result = await StudentService.GetAllStudentsAsync();
            students = result ?? new List<StudentDto>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading students: {ex.Message}");
            students = new List<StudentDto>();
            ToastService.ShowError("حدث خطأ أثناء تحميل بيانات الطلاب", "خطأ");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
    private async Task SearchStudents(string term)
    {
        try
        {
            isLoading = true;
            StateHasChanged();
            if (!string.IsNullOrWhiteSpace(term))
            {
                var result = await StudentService.GetStudentsAsync(term);
                students = result ?? new List<StudentDto>();
            }
            else
            {
                await LoadStudents();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error searching students: {ex.Message}");
            students = new List<StudentDto>();
            ToastService.ShowError("حدث خطأ أثناء البحث في بيانات الطلاب", "خطأ");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
    private async Task RefreshStudents()
    {
        searchTerm = "";
        await LoadStudents();
    }
    private string GetStatusBadgeClass(StudentStatus status)
    {
        return status switch
        {
            StudentStatus.New or StudentStatus.Active => "badge-success",
            StudentStatus.Inactive => "badge-warning",
            StudentStatus.Suspended => "badge-danger",
            _ => "badge-primary"
        };
    }
    private string GetStatusText(StudentStatus status)
    {
        return status switch
        {
            StudentStatus.Active => "نشط",
            StudentStatus.Inactive => "غير نشط",
            StudentStatus.Suspended => "موقوف دراسياً",
            StudentStatus.New => "جديد",
            StudentStatus.Warrning => "تحذير أكاديمي",
            _ => "غير محدد"
        };
    }
    // Unified modal functions for add/edit
    private void ShowAddStudentModal()
    {
        isEditMode = false;
        currentStudent = new StudentDto
            {
                BirthOfDate = DateTime.Now.AddYears(-18),
                DateOfSchoolGraduate = DateTime.Now,
                RegistrationDate = DateTime.Now,
                CreatedAt = DateTime.Now,
                Status = StudentStatus.New,
                GPA = 0.0,
                AttendancePercentage = 0,
                AccountBalance = 0,
                RegistraionCompleted = false
            };
        showStudentModal = true;
        successMessage = "";
    }
    private void ShowEditStudentModal(StudentDto student)
    {
        isEditMode = true;
        currentStudent = new StudentDto
            {
                Id = student.Id,
                FirstName = student.FirstName,
                LastName = student.LastName,
                FullName = student.FullName,
                Email = student.Email,
                Phone = student.Phone,
                StudentId = student.StudentId,
                DepartmentId = student.DepartmentId,
                BirthOfDate = student.BirthOfDate,
                Sexual = student.Sexual,
                HomeAddress = student.HomeAddress,
                HomeNumber = student.HomeNumber,
                Religion = student.Religion,
                NationalityName = student.NationalityName,
                NationalityId = student.NationalityId,
                PoliticalNationalism = student.PoliticalNationalism,
                CivilstatusIDNumberAndNationalCard = student.CivilstatusIDNumberAndNationalCard,
                SchoolName = student.SchoolName,
                Branch = student.Branch,
                DateOfSchoolGraduate = student.DateOfSchoolGraduate,
                GPA = student.GPA,
                AcademicYear = student.AcademicYear,
                Status = student.Status,
                RegistrationDate = student.RegistrationDate,
                CreatedAt = student.CreatedAt,
                ProfilePicture = student.ProfilePicture,
                AttendancePercentage = student.AttendancePercentage,
                AccountBalance = student.AccountBalance,
                RegistraionCompleted = student.RegistraionCompleted,
                TunnelId = 1
            };
        showStudentModal = true;
        successMessage = "";
    }
    private void CloseStudentModal()
    {
        showStudentModal = false;
        currentStudent = new StudentDto();
        successMessage = "";
    }
    private async Task SaveStudent()
    {
        try
        {
            isSubmitting = true;
            StateHasChanged();
            currentStudent.TunnelId = 1;
            // Set calculated values
            currentStudent.FullName = $"{currentStudent.FirstName} {currentStudent.LastName}";
            if (isEditMode)
            {
                await StudentService.UpdateStudentAsync(currentStudent.Id, currentStudent);
                ToastService.ShowSuccess("تم تحديث بيانات الطالب بنجاح", "نجاح");
                await LoadStudents();
                CloseStudentModal();
            }
            else
            {
                // Add new student
                currentStudent.RegistrationDate = DateTime.Now;
                currentStudent.CreatedAt = DateTime.Now;
                var result = await StudentService.CreateStudentAsync(currentStudent);
                if (result != null)
                {
                    ToastService.ShowSuccess("تم إضافة الطالب بنجاح", "نجاح");
                    await LoadStudents(); // Reload student list
                    CloseStudentModal();
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error saving student: {ex.Message}");
            ToastService.ShowError("حدث خطأ أثناء حفظ بيانات الطالب", "خطأ");
        }
        finally
        {
            isSubmitting = false;
            StateHasChanged();
        }
    }
    // Details modal functions
    private void ShowStudentDetailsModal(StudentDto student)
    {
        selectedStudent = student;
        showDetailsModal = true;
    }
    private void CloseDetailsModal()
    {
        showDetailsModal = false;
        selectedStudent = new StudentDto();
    }
    // Navigation to admissions page
    private void GoToAdmissions()
    {
        Navigation.NavigateTo("/apply");
    }
    private void ViewStudentCourses(int studentId)
    {
        // Navigate to student details page
        Navigation.NavigateTo($"/student/{studentId}/registrations");
    }
}
