@page "/financial-statements"

@attribute [Authorize(Roles = "Admin,Accountant")]
@inject IFinancialStatementsService FinancialStatementsService
@inject IToastService ToastService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer



<style>
    :root {
        --primary-color: #f57c00;
        --dark-color: #121820;
        --light-color: #ffffff;
        --gray-color: #f5f5f5;
        --text-color: #333333;
        --success-color: #4caf50;
        --error-color: #f44336;
        --warning-color: #ff9800;
        --info-color: #2196f3;
        --financial-color: #9c27b0;
        --revenue-color: #4CAF50;
        --expense-color: #F44336;
        --asset-color: #2196F3;
        --liability-color: #FF9800;
    }

    body {
        font-family: 'Sora', sans-serif;
        color: var(--text-color);
        background-color: #f9f9f9;
        margin: 0;
        padding: 0;
    }

    .faculty-dashboard {
        display: flex;
        min-height: 100vh;
    }

    .sidebar {
        width: 280px;
        background: var(--dark-color);
        color: white;
        padding: 20px 0;
        transition: all 0.3s ease;
        position: fixed;
        height: 100vh;
        overflow-y: auto;
        z-index: 1000;
    }

    .main-content {
        flex: 1;
        padding: 20px;
        background: var(--gray-color);
        margin-right: 280px;
        min-height: 100vh;
    }

    .top-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 20px;
        background: white;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        margin-bottom: 20px;
    }

    .btn {
        padding: 8px 15px;
        border-radius: 5px;
        border: none;
        cursor: pointer;
        font-weight: 500;
        transition: all 0.3s;
    }

    .btn-primary {
        background: var(--primary-color);
        color: white;
    }

    .btn-success {
        background: var(--success-color);
        color: white;
    }

    .btn-info {
        background: var(--info-color);
        color: white;
    }

    .btn-warning {
        background: var(--warning-color);
        color: white;
    }

    .btn-outline {
        background: transparent;
        border: 1px solid #ddd;
        color: #777;
    }

    .dashboard-cards {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .card {
        background: white;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .stat-card {
        display: flex;
        align-items: center;
    }

    .stat-icon {
        width: 60px;
        height: 60px;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-left: 15px;
    }

        .stat-icon.income {
            background: rgba(76, 175, 80, 0.1);
        }

        .stat-icon.expense {
            background: rgba(244, 67, 54, 0.1);
        }

        .stat-icon.asset {
            background: rgba(33, 150, 243, 0.1);
        }

        .stat-icon.liability {
            background: rgba(255, 152, 0, 0.1);
        }

        .stat-icon.equity {
            background: rgba(156, 39, 176, 0.1);
        }

        .stat-icon.cash {
            background: rgba(0, 150, 136, 0.1);
        }

        .stat-icon i {
            font-size: 24px;
        }

        .stat-icon.income i {
            color: var(--revenue-color);
        }

        .stat-icon.expense i {
            color: var(--expense-color);
        }

        .stat-icon.asset i {
            color: var(--asset-color);
        }

        .stat-icon.liability i {
            color: var(--liability-color);
        }

        .stat-icon.equity i {
            color: #9c27b0;
        }

        .stat-icon.cash i {
            color: #009688;
        }

    .stat-info h4 {
        margin: 0;
        font-size: 24px;
        font-weight: 600;
    }

    .stat-info p {
        margin: 5px 0 0;
        color: #777;
    }

    .card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
        padding-bottom: 10px;
        border-bottom: 1px solid #eee;
    }

        .card-header h3 {
            margin: 0;
            font-size: 18px;
        }

    .table {
        width: 100%;
        border-collapse: collapse;
    }

        .table th, .table td {
            padding: 12px 15px;
            text-align: right;
        }

        .table th {
            background: #f9f9f9;
            font-weight: 600;
        }

        .table tr {
            border-bottom: 1px solid #eee;
        }

            .table tr:last-child {
                border-bottom: none;
            }

    .amount-positive {
        color: var(--revenue-color);
        font-weight: 600;
    }

    .amount-negative {
        color: var(--expense-color);
        font-weight: 600;
    }

    .balance-positive {
        color: var(--success-color);
        font-weight: 600;
    }

    .balance-negative {
        color: var(--error-color);
        font-weight: 600;
    }

    .badge {
        padding: 5px 10px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 500;
    }

    .badge-success {
        background: rgba(76, 175, 80, 0.1);
        color: #4caf50;
    }

    .badge-warning {
        background: rgba(255, 152, 0, 0.1);
        color: #ff9800;
    }

    .badge-error {
        background: rgba(244, 67, 54, 0.1);
        color: #f44336;
    }

    .filter-section {
        background: white;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .filter-row {
        display: flex;
        gap: 15px;
        align-items: end;
        flex-wrap: wrap;
    }

    .filter-group {
        flex: 1;
        min-width: 200px;
    }

        .filter-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
        }

        .filter-group input, .filter-group select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-family: 'Sora', sans-serif;
        }

    .filter-actions {
        display: flex;
        gap: 10px;
    }

    .loading {
        text-align: center;
        padding: 50px;
        font-size: 18px;
        color: #777;
    }

    .error {
        background: #ffebee;
        color: #c62828;
        padding: 15px;
        border-radius: 5px;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 10px;
    }

        .error i {
            font-size: 20px;
        }

    .export-buttons {
        display: flex;
        gap: 10px;
        margin-top: 15px;
        flex-wrap: wrap;
    }

    .total-row {
        font-weight: bold;
        background: #f0f0f0;
    }

    .section-title {
        background: #e8f5e9;
        padding: 10px 15px;
        border-radius: 5px;
        margin: 15px 0;
        font-weight: 600;
        color: #2e7d32;
    }

    .statement-section {
        margin-bottom: 30px;
        background: white;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .tabs {
        display: flex;
        border-bottom: 1px solid #ddd;
        margin-bottom: 20px;
    }

    .tab {
        padding: 10px 20px;
        cursor: pointer;
        border-bottom: 3px solid transparent;
    }

        .tab.active {
            border-bottom: 3px solid var(--primary-color);
            color: var(--primary-color);
            font-weight: 600;
        }

    .tab-content {
        display: none;
    }

        .tab-content.active {
            display: block;
        }

    @@media (max-width: 768px) {
        .faculty-dashboard {
            flex-direction: column;
        }

        .sidebar {
            width: 100%;
            height: auto;
            position: relative;
        }

        .main-content {
            margin-right: 0;
            padding: 10px;
        }

        .dashboard-cards {
            grid-template-columns: 1fr;
        }

        .top-bar {
            flex-direction: column;
            gap: 15px;
        }

        .filter-row {
            flex-direction: column;
            align-items: stretch;
        }

        .export-buttons {
            flex-direction: column;
        }

        .tabs {
            flex-direction: column;
        }
    }

    .loading-spinner {
        display: inline-block;
        width: 20px;
        height: 20px;
        border: 3px solid rgba(255,255,255,.3);
        border-radius: 50%;
        border-top-color: #fff;
        animation: spin 1s ease-in-out infinite;
    }

    @@keyframes spin {
        to {
            transform: rotate(360deg);
        }
    }
</style>


<div class="faculty-dashboard">
    <!-- الشريط الجانبي -->
    <NavMenu2 />

    <!-- المحتوى الرئيسي -->
    <div class="main-content">
        @if (isLoading)
        {
            <div class="loading">
                <i class="fas fa-spinner fa-spin"></i> جاري توليد الحسابات الختامية...
            </div>
        }
        else if (hasError)
        {
            <div class="error">
                <i class="fas fa-exclamation-triangle"></i>
                <div>
                    <strong>خطأ!</strong>
                    <p>حدث خطأ أثناء توليد الحسابات الختامية. يرجى المحاولة مرة أخرى.</p>
                    <button class="btn btn-primary" @onclick="GenerateAllStatements">إعادة المحاولة</button>
                </div>
            </div>
        }
        else
        {
            <!-- الشريط العلوي -->
            <div class="top-bar">
                <h2><i class="fas fa-file-invoice-dollar"></i> الحسابات الختامية</h2>
                <div class="user-profile">
                    <div class="user-info">
                        <h4>القوائم المالية</h4>
                        <p>لفترة من @summary.FromDate.ToString("yyyy/MM/dd") إلى @summary.ToDate.ToString("yyyy/MM/dd")</p>
                    </div>
                </div>
            </div>

            <!-- بطاقات الإحصائيات -->
            <div class="dashboard-cards">
                <div class="card stat-card">
                    <div class="stat-icon income">
                        <i class="fas fa-arrow-up"></i>
                    </div>
                    <div class="stat-info">
                        <h4 class="amount-positive">@summary.Revenue.ToString("C")</h4>
                        <p>إجمالي الإيرادات</p>
                    </div>
                </div>

                <div class="card stat-card">
                    <div class="stat-icon expense">
                        <i class="fas fa-arrow-down"></i>
                    </div>
                    <div class="stat-info">
                        <h4 class="amount-negative">@summary.Expenses.ToString("C")</h4>
                        <p>إجمالي المصروفات</p>
                    </div>
                </div>

                <div class="card stat-card">
                    <div class="stat-icon income">
                        <i class="fas fa-wallet"></i>
                    </div>
                    <div class="stat-info">
                        <h4 class="@(summary.IsProfitable ? "balance-positive" : "balance-negative")">
                            @summary.NetIncome.ToString("C")
                        </h4>
                        <p>صافي الدخل</p>
                    </div>
                </div>

                <div class="card stat-card">
                    <div class="stat-icon asset">
                        <i class="fas fa-building"></i>
                    </div>
                    <div class="stat-info">
                        <h4 class="balance-positive">@summary.TotalAssets.ToString("C")</h4>
                        <p>إجمالي الأصول</p>
                    </div>
                </div>

                <div class="card stat-card">
                    <div class="stat-icon liability">
                        <i class="fas fa-credit-card"></i>
                    </div>
                    <div class="stat-info">
                        <h4 class="balance-negative">@summary.TotalLiabilities.ToString("C")</h4>
                        <p>إجمالي الخصوم</p>
                    </div>
                </div>

                <div class="card stat-card">
                    <div class="stat-icon equity">
                        <i class="fas fa-chart-line"></i>
                    </div>
                    <div class="stat-info">
                        <h4 class="balance-positive">@summary.TotalEquity.ToString("C")</h4>
                        <p>حقوق الملكية</p>
                    </div>
                </div>
            </div>

            <!-- قسم الفلترة -->
            <div class="filter-section">
                <h3><i class="fas fa-filter"></i> توليد القوائم المالية</h3>
                <div class="filter-row">
                    <div class="filter-group">
                        <label for="fromDate">من تاريخ *</label>
                        <input type="date" id="fromDate" @bind="fromDate" required />
                    </div>
                    <div class="filter-group">
                        <label for="toDate">إلى تاريخ *</label>
                        <input type="date" id="toDate" @bind="toDate" required />
                    </div>
                    <div class="filter-actions">
                        <button class="btn btn-primary" @onclick="GenerateAllStatements">
                            <i class="fas fa-sync"></i> توليد القوائم
                        </button>
                        <button class="btn btn-outline" @onclick="SetDefaultDates">
                            <i class="fas fa-calendar"></i> الفترات الافتراضية
                        </button>
                    </div>
                </div>

                <div class="export-buttons">
                    <button class="btn btn-success" @onclick="ExportToExcel">
                        <i class="fas fa-file-excel"></i> تصدير إلى Excel
                    </button>
                    <button class="btn btn-info" @onclick="ExportToPdf">
                        <i class="fas fa-file-pdf"></i> تصدير إلى PDF
                    </button>
                    <button class="btn btn-warning" @onclick="PrintStatements">
                        <i class="fas fa-print"></i> طباعة القوائم
                    </button>
                </div>
            </div>

            <!-- علامات التبويب -->
            <div class="tabs">
                <div class="tab @(activeTab == "income" ? "active" : "")" @onclick="()=> SwitchTab(IncomeString)">
                    <i class="fas fa-chart-line"></i> قائمة الدخل
                </div>
                <div class="tab @(activeTab == "balance" ? "active" : "")" @onclick="()=> SwitchTab(BalanceString)">
                    <i class="fas fa-balance-scale"></i> الميزانية العمومية
                </div>
                <div class="tab @(activeTab == "cash" ? "active" : "")" @onclick="()=> SwitchTab(CashString)">
                    <i class="fas fa-money-bill-wave"></i> التدفق النقدي
                </div>
                <div class="tab @(activeTab == "equity" ? "active" : "")" @onclick="()=> SwitchTab(EquityString)">
                    <i class="fas fa-share-alt"></i> حقوق الملكية
                </div>
            </div>

            <!-- قائمة الدخل -->
            <div class="tab-content @(activeTab == "income" ? "active" : "")">
                <div class="statement-section">
                    <div class="card-header">
                        <h3><i class="fas fa-chart-line"></i> قائمة الدخل</h3>
                        <span class="badge @(incomeStatement.IsProfit ? "badge-success" : "badge-error")">
                            @(incomeStatement.IsProfit ? "ربح" : "خسارة")
                        </span>
                    </div>
                    <div class="section-title">الإيرادات</div>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>رمز الحساب</th>
                                <th>اسم الحساب</th>
                                <th class="text-center">المبلغ</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in incomeStatement.RevenueItems)
                            {
                                <tr>
                                    <td>@item.AccountCode</td>
                                    <td>@item.AccountName</td>
                                    <td class="text-center amount-positive">@item.Amount.ToString("C")</td>
                                </tr>
                            }
                            <tr class="total-row">
                                <td colspan="2"><strong>إجمالي الإيرادات</strong></td>
                                <td class="text-center amount-positive"><strong>@incomeStatement.TotalRevenue.ToString("C")</strong></td>
                            </tr>
                        </tbody>
                    </table>

                    <div class="section-title">المصروفات</div>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>رمز الحساب</th>
                                <th>اسم الحساب</th>
                                <th class="text-center">المبلغ</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in incomeStatement.ExpenseItems)
                            {
                                <tr>
                                    <td>@item.AccountCode</td>
                                    <td>@item.AccountName</td>
                                    <td class="text-center amount-negative">@item.Amount.ToString("C")</td>
                                </tr>
                            }
                            <tr class="total-row">
                                <td colspan="2"><strong>إجمالي المصروفات</strong></td>
                                <td class="text-center amount-negative"><strong>@incomeStatement.TotalExpenses.ToString("C")</strong></td>
                            </tr>
                        </tbody>
                    </table>

                    <div class="card" style="margin-top: 20px;">
                        <div class="card-body">
                            <div style="display: flex; justify-content: space-between; align-items: center;">
                                <h4><strong>صافي الدخل</strong></h4>
                                <h4 class="@(incomeStatement.IsProfit ? "balance-positive" : "balance-negative")">
                                    <strong>@incomeStatement.NetIncome.ToString("C")</strong>
                                </h4>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- الميزانية العمومية -->
            <div class="tab-content @(activeTab == "balance" ? "active" : "")">
                <div class="statement-section">
                    <div class="card-header">
                        <h3><i class="fas fa-balance-scale"></i> الميزانية العمومية</h3>
                        <span class="badge @(balanceSheet.IsBalanced ? "badge-success" : "badge-error")">
                            @(balanceSheet.IsBalanced ? "متوازنة" : "غير متوازنة")
                        </span>
                    </div>
                    <div class="section-title">الأصول</div>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>رمز الحساب</th>
                                <th>اسم الحساب</th>
                                <th class="text-center">المبلغ</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in balanceSheet.AssetItems)
                            {
                                <tr>
                                    <td>@item.AccountCode</td>
                                    <td>@item.AccountName</td>
                                    <td class="text-center balance-positive">@item.Amount.ToString("C")</td>
                                </tr>
                            }
                            <tr class="total-row">
                                <td colspan="2"><strong>إجمالي الأصول</strong></td>
                                <td class="text-center balance-positive"><strong>@balanceSheet.TotalAssets.ToString("C")</strong></td>
                            </tr>
                        </tbody>
                    </table>

                    <div class="section-title">الخصوم وحقوق الملكية</div>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>رمز الحساب</th>
                                <th>اسم الحساب</th>
                                <th class="text-center">المبلغ</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in balanceSheet.LiabilityItems)
                            {
                                <tr>
                                    <td>@item.AccountCode</td>
                                    <td>@item.AccountName</td>
                                    <td class="text-center balance-negative">@item.Amount.ToString("C")</td>
                                </tr>
                            }
                            @foreach (var item in balanceSheet.EquityItems)
                            {
                                <tr>
                                    <td>@item.AccountCode</td>
                                    <td>@item.AccountName</td>
                                    <td class="text-center balance-positive">@item.Amount.ToString("C")</td>
                                </tr>
                            }
                            <tr class="total-row">
                                <td colspan="2"><strong>إجمالي الخصوم وحقوق الملكية</strong></td>
                                <td class="text-center"><strong>@balanceSheet.TotalLiabilitiesAndEquity.ToString("C")</strong></td>
                            </tr>
                        </tbody>
                    </table>

                    <div class="card" style="margin-top: 20px;">
                        <div class="card-body">
                            <div style="display: flex; justify-content: space-between; align-items: center;">
                                <h4><strong>الفرق</strong></h4>
                                <h4 class="@(balanceSheet.IsBalanced ? "balance-positive" : "balance-negative")">
                                    <strong>@Math.Abs(balanceSheet.TotalAssets - balanceSheet.TotalLiabilitiesAndEquity).ToString("C")</strong>
                                </h4>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- التدفق النقدي -->
            <div class="tab-content @(activeTab == "cash" ? "active" : "")">
                <div class="statement-section">
                    <div class="card-header">
                        <h3><i class="fas fa-money-bill-wave"></i> بيان التدفق النقدي</h3>
                    </div>
                    <div class="section-title">الأنشطة التشغيلية</div>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>رمز الحساب</th>
                                <th>اسم الحساب</th>
                                <th class="text-center">المبلغ</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in cashFlowStatement.OperatingItems)
                            {
                                <tr>
                                    <td>@item.AccountCode</td>
                                    <td>@item.AccountName</td>
                                    <td class="text-center">@item.Amount.ToString("C")</td>
                                </tr>
                            }
                            <tr class="total-row">
                                <td colspan="2"><strong>صافي التدفق التشغيلي</strong></td>
                                <td class="text-center balance-positive"><strong>@cashFlowStatement.NetOperatingCashFlow.ToString("C")</strong></td>
                            </tr>
                        </tbody>
                    </table>

                    <div class="section-title">الأنشطة الاستثمارية</div>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>رمز الحساب</th>
                                <th>اسم الحساب</th>
                                <th class="text-center">المبلغ</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in cashFlowStatement.InvestingItems)
                            {
                                <tr>
                                    <td>@item.AccountCode</td>
                                    <td>@item.AccountName</td>
                                    <td class="text-center">@item.Amount.ToString("C")</td>
                                </tr>
                            }
                            <tr class="total-row">
                                <td colspan="2"><strong>صافي التدفق الاستثماري</strong></td>
                                <td class="text-center balance-negative"><strong>@cashFlowStatement.NetInvestingCashFlow.ToString("C")</strong></td>
                            </tr>
                        </tbody>
                    </table>

                    <div class="section-title">الأنشطة التمويلية</div>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>رمز الحساب</th>
                                <th>اسم الحساب</th>
                                <th class="text-center">المبلغ</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in cashFlowStatement.FinancingItems)
                            {
                                <tr>
                                    <td>@item.AccountCode</td>
                                    <td>@item.AccountName</td>
                                    <td class="text-center">@item.Amount.ToString("C")</td>
                                </tr>
                            }
                            <tr class="total-row">
                                <td colspan="2"><strong>صافي التدفق التمويلي</strong></td>
                                <td class="text-center balance-positive"><strong>@cashFlowStatement.NetFinancingCashFlow.ToString("C")</strong></td>
                            </tr>
                        </tbody>
                    </table>

                    <div class="card" style="margin-top: 20px;">
                        <div class="card-body">
                            <div style="display: flex; justify-content: space-between; align-items: center;">
                                <h4><strong>صافي التغيير في النقد</strong></h4>
                                <h4 class="@(cashFlowStatement.NetChangeInCash >= 0 ? "balance-positive" : "balance-negative")">
                                    <strong>@cashFlowStatement.NetChangeInCash.ToString("C")</strong>
                                </h4>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- حقوق الملكية -->
            <div class="tab-content @(activeTab == "equity" ? "active" : "")">
                <div class="statement-section">
                    <div class="card-header">
                        <h3><i class="fas fa-share-alt"></i> بيان حقوق الملكية</h3>
                    </div>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>رمز الحساب</th>
                                <th>اسم الحساب</th>
                                <th class="text-center">الرصيد الافتتاحي</th>
                                <th class="text-center">التغيير</th>
                                <th class="text-center">الرصيد الختامي</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in equityStatement.EquityItems)
                            {
                                <tr>
                                    <td>@item.AccountCode</td>
                                    <td>@item.AccountName</td>
                                    <td class="text-center">@item.BeginningBalance.ToString("C")</td>
                                    <td class="text-center @(item.Change >= 0 ? "balance-positive" : "balance-negative")">
                                        @item.Change.ToString("C")
                                    </td>
                                    <td class="text-center">@item.EndingBalance.ToString("C")</td>
                                </tr>
                            }
                            <tr class="total-row">
                                <td colspan="3"><strong>إجمالي التغيير</strong></td>
                                <td class="text-center @(equityStatement.TotalEquityChange >= 0 ? "balance-positive" : "balance-negative")">
                                    <strong>@equityStatement.TotalEquityChange.ToString("C")</strong>
                                </td>
                                <td></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private bool isLoading = true;
    private bool hasError = false;
    private string activeTab = "income";
    private string IncomeString = "income";
    private string BalanceString = "balance";
    private string CashString = "cash";
    private string EquityString = "equity";
    private DateTime fromDate = new DateTime(DateTime.Now.Year, 1, 1);
    private DateTime toDate = DateTime.Now;

    private FinancialStatementsSummaryDto summary = new FinancialStatementsSummaryDto();
    private IncomeStatementDto incomeStatement = new IncomeStatementDto();
    private BalanceSheetDto balanceSheet = new BalanceSheetDto();
    private CashFlowStatementDto cashFlowStatement = new CashFlowStatementDto();
    private EquityStatementDto equityStatement = new EquityStatementDto();

    protected override async Task OnInitializedAsync()
    {
        await GenerateAllStatements();
    }

    private async Task GenerateAllStatements()
    {
        try
        {
            isLoading = true;
            hasError = false;
            StateHasChanged();

            summary = await FinancialStatementsService.GenerateFinancialStatementsSummaryAsync(fromDate, toDate);
            incomeStatement = await FinancialStatementsService.GenerateIncomeStatementAsync(fromDate, toDate);
            balanceSheet = await FinancialStatementsService.GenerateBalanceSheetAsync(toDate);
            cashFlowStatement = await FinancialStatementsService.GenerateCashFlowStatementAsync(fromDate, toDate);
            equityStatement = await FinancialStatementsService.GenerateEquityStatementAsync(fromDate, toDate);

            ToastService.ShowSuccess("تم توليد القوائم المالية بنجاح", "نجاح");
        }
        catch (Exception ex)
        {
            hasError = true;
            ToastService.ShowError($"حدث خطأ أثناء توليد القوائم: {ex.Message}", "خطأ");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void SwitchTab(string tab)
    {
        activeTab = tab;
    }

    private void SetDefaultDates()
    {
        // تعيين الفترات الافتراضية (مثلاً بداية ونهاية السنة الحالية)
        var now = DateTime.Now;
        fromDate = new DateTime(now.Year, 1, 1);
        toDate = new DateTime(now.Year, 12, 31);
    }

    private async Task ExportToExcel()
    {
        try
        {
            var excelData = await FinancialStatementsService.ExportIncomeStatementToExcelAsync(fromDate, toDate);
            // هنا يتم تنفيذ التنزيل
            ToastService.ShowSuccess("تم تصدير القوائم إلى Excel بنجاح", "نجاح");
        }
        catch (Exception ex)
        {
            ToastService.ShowError($"حدث خطأ أثناء التصدير: {ex.Message}", "خطأ");
        }
    }

    private async Task ExportToPdf()
    {
        try
        {
            var pdfData = await FinancialStatementsService.ExportFinancialStatementsToPdfAsync(fromDate, toDate);
            // هنا يتم تنفيذ التنزيل
            ToastService.ShowSuccess("تم تصدير القوائم إلى PDF بنجاح", "نجاح");
        }
        catch (Exception ex)
        {
            ToastService.ShowError($"حدث خطأ أثناء التصدير: {ex.Message}", "خطأ");
        }
    }

    private void PrintStatements()
    {
        // تنفيذ الطباعة
        ToastService.ShowInfo("جاري تحضير الطباعة...", "طباعة");
        // يمكنك إضافة كود الطباعة هنا
    }
}